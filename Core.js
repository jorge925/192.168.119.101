Airdroid = {};
Core = {_copyFunction:function (b) {
    return function () {
        b.apply(this, arguments)
    }
}, _createFunction:function () {
    return function () {
    }
}, extend:function () {
    var l = arguments.length == 1 ? null : arguments[0];
    var m = arguments.length == 1 ? arguments[0] : arguments[1];
    var j, o;
    if (arguments.length == 2) {
        if (typeof(l) != "function") {
            throw new Error("Base class is not a function, cannot derive.")
        }
    }
    if (!m) {
        throw new Error("Object definition not provided.")
    }
    var k;
    if (m.$construct) {
        k = m.$construct;
        delete m.$construct
    } else {
        if (l) {
            k = Core._copyFunction(l)
        } else {
            k = Core._createFunction()
        }
    }
    k.$virtual = {};
    k.$super = l;
    if (l) {
        var n = Core._createFunction();
        n.prototype = l.prototype;
        k.prototype = new n()
    }
    k.prototype.constructor = k;
    if (m.$abstract) {
        k.$abstract = {};
        if (l && l.$abstract) {
            for (j in l.$abstract) {
                k.$abstract[j] = l.$abstract[j]
            }
        }
        if (m.$abstract instanceof Object) {
            for (j in m.$abstract) {
                k.$abstract[j] = true;
                k.$virtual[j] = true
            }
        }
        delete m.$abstract
    }
    if (l) {
        for (o in l.$virtual) {
            k.$virtual[o] = l.$virtual[o]
        }
    }
    if (m.$virtual) {
        Core._inherit(k.prototype, m.$virtual, k.$virtual);
        for (o in m.$virtual) {
            k.$virtual[o] = true
        }
        delete m.$virtual
    }
    if (m.hasOwnProperty("toString")) {
        k.prototype.toString = m.toString
    }
    if (m.hasOwnProperty("valueOf")) {
        k.prototype.valueOf = m.valueOf
    }
    delete m.toString;
    delete m.valueOf;
    if (m.$include) {
        var q = m.$include.reverse();
        Core._processMixins(k, q);
        delete m.$include
    }
    var p = null;
    if (m.$load) {
        p = m.$load;
        delete m.$load
    }
    if (m.$static) {
        Core._inherit(k, m.$static);
        delete m.$static
    }
    Core._inherit(k.prototype, m, k.$virtual);
    if (!k.$abstract) {
        this._verifyAbstractImpl(k)
    }
    if (p) {
        p.call(k)
    }
    return k
}, get:function (f, g) {
    for (var e = 0; e < g.length; ++e) {
        f = f[g[e]];
        if (!f) {
            return null
        }
    }
    return f
}, _isVirtual:function (c, e) {
    switch (e) {
        case"toString":
        case"valueOf":
            return true
    }
    return c[e]
}, _inherit:function (f, g, h) {
    for (var e in g) {
        if (h && f[e] !== undefined && !this._isVirtual(h, e)) {
            throw new Error('Cannot override non-virtual property "' + e + '".')
        } else {
            f[e] = g[e]
        }
    }
}, method:function (e, c) {
    return function () {
        return c.apply(e, arguments)
    }
}, _processMixins:function (e, h) {
    for (var g = 0; g < h.length; ++g) {
        for (var f in h[g]) {
            if (e.prototype[f]) {
                continue
            }
            e.prototype[f] = h[g][f]
        }
    }
}, set:function (g, h, j) {
    var k = null;
    for (var f = 0; f < h.length - 1; ++f) {
        k = g;
        g = g[h[f]];
        if (!g) {
            g = {};
            k[h[f]] = g
        }
    }
    g[h[h.length - 1]] = j
}, _verifyAbstractImpl:function (e) {
    var g = e.$super;
    if (!g || !g.$abstract || g.$abstract === true) {
        return
    }
    for (var f in g.$abstract) {
        if (e.prototype[f] == null) {
            throw new Error('Concrete class does not provide implementation of abstract method "' + f + '".')
        }
    }
}};
Core.Debug = {consoleElement:null, useAlertDialog:false, consoleWrite:function (c) {
    if (Core.Debug.consoleElement) {
        var e = document.createElement("div");
        e.appendChild(document.createTextNode(c));
        if (Core.Debug.consoleElement.childNodes.length === 0) {
            Core.Debug.consoleElement.appendChild(e)
        } else {
            Core.Debug.consoleElement.insertBefore(e, Core.Debug.consoleElement.firstChild)
        }
    } else {
        if (Core.Debug.useAlertDialog) {
            alert("DEBUG:" + c)
        }
    }
}, toString:function (e) {
    var g = "";
    for (var f in e) {
        if (typeof e[f] != "function") {
            g += f + ":" + e[f] + "\n"
        }
    }
    return g
}};
Core.Arrays = {containsAll:function (l, n, k) {
    if (k && l.length < n.length) {
        return false
    }
    if (n.length === 0) {
        return true
    }
    var m, o;
    for (var h = 0; h < n.length; ++h) {
        m = false;
        o = n[h];
        for (var j = 0; j < l.length; ++j) {
            if (o == l[j]) {
                m = true;
                break
            }
        }
        if (!m) {
            return false
        }
    }
    return true
}, indexOf:function (g, e) {
    for (var f = 0; f < g.length; ++f) {
        if (e == g[f]) {
            return f
        }
    }
    return -1
}, remove:function (g, e) {
    for (var f = 0; f < g.length; ++f) {
        if (e == g[f]) {
            g.splice(f, 1);
            return
        }
    }
}, removeDuplicates:function (g) {
    g.sort();
    var e = 0;
    for (var f = g.length - 1; f > 0; --f) {
        if (g[f] == g[f - 1]) {
            g[f] = g[g.length - 1 - e];
            ++e
        }
    }
    if (e > 0) {
        g.length = g.length - e
    }
}};
Core.Arrays.LargeMap = Core.extend({$static:{garbageCollectEnabled:false}, _removeCount:0, garbageCollectionInterval:250, map:null, $construct:function () {
    this.map = {}
}, _garbageCollect:function () {
    this._removeCount = 0;
    var e = {};
    for (var c in this.map) {
        e[c] = this.map[c]
    }
    this.map = e
}, remove:function (b) {
    delete this.map[b];
    if (Core.Arrays.LargeMap.garbageCollectEnabled) {
        ++this._removeCount;
        if (this._removeCount >= this.garbageCollectionInterval) {
            this._garbageCollect()
        }
    }
}, toString:function () {
    return Core.Debug.toString(this.map)
}});
Core.ListenerList = Core.extend({_data:null, $construct:function () {
    this._data = []
}, addListener:function (e, c) {
    this._data.push(e, c)
}, fireEvent:function (g) {
    if (g.type == null) {
        throw new Error("Cannot fire event, type property not set.")
    }
    var f, h = true, e = [];
    for (f = 0; f < this._data.length; f += 2) {
        if (this._data[f] == g.type) {
            e.push(this._data[f + 1])
        }
    }
    for (f = 0; f < e.length; ++f) {
        h = e[f](g) && h
    }
    return h
}, getListenerTypes:function () {
    var c = [];
    for (var e = 0; e < this._data.length; e += 2) {
        c.push(this._data[e])
    }
    Core.Arrays.removeDuplicates(c);
    return c
}, getListeners:function (e) {
    var g = [];
    for (var f = 0; f < this._data.length; f += 2) {
        if (this._data[f] == e) {
            g.push(this._data[f + 1])
        }
    }
    return g
}, getListenerCount:function (e) {
    var g = 0;
    for (var f = 0; f < this._data.length; f += 2) {
        if (this._data[f] == e) {
            ++g
        }
    }
    return g
}, hasListeners:function (c) {
    for (var e = 0; e < this._data.length; e += 2) {
        if (this._data[e] == c) {
            return true
        }
    }
    return false
}, isEmpty:function () {
    return this._data.length === 0
}, removeListener:function (e, g) {
    for (var f = 0; f < this._data.length; f += 2) {
        if (this._data[f] == e && g == this._data[f + 1]) {
            var h = this._data.length;
            this._data.splice(f, 2);
            return
        }
    }
}, toString:function () {
    var e = "";
    for (var c = 0; c < this._data.length; c += 2) {
        if (c > 0) {
            e += ", "
        }
        e += this._data[c] + ":" + this._data[c + 1]
    }
    return e
}});
Core.ResourceBundle = Core.extend({$static:{getParentLanguageCode:function (b) {
    if (b.indexOf("-") == -1) {
        return null
    } else {
        return b.substring(0, b.indexOf("-"))
    }
}}, _sourceMaps:null, _generatedMaps:null, _defaultMap:null, $construct:function (b) {
    this._sourceMaps = {};
    this._generatedMaps = {};
    this._defaultMap = b
}, get:function (j) {
    var k = j ? this._generatedMaps[j] : this._defaultMap;
    if (k) {
        return k
    }
    k = {};
    var g;
    var h = this._sourceMaps[j];
    if (h) {
        for (g in h) {
            k[g] = h[g]
        }
    }
    var f = Core.ResourceBundle.getParentLanguageCode(j);
    if (f) {
        h = this._sourceMaps[f];
        if (h) {
            for (g in h) {
                if (k[g] === undefined) {
                    k[g] = h[g]
                }
            }
        }
    }
    for (g in this._defaultMap) {
        if (k[g] === undefined) {
            k[g] = this._defaultMap[g]
        }
    }
    this._generatedMaps[j] = k;
    return k
}, set:function (c, e) {
    this._generatedMaps = {};
    this._sourceMaps[c] = e
}, toString:function () {
    var c = "ResourceBundle: ";
    for (var e in this._sourceMaps) {
        c += " " + e
    }
    return c
}});
(function (aR, aP) {
    function af(b) {
        return aL.isWindow(b) ? b : b.nodeType === 9 ? b.defaultView || b.parentWindow : !1
    }

    function al(f) {
        if (!cn[f]) {
            var e = aL("<" + f + ">").appendTo("body"), g = e.css("display");
            e.remove();
            if (g === "none" || g === "") {
                g = "block"
            }
            cn[f] = g
        }
        return cn[f]
    }

    function an(f, e) {
        var g = {};
        aL.each(ao.concat.apply([], ao.slice(0, e)), function () {
            g[this] = f
        });
        return g
    }

    function c2() {
        try {
            return new aR.ActiveXObject("Microsoft.XMLHTTP")
        } catch (a) {
        }
    }

    function cu() {
        try {
            return new aR.XMLHttpRequest
        } catch (a) {
        }
    }

    function cw() {
        aL(aR).unload(function () {
            for (var b in cz) {
                cz[b](0, 1)
            }
        })
    }

    function cI(C, B) {
        C.dataFilter && (B = C.dataFilter(B, C.dataType));
        var A = C.dataTypes, z = {}, y, x, w = A.length, v, u = A[0], t, s, r, q, b;
        for (y = 1; y < w; y++) {
            if (y === 1) {
                for (x in C.converters) {
                    typeof x === "string" && (z[x.toLowerCase()] = C.converters[x])
                }
            }
            t = u, u = A[y];
            if (u === "*") {
                u = t
            } else {
                if (t !== "*" && t !== u) {
                    s = t + " " + u, r = z[s] || z["* " + u];
                    if (!r) {
                        b = aP;
                        for (q in z) {
                            v = q.split(" ");
                            if (v[0] === t || v[0] === "*") {
                                b = z[v[1] + " " + u];
                                if (b) {
                                    q = z[q], q === !0 ? r = b : b === !0 && (r = q);
                                    break
                                }
                            }
                        }
                    }
                    !r && !b && aL.error("No conversion from " + s.replace(" ", " to ")), r !== !0 && (B = r ? r(B) : b(q(B)))
                }
            }
        }
        return B
    }

    function cJ(t, s, r) {
        var q = t.contents, p = t.dataTypes, o = t.responseFields, n, m, l, b;
        for (m in o) {
            m in r && (s[o[m]] = r[m])
        }
        while (p[0] === "*") {
            p.shift(), n === aP && (n = t.mimeType || s.getResponseHeader("content-type"))
        }
        if (n) {
            for (m in q) {
                if (q[m] && q[m].test(n)) {
                    p.unshift(m);
                    break
                }
            }
        }
        if (p[0] in r) {
            l = p[0]
        } else {
            for (m in r) {
                if (!p[0] || t.converters[m + " " + p[0]]) {
                    l = m;
                    break
                }
                b || (b = m)
            }
            l = l || b
        }
        if (l) {
            l !== p[0] && p.unshift(l);
            return r[l]
        }
    }

    function cK(h, g, l, k) {
        if (aL.isArray(g) && g.length) {
            aL.each(g, function (a, c) {
                l || aQ.test(h) ? k(h, c) : cK(h + "[" + (typeof c === "object" || aL.isArray(c) ? a : "") + "]", c, l, k)
            })
        } else {
            if (l || g == null || typeof g !== "object") {
                k(h, g)
            } else {
                if (aL.isArray(g) || aL.isEmptyObject(g)) {
                    k(h, "")
                } else {
                    for (var j in g) {
                        cK(h + "[" + j + "]", g[j], l, k)
                    }
                }
            }
        }
    }

    function cL(v, u, t, s, r, q) {
        r = r || u.dataTypes[0], q = q || {}, q[r] = !0;
        var p = v[r], o = 0, n = p ? p.length : 0, m = v === cR, b;
        for (; o < n && (m || !b); o++) {
            b = p[o](u, t, s), typeof b === "string" && (!m || q[b] ? b = aP : (u.dataTypes.unshift(b), b = cL(v, u, t, s, b, q)))
        }
        (m || !b) && !q["*"] && (b = cL(v, u, t, s, "*", q));
        return b
    }

    function cM(b) {
        return function (a, q) {
            typeof a !== "string" && (q = a, a = "*");
            if (aL.isFunction(q)) {
                var p = a.toLowerCase().split(cX), o = 0, n = p.length, m, l, k;
                for (; o < n; o++) {
                    m = p[o], k = /^\+/.test(m), k && (m = m.substr(1) || "*"), l = b[m] = b[m] || [], l[k ? "unshift" : "push"](q)
                }
            }
        }
    }

    function aU(h, g, l) {
        var k = g === "width" ? a1 : aZ, j = g === "width" ? h.offsetWidth : h.offsetHeight;
        if (l === "border") {
            return j
        }
        aL.each(k, function () {
            l || (j -= parseFloat(aL.css(h, "padding" + this)) || 0), l === "margin" ? j += parseFloat(aL.css(h, "margin" + this)) || 0 : j -= parseFloat(aL.css(h, "border" + this + "Width")) || 0
        });
        return j
    }

    function b7(e, c) {
        c.src ? aL.ajax({url:c.src, async:!1, dataType:"script"}) : aL.globalEval(c.text || c.textContent || c.innerHTML || ""), c.parentNode && c.parentNode.removeChild(c)
    }

    function b9(b) {
        return"getElementsByTagName" in b ? b.getElementsByTagName("*") : "querySelectorAll" in b ? b.querySelectorAll("*") : []
    }

    function ck(f, e) {
        if (e.nodeType === 1) {
            var g = e.nodeName.toLowerCase();
            e.clearAttributes(), e.mergeAttributes(f);
            if (g === "object") {
                e.outerHTML = f.outerHTML
            } else {
                if (g !== "input" || f.type !== "checkbox" && f.type !== "radio") {
                    if (g === "option") {
                        e.selected = f.defaultSelected
                    } else {
                        if (g === "input" || g === "textarea") {
                            e.defaultValue = f.defaultValue
                        }
                    }
                } else {
                    f.checked && (e.defaultChecked = e.checked = f.checked), e.value !== f.value && (e.value = f.value)
                }
            }
            e.removeAttribute(aL.expando)
        }
    }

    function aT(s, r) {
        if (r.nodeType === 1 && aL.hasData(s)) {
            var q = aL.expando, p = aL.data(s), o = aL.data(r, p);
            if (p = p[q]) {
                var n = p.events;
                o = o[q] = aL.extend({}, p);
                if (n) {
                    delete o.handle, o.events = {};
                    for (var m in n) {
                        for (var l = 0, k = n[m].length; l < k; l++) {
                            aL.event.add(r, m + (n[m][l].namespace ? "." : "") + n[m][l].namespace, n[m][l], n[m][l].data)
                        }
                    }
                }
            }
        }
    }

    function c1(e, c) {
        return aL.nodeName(e, "table") ? e.getElementsByTagName("tbody")[0] || e.appendChild(e.ownerDocument.createElement("tbody")) : e
    }

    function b8(g, f, j) {
        if (aL.isFunction(f)) {
            return aL.grep(g, function (b, k) {
                var c = !!f.call(b, k, b);
                return c === j
            })
        }
        if (f.nodeType) {
            return aL.grep(g, function (b, c) {
                return b === f === j
            })
        }
        if (typeof f === "string") {
            var h = aL.grep(g, function (b) {
                return b.nodeType === 1
            });
            if (cp.test(f)) {
                return aL.filter(f, h, !j)
            }
            f = aL.filter(f, h)
        }
        return aL.grep(g, function (b, c) {
            return aL.inArray(b, f) >= 0 === j
        })
    }

    function cj(b) {
        return !b || !b.parentNode || b.parentNode.nodeType === 11
    }

    function ct(e, c) {
        return(e && e !== "*" ? e + "." : "") + c.replace(aj, "`").replace(ah, "&")
    }

    function cv(K) {
        var J, I, H, G, F, E, D, C, B, A, z, y, x, w = [], v = [], u = aL._data(this, "events");
        if (K.liveFired !== this && u && u.live && !K.target.disabled && (!K.button || K.type !== "click")) {
            K.namespace && (y = new RegExp("(^|\\.)" + K.namespace.split(".").join("\\.(?:.*\\.)?") + "(\\.|$)")), K.liveFired = this;
            var r = u.live.slice(0);
            for (D = 0; D < r.length; D++) {
                F = r[D], F.origType.replace(am, "") === K.type ? v.push(F.selector) : r.splice(D--, 1)
            }
            G = aL(K.target).closest(v, K.currentTarget);
            for (C = 0, B = G.length; C < B; C++) {
                z = G[C];
                for (D = 0; D < r.length; D++) {
                    F = r[D];
                    if (z.selector === F.selector && (!y || y.test(F.namespace)) && !z.elem.disabled) {
                        E = z.elem, H = null;
                        if (F.preType === "mouseenter" || F.preType === "mouseleave") {
                            K.type = F.preType, H = aL(K.relatedTarget).closest(F.selector)[0]
                        }
                        (!H || H !== E) && w.push({elem:E, handleObj:F, level:z.level})
                    }
                }
            }
            for (C = 0, B = w.length; C < B; C++) {
                G = w[C];
                if (I && G.level > I) {
                    break
                }
                K.currentTarget = G.elem, K.data = G.handleObj.data, K.handleObj = G.handleObj, x = G.handleObj.origHandler.apply(G.elem, arguments);
                if (x === !1 || K.isPropagationStopped()) {
                    I = G.level, x === !1 && (J = !1);
                    if (K.isImmediatePropagationStopped()) {
                        break
                    }
                }
            }
            return J
        }
    }

    function cA(b, j, h) {
        var g = aL.extend({}, h[0]);
        g.type = b, g.originalEvent = {}, g.liveFired = aP, aL.event.handle.call(j, g), g.isDefaultPrevented() && h[0].preventDefault()
    }

    function ab() {
        return !0
    }

    function ac() {
        return !1
    }

    function aB(e) {
        for (var c in e) {
            if (c !== "toJSON") {
                return !1
            }
        }
        return !0
    }

    function aD(b, j, h) {
        if (h === aP && b.nodeType === 1) {
            h = b.getAttribute("data-" + j);
            if (typeof h === "string") {
                try {
                    h = h === "true" ? !0 : h === "false" ? !1 : h === "null" ? null : aL.isNaN(h) ? aF.test(h) ? aL.parseJSON(h) : h : parseFloat(h)
                } catch (g) {
                }
                aL.data(b, j, h)
            } else {
                h = aP
            }
        }
        return h
    }

    var aN = aR.document, aL = function () {
        function J() {
            if (!bh.isReady) {
                try {
                    aN.documentElement.doScroll("left")
                } catch (e) {
                    setTimeout(J, 1);
                    return
                }
                bh.ready()
            }
        }

        var bh = function (f, e) {
            return new bh.fn.init(f, e, be)
        }, bg = aR.jQuery, bf = aR.$, be, bd = /^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]+)$)/, bc = /\S/, bb = /^\s+/, ba = /\s+$/, Z = /\d/, Y = /^<(\w+)\s*\/?>(?:<\/\1>)?$/, X = /^[\],:{}\s]*$/, W = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, V = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, T = /(?:^|:|,)(?:\s*\[)+/g, R = /(webkit)[ \/]([\w.]+)/, P = /(opera)(?:.*version)?[ \/]([\w.]+)/, N = /(msie) ([\w.]+)/, L = /(mozilla)(?:.*? rv:([\w.]+))?/, I = navigator.userAgent, H, c, b, a = Object.prototype.toString, U = Object.prototype.hasOwnProperty, S = Array.prototype.push, Q = Array.prototype.slice, O = String.prototype.trim, M = Array.prototype.indexOf, K = {};
        bh.fn = bh.prototype = {constructor:bh, init:function (h, q, p) {
            var o, n, m, l;
            if (!h) {
                return this
            }
            if (h.nodeType) {
                this.context = this[0] = h, this.length = 1;
                return this
            }
            if (h === "body" && !q && aN.body) {
                this.context = aN, this[0] = aN.body, this.selector = "body", this.length = 1;
                return this
            }
            if (typeof h === "string") {
                o = bd.exec(h);
                if (!o || !o[1] && q) {
                    return !q || q.jquery ? (q || p).find(h) : this.constructor(q).find(h)
                }
                if (o[1]) {
                    q = q instanceof bh ? q[0] : q, l = q ? q.ownerDocument || q : aN, m = Y.exec(h), m ? bh.isPlainObject(q) ? (h = [aN.createElement(m[1])], bh.fn.attr.call(h, q, !0)) : h = [l.createElement(m[1])] : (m = bh.buildFragment([o[1]], [l]), h = (m.cacheable ? bh.clone(m.fragment) : m.fragment).childNodes);
                    return bh.merge(this, h)
                }
                n = aN.getElementById(o[2]);
                if (n && n.parentNode) {
                    if (n.id !== o[2]) {
                        return p.find(h)
                    }
                    this.length = 1, this[0] = n
                }
                this.context = aN, this.selector = h;
                return this
            }
            if (bh.isFunction(h)) {
                return p.ready(h)
            }
            h.selector !== aP && (this.selector = h.selector, this.context = h.context);
            return bh.makeArray(h, this)
        }, selector:"", jquery:"1.5.2", length:0, size:function () {
            return this.length
        }, toArray:function () {
            return Q.call(this, 0)
        }, get:function (e) {
            return e == null ? this.toArray() : e < 0 ? this[this.length + e] : this[e]
        }, pushStack:function (g, f, j) {
            var h = this.constructor();
            bh.isArray(g) ? S.apply(h, g) : bh.merge(h, g), h.prevObject = this, h.context = this.context, f === "find" ? h.selector = this.selector + (this.selector ? " " : "") + j : f && (h.selector = this.selector + "." + f + "(" + j + ")");
            return h
        }, each:function (f, e) {
            return bh.each(this, f, e)
        }, ready:function (e) {
            bh.bindReady(), c.done(e);
            return this
        }, eq:function (e) {
            return e === -1 ? this.slice(e) : this.slice(e, +e + 1)
        }, first:function () {
            return this.eq(0)
        }, last:function () {
            return this.eq(-1)
        }, slice:function () {
            return this.pushStack(Q.apply(this, arguments), "slice", Q.call(arguments).join(","))
        }, map:function (e) {
            return this.pushStack(bh.map(this, function (f, g) {
                return e.call(f, g, f)
            }))
        }, end:function () {
            return this.prevObject || this.constructor(null)
        }, push:S, sort:[].sort, splice:[].splice}, bh.fn.init.prototype = bh.fn, bh.extend = bh.fn.extend = function () {
            var v, u, t, s, r, q, p = arguments[0] || {}, o = 1, n = arguments.length, m = !1;
            typeof p === "boolean" && (m = p, p = arguments[1] || {}, o = 2), typeof p !== "object" && !bh.isFunction(p) && (p = {}), n === o && (p = this, --o);
            for (; o < n; o++) {
                if ((v = arguments[o]) != null) {
                    for (u in v) {
                        t = p[u], s = v[u];
                        if (p === s) {
                            continue
                        }
                        m && s && (bh.isPlainObject(s) || (r = bh.isArray(s))) ? (r ? (r = !1, q = t && bh.isArray(t) ? t : []) : q = t && bh.isPlainObject(t) ? t : {}, p[u] = bh.extend(m, q, s)) : s !== aP && (p[u] = s)
                    }
                }
            }
            return p
        }, bh.extend({noConflict:function (e) {
            aR.$ = bf, e && (aR.jQuery = bg);
            return bh
        }, isReady:!1, readyWait:1, ready:function (e) {
            e === !0 && bh.readyWait--;
            if (!bh.readyWait || e !== !0 && !bh.isReady) {
                if (!aN.body) {
                    return setTimeout(bh.ready, 1)
                }
                bh.isReady = !0;
                if (e !== !0 && --bh.readyWait > 0) {
                    return
                }
                c.resolveWith(aN, [bh]), bh.fn.trigger && bh(aN).trigger("ready").unbind("ready")
            }
        }, bindReady:function () {
            if (!c) {
                c = bh._Deferred();
                if (aN.readyState === "complete") {
                    return setTimeout(bh.ready, 1)
                }
                if (aN.addEventListener) {
                    aN.addEventListener("DOMContentLoaded", b, !1), aR.addEventListener("load", bh.ready, !1)
                } else {
                    if (aN.attachEvent) {
                        aN.attachEvent("onreadystatechange", b), aR.attachEvent("onload", bh.ready);
                        var f = !1;
                        try {
                            f = aR.frameElement == null
                        } catch (g) {
                        }
                        aN.documentElement.doScroll && f && J()
                    }
                }
            }
        }, isFunction:function (e) {
            return bh.type(e) === "function"
        }, isArray:Array.isArray || function (e) {
            return bh.type(e) === "array"
        }, isWindow:function (e) {
            return e && typeof e === "object" && "setInterval" in e
        }, isNaN:function (e) {
            return e == null || !Z.test(e) || isNaN(e)
        }, type:function (e) {
            return e == null ? String(e) : K[a.call(e)] || "object"
        }, isPlainObject:function (e) {
            if (!e || bh.type(e) !== "object" || e.nodeType || bh.isWindow(e)) {
                return !1
            }
            if (e.constructor && !U.call(e, "constructor") && !U.call(e.constructor.prototype, "isPrototypeOf")) {
                return !1
            }
            var f;
            for (f in e) {
            }
            return f === aP || U.call(e, f)
        }, isEmptyObject:function (f) {
            for (var e in f) {
                return !1
            }
            return !0
        }, error:function (e) {
            throw e
        }, parseJSON:function (e) {
            if (typeof e !== "string" || !e) {
                return null
            }
            e = bh.trim(e);
            if (X.test(e.replace(W, "@").replace(V, "]").replace(T, ""))) {
                return aR.JSON && aR.JSON.parse ? aR.JSON.parse(e) : (new Function("return " + e))()
            }
            bh.error("Invalid JSON: " + e)
        }, parseXML:function (f, h, g) {
            aR.DOMParser ? (g = new DOMParser, h = g.parseFromString(f, "text/xml")) : (h = new ActiveXObject("Microsoft.XMLDOM"), h.async = "false", h.loadXML(f)), g = h.documentElement, (!g || !g.nodeName || g.nodeName === "parsererror") && bh.error("Invalid XML: " + f);
            return h
        }, noop:function () {
        }, globalEval:function (g) {
            if (g && bc.test(g)) {
                var f = aN.head || aN.getElementsByTagName("head")[0] || aN.documentElement, h = aN.createElement("script");
                bh.support.scriptEval() ? h.appendChild(aN.createTextNode(g)) : h.text = g, f.insertBefore(h, f.firstChild), f.removeChild(h)
            }
        }, nodeName:function (f, e) {
            return f.nodeName && f.nodeName.toUpperCase() === e.toUpperCase()
        }, each:function (k, r, q) {
            var p, o = 0, n = k.length, m = n === aP || bh.isFunction(k);
            if (q) {
                if (m) {
                    for (p in k) {
                        if (r.apply(k[p], q) === !1) {
                            break
                        }
                    }
                } else {
                    for (; o < n;) {
                        if (r.apply(k[o++], q) === !1) {
                            break
                        }
                    }
                }
            } else {
                if (m) {
                    for (p in k) {
                        if (r.call(k[p], p, k[p]) === !1) {
                            break
                        }
                    }
                } else {
                    for (var l = k[0]; o < n && r.call(l, o, l) !== !1; l = k[++o]) {
                    }
                }
            }
            return k
        }, trim:O ? function (e) {
            return e == null ? "" : O.call(e)
        } : function (e) {
            return e == null ? "" : (e + "").replace(bb, "").replace(ba, "")
        }, makeArray:function (g, f) {
            var j = f || [];
            if (g != null) {
                var h = bh.type(g);
                g.length == null || h === "string" || h === "function" || h === "regexp" || bh.isWindow(g) ? S.call(j, g) : bh.merge(j, g)
            }
            return j
        }, inArray:function (f, e) {
            if (e.indexOf) {
                return e.indexOf(f)
            }
            for (var h = 0, g = e.length; h < g; h++) {
                if (e[h] === f) {
                    return h
                }
            }
            return -1
        }, merge:function (g, l) {
            var k = g.length, j = 0;
            if (typeof l.length === "number") {
                for (var h = l.length; j < h; j++) {
                    g[k++] = l[j]
                }
            } else {
                while (l[j] !== aP) {
                    g[k++] = l[j++]
                }
            }
            g.length = k;
            return g
        }, grep:function (j, h, o) {
            var n = [], m;
            o = !!o;
            for (var l = 0, k = j.length; l < k; l++) {
                m = !!h(j[l], l), o !== m && n.push(j[l])
            }
            return n
        }, map:function (j, h, o) {
            var n = [], m;
            for (var l = 0, k = j.length; l < k; l++) {
                m = h(j[l], l, o), m != null && (n[n.length] = m)
            }
            return n.concat.apply([], n)
        }, guid:1, proxy:function (f, h, g) {
            arguments.length === 2 && (typeof h === "string" ? (g = f, f = g[h], h = aP) : h && !bh.isFunction(h) && (g = h, h = aP)), !h && f && (h = function () {
                return f.apply(g || this, arguments)
            }), f && (h.guid = f.guid = f.guid || h.guid || bh.guid++);
            return h
        }, access:function (t, s, r, q, p, o) {
            var n = t.length;
            if (typeof s === "object") {
                for (var m in s) {
                    bh.access(t, m, s[m], q, p, r)
                }
                return t
            }
            if (r !== aP) {
                q = !o && q && bh.isFunction(r);
                for (var l = 0; l < n; l++) {
                    p(t[l], s, q ? r.call(t[l], l, p(t[l], s)) : r, o)
                }
                return t
            }
            return n ? p(t[0], s) : aP
        }, now:function () {
            return(new Date).getTime()
        }, uaMatch:function (f) {
            f = f.toLowerCase();
            var e = R.exec(f) || P.exec(f) || N.exec(f) || f.indexOf("compatible") < 0 && L.exec(f) || [];
            return{browser:e[1] || "", version:e[2] || "0"}
        }, sub:function () {
            function g(e, j) {
                return new g.fn.init(e, j)
            }

            bh.extend(!0, g, this), g.superclass = this, g.fn = g.prototype = this(), g.fn.constructor = g, g.subclass = this.subclass, g.fn.init = function f(e, j) {
                j && j instanceof bh && !(j instanceof g) && (j = g(j));
                return bh.fn.init.call(this, e, j, h)
            }, g.fn.init.prototype = g.fn;
            var h = g(aN);
            return g
        }, browser:{}}), bh.each("Boolean Number String Function Array Date RegExp Object".split(" "), function (f, e) {
            K["[object " + e + "]"] = e.toLowerCase()
        }), H = bh.uaMatch(I), H.browser && (bh.browser[H.browser] = !0, bh.browser.version = H.version), bh.browser.webkit && (bh.browser.safari = !0), M && (bh.inArray = function (f, e) {
            return M.call(e, f)
        }), bc.test(" ") && (bb = /^[\s\xA0]+/, ba = /[\s\xA0]+$/), be = bh(aN), aN.addEventListener ? b = function () {
            aN.removeEventListener("DOMContentLoaded", b, !1), bh.ready()
        } : aN.attachEvent && (b = function () {
            aN.readyState === "complete" && (aN.detachEvent("onreadystatechange", b), bh.ready())
        });
        return bh
    }(), aJ = "then done fail isResolved isRejected promise".split(" "), aH = [].slice;
    aL.extend({_Deferred:function () {
        var h = [], g, l, k, j = {done:function () {
            if (!k) {
                var n = arguments, m, f, e, b, a;
                g && (a = g, g = 0);
                for (m = 0, f = n.length; m < f; m++) {
                    e = n[m], b = aL.type(e), b === "array" ? j.done.apply(j, e) : b === "function" && h.push(e)
                }
                a && j.resolveWith(a[0], a[1])
            }
            return this
        }, resolveWith:function (b, a) {
            if (!k && !g && !l) {
                a = a || [], l = 1;
                try {
                    while (h[0]) {
                        h.shift().apply(b, a)
                    }
                } finally {
                    g = [b, a], l = 0
                }
            }
            return this
        }, resolve:function () {
            j.resolveWith(this, arguments);
            return this
        }, isResolved:function () {
            return l || g
        }, cancel:function () {
            k = 1, h = [];
            return this
        }};
        return j
    }, Deferred:function (g) {
        var e = aL._Deferred(), j = aL._Deferred(), h;
        aL.extend(e, {then:function (b, f) {
            e.done(b).fail(f);
            return this
        }, fail:j.done, rejectWith:j.resolveWith, reject:j.resolve, isRejected:j.isResolved, promise:function (b) {
            if (b == null) {
                if (h) {
                    return h
                }
                h = b = {}
            }
            var f = aJ.length;
            while (f--) {
                b[aJ[f]] = e[aJ[f]]
            }
            return b
        }}), e.done(j.cancel).fail(e.cancel), delete e.cancel, g && g.call(e, e);
        return e
    }, when:function (j) {
        function k(b) {
            return function (a) {
                f[b] = arguments.length > 1 ? aH.call(arguments, 0) : a, --m || l.resolveWith(l, aH.call(f, 0))
            }
        }

        var f = arguments, o = 0, n = f.length, m = n, l = n <= 1 && j && aL.isFunction(j.promise) ? j : aL.Deferred();
        if (n > 1) {
            for (; o < n; o++) {
                f[o] && aL.isFunction(f[o].promise) ? f[o].promise().then(k(o), l.reject) : --m
            }
            m || l.resolveWith(l, f)
        } else {
            l !== j && l.resolveWith(l, n ? [j] : [])
        }
        return l.promise()
    }}), function () {
        aL.support = {};
        var w = aN.createElement("div");
        w.style.display = "none", w.innerHTML = "   <link/><table></table><a href='a.htm'/*tpa=http://192.168.119.101:8888/a*/ style='color:red;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
        var v = w.getElementsByTagName("*"), u = w.getElementsByTagName("a")[0], t = aN.createElement("select"), s = t.appendChild(aN.createElement("option")), r = w.getElementsByTagName("input")[0];
        if (v && v.length && u) {
            aL.support = {leadingWhitespace:w.firstChild.nodeType === 3, tbody:!w.getElementsByTagName("tbody").length, htmlSerialize:!!w.getElementsByTagName("link").length, style:/red/.test(u.getAttribute("style")), hrefNormalized:u.getAttribute("href") === "/a", opacity:/^0.55$/.test(u.style.opacity), cssFloat:!!u.style.cssFloat, checkOn:r.value === "on", optSelected:s.selected, deleteExpando:!0, optDisabled:!1, checkClone:!1, noCloneEvent:!0, noCloneChecked:!0, boxModel:null, inlineBlockNeedsLayout:!1, shrinkWrapBlocks:!1, reliableHiddenOffsets:!0, reliableMarginRight:!0}, r.checked = !0, aL.support.noCloneChecked = r.cloneNode(!0).checked, t.disabled = !0, aL.support.optDisabled = !s.disabled;
            var q = null;
            aL.support.scriptEval = function () {
                if (q === null) {
                    var h = aN.documentElement, l = aN.createElement("script"), k = "script" + aL.now();
                    try {
                        l.appendChild(aN.createTextNode("window." + k + "=1;"))
                    } catch (j) {
                    }
                    h.insertBefore(l, h.firstChild), aR[k] ? (q = !0, delete aR[k]) : q = !1, h.removeChild(l)
                }
                return q
            };
            try {
                delete w.test
            } catch (p) {
                aL.support.deleteExpando = !1
            }
            !w.addEventListener && w.attachEvent && w.fireEvent && (w.attachEvent("onclick", function o() {
                aL.support.noCloneEvent = !1, w.detachEvent("onclick", o)
            }), w.cloneNode(!0).fireEvent("onclick")), w = aN.createElement("div"), w.innerHTML = "<input type='radio' name='radiotest' checked='checked'/>";
            var c = aN.createDocumentFragment();
            c.appendChild(w.firstChild), aL.support.checkClone = c.cloneNode(!0).cloneNode(!0).lastChild.checked, aL(function () {
                var g = aN.createElement("div"), f = aN.getElementsByTagName("body")[0];
                if (f) {
                    g.style.width = g.style.paddingLeft = "1px", f.appendChild(g), aL.boxModel = aL.support.boxModel = g.offsetWidth === 2, "zoom" in g.style && (g.style.display = "inline", g.style.zoom = 1, aL.support.inlineBlockNeedsLayout = g.offsetWidth === 2, g.style.display = "", g.innerHTML = "<div style='width:4px;'></div>", aL.support.shrinkWrapBlocks = g.offsetWidth !== 2), g.innerHTML = "<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>";
                    var h = g.getElementsByTagName("td");
                    aL.support.reliableHiddenOffsets = h[0].offsetHeight === 0, h[0].style.display = "", h[1].style.display = "none", aL.support.reliableHiddenOffsets = aL.support.reliableHiddenOffsets && h[0].offsetHeight === 0, g.innerHTML = "", aN.defaultView && aN.defaultView.getComputedStyle && (g.style.width = "1px", g.style.marginRight = "0", aL.support.reliableMarginRight = (parseInt(aN.defaultView.getComputedStyle(g, null).marginRight, 10) || 0) === 0), f.removeChild(g).style.display = "none", g = h = null
                }
            });
            var a = function (f) {
                var e = aN.createElement("div");
                f = "on" + f;
                if (!e.attachEvent) {
                    return !0
                }
                var g = f in e;
                g || (e.setAttribute(f, "return;"), g = typeof e[f] === "function");
                return g
            };
            aL.support.submitBubbles = a("submit"), aL.support.changeBubbles = a("change"), w = v = u = null
        }
    }();
    var aF = /^(?:\{.*\}|\[.*\])$/;
    aL.extend({cache:{}, uuid:0, expando:"jQuery" + (aL.fn.jquery + Math.random()).replace(/\D/g, ""), noData:{embed:!0, object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000", applet:!0}, hasData:function (b) {
        b = b.nodeType ? aL.cache[b[aL.expando]] : b[aL.expando];
        return !!b && !aB(b)
    }, data:function (u, t, s, r) {
        if (aL.acceptData(u)) {
            var q = aL.expando, p = typeof t === "string", o, n = u.nodeType, m = n ? aL.cache : u, b = n ? u[aL.expando] : u[aL.expando] && aL.expando;
            if ((!b || r && b && !m[b][q]) && p && s === aP) {
                return
            }
            b || (n ? u[aL.expando] = b = ++aL.uuid : b = aL.expando), m[b] || (m[b] = {}, n || (m[b].toJSON = aL.noop));
            if (typeof t === "object" || typeof t === "function") {
                r ? m[b][q] = aL.extend(m[b][q], t) : m[b] = aL.extend(m[b], t)
            }
            o = m[b], r && (o[q] || (o[q] = {}), o = o[q]), s !== aP && (o[t] = s);
            if (t === "events" && !o[t]) {
                return o[q] && o[q].events
            }
            return p ? o[t] : o
        }
    }, removeData:function (t, s, r) {
        if (aL.acceptData(t)) {
            var q = aL.expando, p = t.nodeType, o = p ? aL.cache : t, n = p ? t[aL.expando] : aL.expando;
            if (!o[n]) {
                return
            }
            if (s) {
                var m = r ? o[n][q] : o[n];
                if (m) {
                    delete m[s];
                    if (!aB(m)) {
                        return
                    }
                }
            }
            if (r) {
                delete o[n][q];
                if (!aB(o[n])) {
                    return
                }
            }
            var a = o[n][q];
            aL.support.deleteExpando || o != aR ? delete o[n] : o[n] = null, a ? (o[n] = {}, p || (o[n].toJSON = aL.noop), o[n][q] = a) : p && (aL.support.deleteExpando ? delete t[aL.expando] : t.removeAttribute ? t.removeAttribute(aL.expando) : t[aL.expando] = null)
        }
    }, _data:function (f, e, g) {
        return aL.data(f, e, g, !0)
    }, acceptData:function (e) {
        if (e.nodeName) {
            var c = aL.noData[e.nodeName.toLowerCase()];
            if (c) {
                return c !== !0 && e.getAttribute("classid") === c
            }
        }
        return !0
    }}), aL.fn.extend({data:function (b, q) {
        var p = null;
        if (typeof b === "undefined") {
            if (this.length) {
                p = aL.data(this[0]);
                if (this[0].nodeType === 1) {
                    var o = this[0].attributes, n;
                    for (var m = 0, l = o.length; m < l; m++) {
                        n = o[m].name, n.indexOf("data-") === 0 && (n = n.substr(5), aD(this[0], n, p[n]))
                    }
                }
            }
            return p
        }
        if (typeof b === "object") {
            return this.each(function () {
                aL.data(this, b)
            })
        }
        var h = b.split(".");
        h[1] = h[1] ? "." + h[1] : "";
        if (q === aP) {
            p = this.triggerHandler("getData" + h[1] + "!", [h[0]]), p === aP && this.length && (p = aL.data(this[0], b), p = aD(this[0], b, p));
            return p === aP && h[1] ? this.data(h[0]) : p
        }
        return this.each(function () {
            var a = aL(this), c = [h[0], q];
            a.triggerHandler("setData" + h[1] + "!", c), aL.data(this, b, q), a.triggerHandler("changeData" + h[1] + "!", c)
        })
    }, removeData:function (b) {
        return this.each(function () {
            aL.removeData(this, b)
        })
    }}), aL.extend({queue:function (g, f, j) {
        if (g) {
            f = (f || "fx") + "queue";
            var h = aL._data(g, f);
            if (!j) {
                return h || []
            }
            !h || aL.isArray(j) ? h = aL._data(g, f, aL.makeArray(j)) : h.push(j);
            return h
        }
    }, dequeue:function (g, f) {
        f = f || "fx";
        var j = aL.queue(g, f), h = j.shift();
        h === "inprogress" && (h = j.shift()), h && (f === "fx" && j.unshift("inprogress"), h.call(g, function () {
            aL.dequeue(g, f)
        })), j.length || aL.removeData(g, f + "queue", !0)
    }}), aL.fn.extend({queue:function (b, e) {
        typeof b !== "string" && (e = b, b = "fx");
        if (e === aP) {
            return aL.queue(this[0], b)
        }
        return this.each(function (a) {
            var c = aL.queue(this, b, e);
            b === "fx" && c[0] !== "inprogress" && aL.dequeue(this, b)
        })
    }, dequeue:function (b) {
        return this.each(function () {
            aL.dequeue(this, b)
        })
    }, delay:function (e, c) {
        e = aL.fx ? aL.fx.speeds[e] || e : e, c = c || "fx";
        return this.queue(c, function () {
            var a = this;
            setTimeout(function () {
                aL.dequeue(a, c)
            }, e)
        })
    }, clearQueue:function (b) {
        return this.queue(b || "fx", [])
    }});
    var aA = /[\n\t\r]/g, az = /\s+/, ay = /\r/g, ax = /^(?:href|src|style)$/, aw = /^(?:button|input)$/i, au = /^(?:button|input|object|select|textarea)$/i, ar = /^a(?:rea)?$/i, ap = /^(?:radio|checkbox)$/i;
    aL.props = {"for":"htmlFor", "class":"className", readonly:"readOnly", maxlength:"maxLength", cellspacing:"cellSpacing", rowspan:"rowSpan", colspan:"colSpan", tabindex:"tabIndex", usemap:"useMap", frameborder:"frameBorder"}, aL.fn.extend({attr:function (e, c) {
        return aL.access(this, e, c, !0, aL.attr)
    }, removeAttr:function (e, c) {
        return this.each(function () {
            aL.attr(this, e, ""), this.nodeType === 1 && this.removeAttribute(e)
        })
    }, addClass:function (s) {
        if (aL.isFunction(s)) {
            return this.each(function (a) {
                var e = aL(this);
                e.addClass(s.call(this, a, e.attr("class")))
            })
        }
        if (s && typeof s === "string") {
            var r = (s || "").split(az);
            for (var q = 0, p = this.length; q < p; q++) {
                var o = this[q];
                if (o.nodeType === 1) {
                    if (o.className) {
                        var n = " " + o.className + " ", m = o.className;
                        for (var l = 0, k = r.length; l < k; l++) {
                            n.indexOf(" " + r[l] + " ") < 0 && (m += " " + r[l])
                        }
                        o.className = aL.trim(m)
                    } else {
                        o.className = s
                    }
                }
            }
        }
        return this
    }, removeClass:function (j) {
        if (aL.isFunction(j)) {
            return this.each(function (a) {
                var e = aL(this);
                e.removeClass(j.call(this, a, e.attr("class")))
            })
        }
        if (j && typeof j === "string" || j === aP) {
            var q = (j || "").split(az);
            for (var p = 0, o = this.length; p < o; p++) {
                var n = this[p];
                if (n.nodeType === 1 && n.className) {
                    if (j) {
                        var m = (" " + n.className + " ").replace(aA, " ");
                        for (var k = 0, b = q.length; k < b; k++) {
                            m = m.replace(" " + q[k] + " ", " ")
                        }
                        n.className = aL.trim(m)
                    } else {
                        n.className = ""
                    }
                }
            }
        }
        return this
    }, toggleClass:function (g, f) {
        var j = typeof g, h = typeof f === "boolean";
        if (aL.isFunction(g)) {
            return this.each(function (b) {
                var a = aL(this);
                a.toggleClass(g.call(this, b, a.attr("class"), f), f)
            })
        }
        return this.each(function () {
            if (j === "string") {
                var k, e = 0, c = aL(this), b = f, a = g.split(az);
                while (k = a[e++]) {
                    b = h ? b : !c.hasClass(k), c[b ? "addClass" : "removeClass"](k)
                }
            } else {
                if (j === "undefined" || j === "boolean") {
                    this.className && aL._data(this, "__className__", this.className), this.className = this.className || g === !1 ? "" : aL._data(this, "__className__") || ""
                }
            }
        })
    }, hasClass:function (f) {
        var e = " " + f + " ";
        for (var h = 0, g = this.length; h < g; h++) {
            if ((" " + this[h].className + " ").replace(aA, " ").indexOf(e) > -1) {
                return !0
            }
        }
        return !1
    }, val:function (w) {
        if (!arguments.length) {
            var v = this[0];
            if (v) {
                if (aL.nodeName(v, "option")) {
                    var u = v.attributes.value;
                    return !u || u.specified ? v.value : v.text
                }
                if (aL.nodeName(v, "select")) {
                    var t = v.selectedIndex, s = [], r = v.options, q = v.type === "select-one";
                    if (t < 0) {
                        return null
                    }
                    for (var p = q ? t : 0, o = q ? t + 1 : r.length; p < o; p++) {
                        var l = r[p];
                        if (l.selected && (aL.support.optDisabled ? !l.disabled : l.getAttribute("disabled") === null) && (!l.parentNode.disabled || !aL.nodeName(l.parentNode, "optgroup"))) {
                            w = aL(l).val();
                            if (q) {
                                return w
                            }
                            s.push(w)
                        }
                    }
                    if (q && !s.length && r.length) {
                        return aL(r[t]).val()
                    }
                    return s
                }
                if (ap.test(v.type) && !aL.support.checkOn) {
                    return v.getAttribute("value") === null ? "on" : v.value
                }
                return(v.value || "").replace(ay, "")
            }
            return aP
        }
        var b = aL.isFunction(w);
        return this.each(function (a) {
            var j = aL(this), h = w;
            if (this.nodeType === 1) {
                b && (h = w.call(this, a, j.val())), h == null ? h = "" : typeof h === "number" ? h += "" : aL.isArray(h) && (h = aL.map(h, function (c) {
                    return c == null ? "" : c + ""
                }));
                if (aL.isArray(h) && ap.test(this.type)) {
                    this.checked = aL.inArray(j.val(), h) >= 0
                } else {
                    if (aL.nodeName(this, "select")) {
                        var g = aL.makeArray(h);
                        aL("option", this).each(function () {
                            this.selected = aL.inArray(aL(this).val(), g) >= 0
                        }), g.length || (this.selectedIndex = -1)
                    } else {
                        this.value = h
                    }
                }
            }
        })
    }}), aL.extend({attrFn:{val:!0, css:!0, html:!0, text:!0, data:!0, width:!0, height:!0, offset:!0}, attr:function (u, t, s, r) {
        if (!u || u.nodeType === 3 || u.nodeType === 8 || u.nodeType === 2) {
            return aP
        }
        if (r && t in aL.attrFn) {
            return aL(u)[t](s)
        }
        var q = u.nodeType !== 1 || !aL.isXMLDoc(u), p = s !== aP;
        t = q && aL.props[t] || t;
        if (u.nodeType === 1) {
            var o = ax.test(t);
            if (t === "selected" && !aL.support.optSelected) {
                var n = u.parentNode;
                n && (n.selectedIndex, n.parentNode && n.parentNode.selectedIndex)
            }
            if ((t in u || u[t] !== aP) && q && !o) {
                p && (t === "type" && aw.test(u.nodeName) && u.parentNode && aL.error("type property can't be changed"), s === null ? u.nodeType === 1 && u.removeAttribute(t) : u[t] = s);
                if (aL.nodeName(u, "form") && u.getAttributeNode(t)) {
                    return u.getAttributeNode(t).nodeValue
                }
                if (t === "tabIndex") {
                    var m = u.getAttributeNode("tabIndex");
                    return m && m.specified ? m.value : au.test(u.nodeName) || ar.test(u.nodeName) && u.href ? 0 : aP
                }
                return u[t]
            }
            if (!aL.support.style && q && t === "style") {
                p && (u.style.cssText = "" + s);
                return u.style.cssText
            }
            p && u.setAttribute(t, "" + s);
            if (!u.attributes[t] && (u.hasAttribute && !u.hasAttribute(t))) {
                return aP
            }
            var b = !aL.support.hrefNormalized && q && o ? u.getAttribute(t, 2) : u.getAttribute(t);
            return b === null ? aP : b
        }
        p && (u[t] = s);
        return u[t]
    }});
    var am = /\.(.*)$/, ak = /^(?:textarea|input|select)$/i, aj = /\./g, ah = / /g, ae = /[^\w\s.|`]/g, ad = function (b) {
        return b.replace(ae, "\\$&")
    };
    aL.event = {add:function (E, D, C, B) {
        if (E.nodeType !== 3 && E.nodeType !== 8) {
            try {
                aL.isWindow(E) && (E !== aR && !E.frameElement) && (E = aR)
            } catch (A) {
            }
            if (C === !1) {
                C = ac
            } else {
                if (!C) {
                    return
                }
            }
            var z, y;
            C.handler && (z = C, C = z.handler), C.guid || (C.guid = aL.guid++);
            var x = aL._data(E);
            if (!x) {
                return
            }
            var w = x.events, v = x.handle;
            w || (x.events = w = {}), v || (x.handle = v = function (c) {
                return typeof aL !== "undefined" && aL.event.triggered !== c.type - aL.event.handle.apply(v.elem, arguments) - aP
            }), v.elem = E, D = D.split(.htm
            "/*tpa=http://192.168.119.101:8888/&&aL.event.triggered!==c.type?aL.event.handle.apply(v.elem,arguments):aP}),v.elem=E,D=D.split(*/ "
        )
            ;
            var u, t = 0, s;
            while (u = D[t++]) {
                y = z ? aL.extend({}, z) : {handler:C, data:B}, u.indexOf(".") > -1 ? (s = u.split("."), u = s.shift(), y.namespace = s.slice(0).sort().join(".")) : (s = [], y.namespace = ""), y.type = u, y.guid || (y.guid = C.guid);
                var b = w[u], a = aL.event.special[u] || {};
                if (!b) {
                    b = w[u] = [];
                    if (!a.setup || a.setup.call(E, B, s, v) === !1) {
                        E.addEventListener ? E.addEventListener(u, v, !1) : E.attachEvent && E.attachEvent("on" + u, v)
                    }
                }
                a.add && (a.add.call(E, y), y.handler.guid || (y.handler.guid = C.guid)), b.push(y), aL.event.global[u] = !0
            }
            E = null
        }
    }, global:{}, remove:function (M, L, K, J) {
        if (M.nodeType !== 3 && M.nodeType !== 8) {
            K === !1 && (K = ac);
            var I, H, G, F, E = 0, D, C, B, A, z, y, x, w = aL.hasData(M) && aL._data(M), v = w && w.events;
            if (!w || !v) {
                return
            }
            L && L.type && (K = L.handler, L = L.type);
            if (!L || typeof L === "string" && L.charAt(0) === ".") {
                L = L || "";
                for (H in v) {
                    aL.event.remove(M, H + L)
                }
                return
            }
            L = L.split(" ");
            while (H = L[E++]) {
                x = H, y = null, D = H.indexOf(".") < 0, C = [], D || (C = H.split("."), H = C.shift(), B = new RegExp("(^|\\.)" + aL.map(C.slice(0).sort(), ad).join("\\.(?:.*\\.)?") + "(\\.|$)")), z = v[H];
                if (!z) {
                    continue
                }
                if (!K) {
                    for (F = 0; F < z.length; F++) {
                        y = z[F];
                        if (D || B.test(y.namespace)) {
                            aL.event.remove(M, x, y.handler, F), z.splice(F--, 1)
                        }
                    }
                    continue
                }
                A = aL.event.special[H] || {};
                for (F = J || 0; F < z.length; F++) {
                    y = z[F];
                    if (K.guid === y.guid) {
                        if (D || B.test(y.namespace)) {
                            J == null && z.splice(F--, 1), A.remove && A.remove.call(M, y)
                        }
                        if (J != null) {
                            break
                        }
                    }
                }
                if (z.length === 0 || J != null && z.length === 1) {
                    (!A.teardown || A.teardown.call(M, C) === !1) && aL.removeEvent(M, H, w.handle), I = null, delete v[H]
                }
            }
            if (aL.isEmptyObject(v)) {
                var b = w.handle;
                b && (b.elem = null), delete w.events, delete w.handle, aL.isEmptyObject(w) && aL.removeData(M, aP, !0)
            }
        }
    }, trigger:function (C, B, A) {
        var z = C.type || C, y = arguments[3];
        if (!y) {
            C = typeof C === "object" ? C[aL.expando] ? C : aL.extend(aL.Event(z), C) : aL.Event(z), z.indexOf("!") >= 0 && (C.type = z = z.slice(0, -1), C.exclusive = !0), A || (C.stopPropagation(), aL.event.global[z] && aL.each(aL.cache, function () {
                var a = aL.expando, c = this[a];
                c && c.events && c.events[z] && aL.event.trigger(C, B, c.handle.elem)
            }));
            if (!A || A.nodeType === 3 || A.nodeType === 8) {
                return aP
            }
            C.result = aP, C.target = A, B = aL.makeArray(B), B.unshift(C)
        }
        C.currentTarget = A;
        var x = aL._data(A, "handle");
        x && x.apply(A, B);
        var w = A.parentNode || A.ownerDocument;
        try {
            A && A.nodeName && aL.noData[A.nodeName.toLowerCase()] || A["on" + z] && A["on" + z].apply(A, B) === !1 && (C.result = !1, C.preventDefault())
        } catch (v) {
        }
        if (!C.isPropagationStopped() && w) {
            aL.event.trigger(C, B, w, !0)
        } else {
            if (!C.isDefaultPrevented()) {
                var u, t = C.target, s = z.replace(am, ""), r = aL.nodeName(t, "a") && s === "click", q = aL.event.special[s] || {};
                if ((!q._default || q._default.call(A, C) === !1) && !r && !(t && t.nodeName && aL.noData[t.nodeName.toLowerCase()])) {
                    try {
                        t[s] && (u = t["on" + s], u && (t["on" + s] = null), aL.event.triggered = C.type, t[s]())
                    } catch (b) {
                    }
                    u && (t["on" + s] = u), aL.event.triggered = aP
                }
            }
        }
    }, handle:function (y) {
        var x, w, v, u, t, s = [], r = aL.makeArray(arguments);
        y = r[0] = aL.event.fix(y || aR.event), y.currentTarget = this, x = y.type.indexOf(".") < 0 && !y.exclusive, x || (v = y.type.split("."), y.type = v.shift(), s = v.slice(0).sort(), u = new RegExp("(^|\\.)" + s.join("\\.(?:.*\\.)?") + "(\\.|$)")), y.namespace = y.namespace || s.join("."), t = aL._data(this, "events"), w = (t || {})[y.type];
        if (t && w) {
            w = w.slice(0);
            for (var q = 0, p = w.length; q < p; q++) {
                var b = w[q];
                if (x || u.test(b.namespace)) {
                    y.handler = b.handler, y.data = b.data, y.handleObj = b;
                    var a = b.handler.apply(this, r);
                    a !== aP && (y.result = a, a === !1 && (y.preventDefault(), y.stopPropagation()));
                    if (y.isImmediatePropagationStopped()) {
                        break
                    }
                }
            }
        }
        return y.result
    }, props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "), fix:function (b) {
        if (b[aL.expando]) {
            return b
        }
        var m = b;
        b = aL.Event(m);
        for (var l = this.props.length, k; l;) {
            k = this.props[--l], b[k] = m[k]
        }
        b.target || (b.target = b.srcElement || aN), b.target.nodeType === 3 && (b.target = b.target.parentNode), !b.relatedTarget && b.fromElement && (b.relatedTarget = b.fromElement === b.target ? b.toElement : b.fromElement);
        if (b.pageX == null && b.clientX != null) {
            var j = aN.documentElement, c = aN.body;
            b.pageX = b.clientX + (j && j.scrollLeft || c && c.scrollLeft || 0) - (j && j.clientLeft || c && c.clientLeft || 0), b.pageY = b.clientY + (j && j.scrollTop || c && c.scrollTop || 0) - (j && j.clientTop || c && c.clientTop || 0)
        }
        b.which == null && (b.charCode != null || b.keyCode != null) && (b.which = b.charCode != null ? b.charCode : b.keyCode), !b.metaKey && b.ctrlKey && (b.metaKey = b.ctrlKey), !b.which && b.button !== aP && (b.which = b.button & 1 ? 1 : b.button & 2 ? 3 : b.button & 4 ? 2 : 0);
        return b
    }, guid:100000000, proxy:aL.proxy, special:{ready:{setup:aL.bindReady, teardown:aL.noop}, live:{add:function (b) {
        aL.event.add(this, ct(b.origType, b.selector), aL.extend({}, b, {handler:cv, guid:b.handler.guid}))
    }, remove:function (b) {
        aL.event.remove(this, ct(b.origType, b.selector), b)
    }}, beforeunload:{setup:function (f, e, g) {
        aL.isWindow(this) && (this.onbeforeunload = g)
    }, teardown:function (e, c) {
        this.onbeforeunload === c && (this.onbeforeunload = null)
    }}}}, aL.removeEvent = aN.removeEventListener ? function (f, e, g) {
        f.removeEventListener && f.removeEventListener(e, g, !1)
    } : function (f, e, g) {
        f.detachEvent && f.detachEvent("on" + e, g)
    }, aL.Event = function (b) {
        if (!this.preventDefault) {
            return new aL.Event(b)
        }
        b && b.type ? (this.originalEvent = b, this.type = b.type, this.isDefaultPrevented = b.defaultPrevented || b.returnValue === !1 || b.getPreventDefault && b.getPreventDefault() ? ab : ac) : this.type = b, this.timeStamp = aL.now(), this[aL.expando] = !0
    }, aL.Event.prototype = {preventDefault:function () {
        this.isDefaultPrevented = ab;
        var b = this.originalEvent;
        b && (b.preventDefault ? b.preventDefault() : b.returnValue = !1)
    }, stopPropagation:function () {
        this.isPropagationStopped = ab;
        var b = this.originalEvent;
        b && (b.stopPropagation && b.stopPropagation(), b.cancelBubble = !0)
    }, stopImmediatePropagation:function () {
        this.isImmediatePropagationStopped = ab, this.stopPropagation()
    }, isDefaultPrevented:ac, isPropagationStopped:ac, isImmediatePropagationStopped:ac};
    var aa = function (f) {
        var c = f.relatedTarget;
        try {
            if (c && c !== aN && !c.parentNode) {
                return
            }
            while (c && c !== this) {
                c = c.parentNode
            }
            c !== this && (f.type = f.data, aL.event.handle.apply(this, arguments))
        } catch (g) {
        }
    }, cH = function (b) {
        b.type = b.data, aL.event.handle.apply(this, arguments)
    };
    aL.each({mouseenter:"mouseover", mouseleave:"mouseout"}, function (e, c) {
        aL.event.special[e] = {setup:function (a) {
            aL.event.add(this, c, a && a.selector ? cH : aa, e)
        }, teardown:function (b) {
            aL.event.remove(this, c, b && b.selector ? cH : aa)
        }}
    }), aL.support.submitBubbles || (aL.event.special.submit = {setup:function (e, c) {
        if (this.nodeName && this.nodeName.toLowerCase() !== "form") {
            aL.event.add(this, "click.specialSubmit", function (g) {
                var f = g.target, h = f.type;
                (h === "submit" || h === "image") && aL(f).closest("form").length && cA("submit", this, arguments)
            }), aL.event.add(this, "keypress.specialSubmit", function (g) {
                var f = g.target, h = f.type;
                (h === "text" || h === "password") && aL(f).closest("form").length && g.keyCode === 13 && cA("submit", this, arguments)
            })
        } else {
            return !1
        }
    }, teardown:function (b) {
        aL.event.remove(this, ".specialSubmit")
    }});
    if (!aL.support.changeBubbles) {
        var cG, cE = function (f) {
            var e = f.type, g = f.value;
            e === "radio" || e === "checkbox" ? g = f.checked : e === "select-multiple" ? g = f.selectedIndex > -1 ? aL.map(f.options,function (b) {
                return b.selected
            }).join("-") : "" : f.nodeName.toLowerCase() === "select" && (g = f.selectedIndex);
            return g
        }, cC = function cC(b) {
            var j = b.target, h, g;
            if (ak.test(j.nodeName) && !j.readOnly) {
                h = aL._data(j, "_change_data"), g = cE(j), (b.type !== "focusout" || j.type !== "radio") && aL._data(j, "_change_data", g);
                if (h === aP || g === h) {
                    return
                }
                if (h != null || g) {
                    b.type = "change", b.liveFired = aP, aL.event.trigger(b, arguments[1], j)
                }
            }
        };
        aL.event.special.change = {filters:{focusout:cC, beforedeactivate:cC, click:function (f) {
            var e = f.target, g = e.type;
            (g === "radio" || g === "checkbox" || e.nodeName.toLowerCase() === "select") && cC.call(this, f)
        }, keydown:function (f) {
            var e = f.target, g = e.type;
            (f.keyCode === 13 && e.nodeName.toLowerCase() !== "textarea" || f.keyCode === 32 && (g === "checkbox" || g === "radio") || g === "select-multiple") && cC.call(this, f)
        }, beforeactivate:function (e) {
            var c = e.target;
            aL._data(c, "_change_data", cE(c))
        }}, setup:function (f, e) {
            if (this.type === "file") {
                return !1
            }
            for (var g in cG) {
                aL.event.add(this, g + ".specialChange", cG[g])
            }
            return ak.test(this.nodeName)
        }, teardown:function (b) {
            aL.event.remove(this, ".specialChange");
            return ak.test(this.nodeName)
        }}, cG = aL.event.special.change.filters, cG.focus = cG.beforeactivate
    }
    aN.addEventListener && aL.each({focus:"focusin", blur:"focusout"}, function (g, c) {
        function h(b) {
            var e = aL.event.fix(b);
            e.type = c, e.originalEvent = {}, aL.event.trigger(e, null, e.target), e.isDefaultPrevented() && b.preventDefault()
        }

        var j = 0;
        aL.event.special[c] = {setup:function () {
            j++ === 0 && aN.addEventListener(g, h, !0)
        }, teardown:function () {
            --j === 0 && aN.removeEventListener(g, h, !0)
        }}
    }), aL.each(["bind", "one"], function (b, e) {
        aL.fn[e] = function (c, p, o) {
            if (typeof c === "object") {
                for (var n in c) {
                    this[e](n, p, c[n], o)
                }
                return this
            }
            if (aL.isFunction(p) || p === !1) {
                o = p, p = aP
            }
            var m = e === "one" ? aL.proxy(o, function (f) {
                aL(this).unbind(f, m);
                return o.apply(this, arguments)
            }) : o;
            if (c === "unload" && e !== "one") {
                this.one(c, p, o)
            } else {
                for (var l = 0, k = this.length; l < k; l++) {
                    aL.event.add(this[l], c, m, p)
                }
            }
            return this
        }
    }), aL.fn.extend({unbind:function (h, g) {
        if (typeof h !== "object" || h.preventDefault) {
            for (var k = 0, j = this.length; k < j; k++) {
                aL.event.remove(this[k], h, g)
            }
        } else {
            for (var l in h) {
                this.unbind(l, h[l])
            }
        }
        return this
    }, delegate:function (f, e, h, g) {
        return this.live(e, h, g, f)
    }, undelegate:function (f, e, g) {
        return arguments.length === 0 ? this.unbind("live") : this.die(e, null, g, f)
    }, trigger:function (e, c) {
        return this.each(function () {
            aL.event.trigger(e, c, this)
        })
    }, triggerHandler:function (f, e) {
        if (this[0]) {
            var g = aL.Event(f);
            g.preventDefault(), g.stopPropagation(), aL.event.trigger(g, e, this[0]);
            return g.result
        }
    }, toggle:function (f) {
        var e = arguments, g = 1;
        while (g < e.length) {
            aL.proxy(f, e[g++])
        }
        return this.click(aL.proxy(f, function (b) {
            var a = (aL._data(this, "lastToggle" + f.guid) || 0) % g;
            aL._data(this, "lastToggle" + f.guid, a + 1), b.preventDefault();
            return e[a].apply(this, arguments) || !1
        }))
    }, hover:function (e, c) {
        return this.mouseenter(e).mouseleave(c || e)
    }});
    var cy = {focus:"focusin", blur:"focusout", mouseenter:"mouseover", mouseleave:"mouseout"};
    aL.each(["live", "die"], function (b, e) {
        aL.fn[e] = function (D, C, B, A) {
            var z, y = 0, x, w, v, u = A || this.selector, t = A ? this : aL(this.context);
            if (typeof D === "object" && !D.preventDefault) {
                for (var s in D) {
                    t[e](s, C, D[s], u)
                }
                return this
            }
            aL.isFunction(C) && (B = C, C = aP), D = (D || "").split(" ");
            while ((z = D[y++]) != null) {
                x = am.exec(z), w = "", x && (w = x[0], z = z.replace(am, ""));
                if (z === "hover") {
                    D.push("mouseenter" + w, "mouseleave" + w);
                    continue
                }
                v = z, z === "focus" || z === "blur" ? (D.push(cy[z] + w), z = z + w) : z = (cy[z] || z) + w;
                if (e === "live") {
                    for (var r = 0, c = t.length; r < c; r++) {
                        aL.event.add(t[r], "live." + ct(z, u), {data:C, selector:u, handler:B, origType:z, origHandler:B, preType:v})
                    }
                } else {
                    t.unbind("live." + ct(z, u), B)
                }
            }
            return this
        }
    }), aL.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "), function (e, c) {
        aL.fn[c] = function (b, f) {
            f == null && (f = b, b = null);
            return arguments.length > 0 ? this.bind(c, b, f) : this.trigger(c)
        }, aL.attrFn && (aL.attrFn[c] = !0)
    }), function () {
        function c(t, s, r, q, p, o) {
            for (var n = 0, m = q.length; n < m; n++) {
                var l = q[n];
                if (l) {
                    var k = !1;
                    l = l[t];
                    while (l) {
                        if (l.sizcache === r) {
                            k = q[l.sizset];
                            break
                        }
                        if (l.nodeType === 1) {
                            o || (l.sizcache = r, l.sizset = n);
                            if (typeof s !== "string") {
                                if (l === s) {
                                    k = !0;
                                    break
                                }
                            } else {
                                if (F.filter(s, [l]).length > 0) {
                                    k = l;
                                    break
                                }
                            }
                        }
                        l = l[t]
                    }
                    q[n] = k
                }
            }
        }

        function w(t, s, r, q, p, o) {
            for (var n = 0, m = q.length; n < m; n++) {
                var l = q[n];
                if (l) {
                    var k = !1;
                    l = l[t];
                    while (l) {
                        if (l.sizcache === r) {
                            k = q[l.sizset];
                            break
                        }
                        l.nodeType === 1 && !o && (l.sizcache = r, l.sizset = n);
                        if (l.nodeName.toLowerCase() === s) {
                            k = l;
                            break
                        }
                        l = l[t]
                    }
                    q[n] = k
                }
            }
        }

        var M = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g, L = 0, K = Object.prototype.toString, J = !1, I = !0, H = /\\/g, G = /\W/;
        [0, 0].sort(function () {
            I = !1;
            return 0
        });
        var F = function (R, P, O, N) {
            O = O || [], P = P || aN;
            var v = P;
            if (P.nodeType !== 1 && P.nodeType !== 9) {
                return[]
            }
            if (!R || typeof R !== "string") {
                return O
            }
            var p, m, l, k, f, a, W, V, U = !0, T = F.isXML(P), S = [], Q = R;
            do {
                M.exec(""), p = M.exec(Q);
                if (p) {
                    Q = p[3], S.push(p[1]);
                    if (p[2]) {
                        k = p[3];
                        break
                    }
                }
            } while (p);
            if (S.length > 1 && D.exec(R)) {
                if (S.length === 2 && E.relative[S[0]]) {
                    m = b(S[0] + S[1], P)
                } else {
                    m = E.relative[S[0]] ? [P] : F(S.shift(), P);
                    while (S.length) {
                        R = S.shift(), E.relative[R] && (R += S.shift()), m = b(R, m)
                    }
                }
            } else {
                !N && S.length > 1 && P.nodeType === 9 && !T && E.match.ID.test(S[0]) && !E.match.ID.test(S[S.length - 1]) && (f = F.find(S.shift(), P, T), P = f.expr ? F.filter(f.expr, f.set)[0] : f.set[0]);
                if (P) {
                    f = N ? {expr:S.pop(), set:A(N)} : F.find(S.pop(), S.length === 1 && (S[0] === "~" || S[0] === "+") && P.parentNode ? P.parentNode : P, T), m = f.expr ? F.filter(f.expr, f.set) : f.set, S.length > 0 ? l = A(m) : U = !1;
                    while (S.length) {
                        a = S.pop(), W = a, E.relative[a] ? W = S.pop() : a = "", W == null && (W = P), E.relative[a](l, W, T)
                    }
                } else {
                    l = S = []
                }
            }
            l || (l = m), l || F.error(a || R);
            if (K.call(l) === "[object Array]") {
                if (U) {
                    if (P && P.nodeType === 1) {
                        for (V = 0; l[V] != null; V++) {
                            l[V] && (l[V] === !0 || l[V].nodeType === 1 && F.contains(P, l[V])) && O.push(m[V])
                        }
                    } else {
                        for (V = 0; l[V] != null; V++) {
                            l[V] && l[V].nodeType === 1 && O.push(m[V])
                        }
                    }
                } else {
                    O.push.apply(O, l)
                }
            } else {
                A(l, O)
            }
            k && (F(k, v, O, N), F.uniqueSort(O));
            return O
        };
        F.uniqueSort = function (f) {
            if (y) {
                J = I, f.sort(y);
                if (J) {
                    for (var e = 1; e < f.length; e++) {
                        f[e] === f[e - 1] && f.splice(e--, 1)
                    }
                }
            }
            return f
        }, F.matches = function (f, e) {
            return F(f, null, null, e)
        }, F.matchesSelector = function (f, e) {
            return F(e, null, null, [f]).length > 0
        }, F.find = function (s, r, q) {
            var p;
            if (!s) {
                return[]
            }
            for (var o = 0, n = E.order.length; o < n; o++) {
                var m, l = E.order[o];
                if (m = E.leftMatch[l].exec(s)) {
                    var k = m[1];
                    m.splice(1, 1);
                    if (k.substr(k.length - 1) !== "\\") {
                        m[1] = (m[1] || "").replace(H, ""), p = E.find[l](m, r, q);
                        if (p != null) {
                            s = s.replace(E.match[l], "");
                            break
                        }
                    }
                }
            }
            p || (p = typeof r.getElementsByTagName !== "undefined" ? r.getElementsByTagName("*") : []);
            return{set:p, expr:s}
        }, F.filter = function (X, W, V, U) {
            var T, S, R = X, Q = [], P = W, O = W && W[0] && F.isXML(W[0]);
            while (X && W.length) {
                for (var N in E.filter) {
                    if ((T = E.leftMatch[N].exec(X)) != null && T[2]) {
                        var v, u, l = E.filter[N], k = T[1];
                        S = !1, T.splice(1, 1);
                        if (k.substr(k.length - 1) === "\\") {
                            continue
                        }
                        P === Q && (Q = []);
                        if (E.preFilter[N]) {
                            T = E.preFilter[N](T, P, V, Q, U, O);
                            if (T) {
                                if (T === !0) {
                                    continue
                                }
                            } else {
                                S = v = !0
                            }
                        }
                        if (T) {
                            for (var Z = 0; (u = P[Z]) != null; Z++) {
                                if (u) {
                                    v = l(u, T, Z, P);
                                    var Y = U ^ !!v;
                                    V && v != null ? Y ? S = !0 : P[Z] = !1 : Y && (Q.push(u), S = !0)
                                }
                            }
                        }
                        if (v !== aP) {
                            V || (P = Q), X = X.replace(E.match[N], "");
                            if (!S) {
                                return[]
                            }
                            break
                        }
                    }
                }
                if (X === R) {
                    if (S == null) {
                        F.error(X)
                    } else {
                        break
                    }
                }
                R = X
            }
            return P
        }, F.error = function (e) {
            throw"Syntax error, unrecognized expression: " + e
        };
        var E = F.selectors = {order:["ID", "NAME", "TAG"], match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/, NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/, ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/, TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/, CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/, POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/, PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/}, leftMatch:{}, attrMap:{"class":"className", "for":"htmlFor"}, attrHandle:{href:function (e) {
            return e.getAttribute("href")
        }, type:function (e) {
            return e.getAttribute("type")
        }}, relative:{"+":function (k, j) {
            var q = typeof j === "string", p = q && !G.test(j), o = q && !p;
            p && (j = j.toLowerCase());
            for (var n = 0, m = k.length, l; n < m; n++) {
                if (l = k[n]) {
                    while ((l = l.previousSibling) && l.nodeType !== 1) {
                    }
                    k[n] = o || l && l.nodeName.toLowerCase() === j ? l || !1 : l === j
                }
            }
            o && F.filter(j, k, !0)
        }, ">":function (j, h) {
            var o, n = typeof h === "string", m = 0, l = j.length;
            if (n && !G.test(h)) {
                h = h.toLowerCase();
                for (; m < l; m++) {
                    o = j[m];
                    if (o) {
                        var k = o.parentNode;
                        j[m] = k.nodeName.toLowerCase() === h ? k : !1
                    }
                }
            } else {
                for (; m < l; m++) {
                    o = j[m], o && (j[m] = n ? o.parentNode : o.parentNode === h)
                }
                n && F.filter(h, j, !0)
            }
        }, "":function (h, e, m) {
            var l, k = L++, j = c;
            typeof e === "string" && !G.test(e) && (e = e.toLowerCase(), l = e, j = w), j("parentNode", e, k, h, l, m)
        }, "~":function (h, e, m) {
            var l, k = L++, j = c;
            typeof e === "string" && !G.test(e) && (e = e.toLowerCase(), l = e, j = w), j("previousSibling", e, k, h, l, m)
        }}, find:{ID:function (f, e, h) {
            if (typeof e.getElementById !== "undefined" && !h) {
                var g = e.getElementById(f[1]);
                return g && g.parentNode ? [g] : []
            }
        }, NAME:function (h, g) {
            if (typeof g.getElementsByName !== "undefined") {
                var m = [], l = g.getElementsByName(h[1]);
                for (var k = 0, j = l.length; k < j; k++) {
                    l[k].getAttribute("name") === h[1] && m.push(l[k])
                }
                return m.length === 0 ? null : m
            }
        }, TAG:function (f, e) {
            if (typeof e.getElementsByTagName !== "undefined") {
                return e.getElementsByTagName(f[1])
            }
        }}, preFilter:{CLASS:function (k, j, q, p, o, n) {
            k = " " + k[1].replace(H, "") + " ";
            if (n) {
                return k
            }
            for (var m = 0, l; (l = j[m]) != null; m++) {
                l && (o ^ (l.className && (" " + l.className + " ").replace(/[\t\n\r]/g, " ").indexOf(k) >= 0) ? q || p.push(l) : q && (j[m] = !1))
            }
            return !1
        }, ID:function (e) {
            return e[1].replace(H, "")
        }, TAG:function (f, e) {
            return f[1].replace(H, "").toLowerCase()
        }, CHILD:function (f) {
            if (f[1] === "nth") {
                f[2] || F.error(f[0]), f[2] = f[2].replace(/^\+|\s*/g, "");
                var e = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(f[2] === "even" && "2n" || f[2] === "odd" && "2n+1" || !/\D/.test(f[2]) && "0n+" + f[2] || f[2]);
                f[2] = e[1] + (e[2] || 1) - 0, f[3] = e[3] - 0
            } else {
                f[2] && F.error(f[0])
            }
            f[0] = L++;
            return f
        }, ATTR:function (j, h, o, n, m, l) {
            var k = j[1] = j[1].replace(H, "");
            !l && E.attrMap[k] && (j[1] = E.attrMap[k]), j[4] = (j[4] || j[5] || "").replace(H, ""), j[2] === "~=" && (j[4] = " " + j[4] + " ");
            return j
        }, PSEUDO:function (a, m, l, k, j) {
            if (a[1] === "not") {
                if ((M.exec(a[3]) || "").length > 1 || /^\w/.test(a[3])) {
                    a[3] = F(a[3], null, null, m)
                } else {
                    var h = F.filter(a[3], m, l, !0 ^ j);
                    l || k.push.apply(k, h);
                    return !1
                }
            } else {
                if (E.match.POS.test(a[0]) || E.match.CHILD.test(a[0])) {
                    return !0
                }
            }
            return a
        }, POS:function (e) {
            e.unshift(!0);
            return e
        }}, filters:{enabled:function (e) {
            return e.disabled === !1 && e.type !== "hidden"
        }, disabled:function (e) {
            return e.disabled === !0
        }, checked:function (e) {
            return e.checked === !0
        }, selected:function (e) {
            e.parentNode && e.parentNode.selectedIndex;
            return e.selected === !0
        }, parent:function (e) {
            return !!e.firstChild
        }, empty:function (e) {
            return !e.firstChild
        }, has:function (f, e, g) {
            return !!F(g[3], f).length
        }, header:function (e) {
            return/h\d/i.test(e.nodeName)
        }, text:function (f) {
            var e = f.getAttribute("type"), g = f.type;
            return"text" === g && (e === g || e === null)
        }, radio:function (e) {
            return"radio" === e.type
        }, checkbox:function (e) {
            return"checkbox" === e.type
        }, file:function (e) {
            return"file" === e.type
        }, password:function (e) {
            return"password" === e.type
        }, submit:function (e) {
            return"submit" === e.type
        }, image:function (e) {
            return"image" === e.type
        }, reset:function (e) {
            return"reset" === e.type
        }, button:function (e) {
            return"button" === e.type || e.nodeName.toLowerCase() === "button"
        }, input:function (e) {
            return/input|select|textarea|button/i.test(e.nodeName)
        }}, setFilters:{first:function (f, e) {
            return e === 0
        }, last:function (f, e, h, g) {
            return e === g.length - 1
        }, even:function (f, e) {
            return e % 2 === 0
        }, odd:function (f, e) {
            return e % 2 === 1
        }, lt:function (f, e, g) {
            return e < g[3] - 0
        }, gt:function (f, e, g) {
            return e > g[3] - 0
        }, nth:function (f, e, g) {
            return g[3] - 0 === e
        }, eq:function (f, e, g) {
            return g[3] - 0 === e
        }}, filter:{PSEUDO:function (r, q, p, o) {
            var n = q[1], m = E.filters[n];
            if (m) {
                return m(r, p, q, o)
            }
            if (n === "contains") {
                return(r.textContent || r.innerText || F.getText([r]) || "").indexOf(q[3]) >= 0
            }
            if (n === "not") {
                var l = q[3];
                for (var k = 0, j = l.length; k < j; k++) {
                    if (l[k] === r) {
                        return !1
                    }
                }
                return !0
            }
            F.error(n)
        }, CHILD:function (t, s) {
            var r = s[1], q = t;
            switch (r) {
                case"only":
                case"first":
                    while (q = q.previousSibling) {
                        if (q.nodeType === 1) {
                            return !1
                        }
                    }
                    if (r === "first") {
                        return !0
                    }
                    q = t;
                case"last":
                    while (q = q.nextSibling) {
                        if (q.nodeType === 1) {
                            return !1
                        }
                    }
                    return !0;
                case"nth":
                    var p = s[2], o = s[3];
                    if (p === 1 && o === 0) {
                        return !0
                    }
                    var n = s[0], m = t.parentNode;
                    if (m && (m.sizcache !== n || !t.nodeIndex)) {
                        var l = 0;
                        for (q = m.firstChild; q; q = q.nextSibling) {
                            q.nodeType === 1 && (q.nodeIndex = ++l)
                        }
                        m.sizcache = n
                    }
                    var k = t.nodeIndex - o;
                    return p === 0 ? k === 0 : k % p === 0 && k / p >= 0
            }
        }, ID:function (f, e) {
            return f.nodeType === 1 && f.getAttribute("id") === e
        }, TAG:function (f, e) {
            return e === "*" && f.nodeType === 1 || f.nodeName.toLowerCase() === e
        }, CLASS:function (f, e) {
            return(" " + (f.className || f.getAttribute("class")) + " ").indexOf(e) > -1
        }, ATTR:function (j, h) {
            var o = h[1], n = E.attrHandle[o] ? E.attrHandle[o](j) : j[o] != null ? j[o] : j.getAttribute(o), m = n + "", l = h[2], k = h[4];
            return n == null ? l === "!=" : l === "=" ? m === k : l === "*=" ? m.indexOf(k) >= 0 : l === "~=" ? (" " + m + " ").indexOf(k) >= 0 : k ? l === "!=" ? m !== k : l === "^=" ? m.indexOf(k) === 0 : l === "$=" ? m.substr(m.length - k.length) === k : l === "|=" ? m === k || m.substr(0, k.length + 1) === k + "-" : !1 : m && n !== !1
        }, POS:function (h, g, m, l) {
            var k = g[2], j = E.setFilters[k];
            if (j) {
                return j(h, m, g, l)
            }
        }}}, D = E.match.POS, C = function (f, e) {
            return"\\" + (e - 0 + 1)
        };
        for (var B in E.match) {
            E.match[B] = new RegExp(E.match[B].source + /(?![^\[]*\])(?![^\(]*\))/.source), E.leftMatch[B] = new RegExp(/(^(?:.|\r|\n)*?)/.source + E.match[B].source.replace(/\\(\d+)/g, C))
        }
        var A = function (f, e) {
            f = Array.prototype.slice.call(f, 0);
            if (e) {
                e.push.apply(e, f);
                return e
            }
            return f
        };
        try {
            Array.prototype.slice.call(aN.documentElement.childNodes, 0)[0].nodeType
        } catch (z) {
            A = function (g, f) {
                var k = 0, j = f || [];
                if (K.call(g) === "[object Array]") {
                    Array.prototype.push.apply(j, g)
                } else {
                    if (typeof g.length === "number") {
                        for (var h = g.length; k < h; k++) {
                            j.push(g[k])
                        }
                    } else {
                        for (; g[k]; k++) {
                            j.push(g[k])
                        }
                    }
                }
                return j
            }
        }
        var y, x;
        aN.documentElement.compareDocumentPosition ? y = function (f, e) {
            if (f === e) {
                J = !0;
                return 0
            }
            if (!f.compareDocumentPosition || !e.compareDocumentPosition) {
                return f.compareDocumentPosition ? -1 : 1
            }
            return f.compareDocumentPosition(e) & 4 ? -1 : 1
        } : (y = function (t, s) {
            var r, q, p = [], o = [], n = t.parentNode, m = s.parentNode, l = n;
            if (t === s) {
                J = !0;
                return 0
            }
            if (n === m) {
                return x(t, s)
            }
            if (!n) {
                return -1
            }
            if (!m) {
                return 1
            }
            while (l) {
                p.unshift(l), l = l.parentNode
            }
            l = m;
            while (l) {
                o.unshift(l), l = l.parentNode
            }
            r = p.length, q = o.length;
            for (var g = 0; g < r && g < q; g++) {
                if (p[g] !== o[g]) {
                    return x(p[g], o[g])
                }
            }
            return g === r ? x(t, o[g], -1) : x(p[g], s, 1)
        }, x = function (f, e, h) {
            if (f === e) {
                return h
            }
            var g = f.nextSibling;
            while (g) {
                if (g === e) {
                    return -1
                }
                g = g.nextSibling
            }
            return 1
        }), F.getText = function (f) {
            var e = "", h;
            for (var g = 0; f[g]; g++) {
                h = f[g], h.nodeType === 3 || h.nodeType === 4 ? e += h.nodeValue : h.nodeType !== 8 && (e += F.getText(h.childNodes))
            }
            return e
        }, function () {
            var f = aN.createElement("div"), h = "script" + (new Date).getTime(), g = aN.documentElement;
            f.innerHTML = "<a name='" + h + "'/>", g.insertBefore(f, g.firstChild), aN.getElementById(h) && (E.find.ID = function (j, m, l) {
                if (typeof m.getElementById !== "undefined" && !l) {
                    var k = m.getElementById(j[1]);
                    return k ? k.id === j[1] || typeof k.getAttributeNode !== "undefined" && k.getAttributeNode("id").nodeValue === j[1] ? [k] : aP : []
                }
            }, E.filter.ID = function (j, e) {
                var k = typeof j.getAttributeNode !== "undefined" && j.getAttributeNode("id");
                return j.nodeType === 1 && k && k.nodeValue === e
            }), g.removeChild(f), g = f = null
        }(), function () {
            var e = aN.createElement("div");
            e.appendChild(aN.createComment("")), e.getElementsByTagName("*").length > 0 && (E.find.TAG = function (g, f) {
                var k = f.getElementsByTagName(g[1]);
                if (g[1] === "*") {
                    var j = [];
                    for (var h = 0; k[h]; h++) {
                        k[h].nodeType === 1 && j.push(k[h])
                    }
                    k = j
                }
                return k
            }), e.innerHTML = "<a href='#'></a>", e.firstChild && typeof e.firstChild.getAttribute !== "undefined" && e.firstChild.getAttribute("href") !== "#" && (E.attrHandle.href = function (f) {
                return f.getAttribute("href", 2)
            }), e = null
        }(), aN.querySelectorAll && function () {
            var g = F, f = aN.createElement("div"), j = "__sizzle__";
            f.innerHTML = "<p class='TEST'></p>";
            if (!f.querySelectorAll || f.querySelectorAll(".TEST").length !== 0) {
                F = function (R, Q, P, O) {
                    Q = Q || aN;
                    if (!O && !F.isXML(Q)) {
                        var N = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(R);
                        if (N && (Q.nodeType === 1 || Q.nodeType === 9)) {
                            if (N[1]) {
                                return A(Q.getElementsByTagName(R), P)
                            }
                            if (N[2] && E.find.CLASS && Q.getElementsByClassName) {
                                return A(Q.getElementsByClassName(N[2]), P)
                            }
                        }
                        if (Q.nodeType === 9) {
                            if (R === "body" && Q.body) {
                                return A([Q.body], P)
                            }
                            if (N && N[3]) {
                                var v = Q.getElementById(N[3]);
                                if (!v || !v.parentNode) {
                                    return A([], P)
                                }
                                if (v.id === N[3]) {
                                    return A([v], P)
                                }
                            }
                            try {
                                return A(Q.querySelectorAll(R), P)
                            } catch (u) {
                            }
                        } else {
                            if (Q.nodeType === 1 && Q.nodeName.toLowerCase() !== "object") {
                                var t = Q, p = Q.getAttribute("id"), l = p || j, k = Q.parentNode, a = /^\s*[+~]/.test(R);
                                p ? l = l.replace(/'/g, "\\$&") : Q.setAttribute("id", l), a && k && (Q = Q.parentNode);
                                try {
                                    if (!a || k) {
                                        return A(Q.querySelectorAll("[id='" + l + "'] " + R), P)
                                    }
                                } catch (S) {
                                } finally {
                                    p || t.removeAttribute("id")
                                }
                            }
                        }
                    }
                    return g(R, Q, P, O)
                };
                for (var h in g) {
                    F[h] = g[h]
                }
                f = null
            }
        }(), function () {
            var h = aN.documentElement, g = h.matchesSelector || h.mozMatchesSelector || h.webkitMatchesSelector || h.msMatchesSelector;
            if (g) {
                var l = !g.call(aN.createElement("div"), "div"), k = !1;
                try {
                    g.call(aN.documentElement, "[test!='']:sizzle")
                } catch (j) {
                    k = !0
                }
                F.matchesSelector = function (e, o) {
                    o = o.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
                    if (!F.isXML(e)) {
                        try {
                            if (k || !E.match.PSEUDO.test(o) && !/!=/.test(o)) {
                                var n = g.call(e, o);
                                if (n || !l || e.document && e.document.nodeType !== 11) {
                                    return n
                                }
                            }
                        } catch (m) {
                        }
                    }
                    return F(o, null, null, [e]).length > 0
                }
            }
        }(), function () {
            var e = aN.createElement("div");
            e.innerHTML = "<div class='test e'></div><div class='test'></div>";
            if (e.getElementsByClassName && e.getElementsByClassName("e").length !== 0) {
                e.lastChild.className = "e";
                if (e.getElementsByClassName("e").length === 1) {
                    return
                }
                E.order.splice(1, 0, "CLASS"), E.find.CLASS = function (g, f, h) {
                    if (typeof f.getElementsByClassName !== "undefined" && !h) {
                        return f.getElementsByClassName(g[1])
                    }
                }, e = null
            }
        }(), aN.documentElement.contains ? F.contains = function (f, e) {
            return f !== e && (f.contains ? f.contains(e) : !0)
        } : aN.documentElement.compareDocumentPosition ? F.contains = function (f, e) {
            return !!(f.compareDocumentPosition(e) & 16)
        } : F.contains = function () {
            return !1
        }, F.isXML = function (f) {
            var e = (f ? f.ownerDocument || f : 0).documentElement;
            return e ? e.nodeName !== "HTML" : !1
        };
        var b = function (k, j) {
            var q, p = [], o = "", n = j.nodeType ? [j] : j;
            while (q = E.match.PSEUDO.exec(k)) {
                o += q[0], k = k.replace(E.match.PSEUDO, "")
            }
            k = E.relative[k] ? k + "*" : k;
            for (var m = 0, l = n.length; m < l; m++) {
                F(k, n[m], p)
            }
            return F.filter(o, p)
        };
        aL.find = F, aL.expr = F.selectors, aL.expr[":"] = aL.expr.filters, aL.unique = F.uniqueSort, aL.text = F.getText, aL.isXMLDoc = F.isXML, aL.contains = F.contains
    }();
    var cs = /Until$/, cr = /^(?:parents|prevUntil|prevAll)/, cq = /,/, cp = /^.[^:#\[\.,]*$/, co = Array.prototype.slice, cm = aL.expr.match.POS, cl = {children:!0, contents:!0, next:!0, prev:!0};
    aL.fn.extend({find:function (k) {
        var j = this.pushStack("", "find", k), p = 0;
        for (var o = 0, n = this.length; o < n; o++) {
            p = j.length, aL.find(k, this[o], j);
            if (o > 0) {
                for (var m = p; m < j.length; m++) {
                    for (var l = 0; l < p; l++) {
                        if (j[l] === j[m]) {
                            j.splice(m--, 1);
                            break
                        }
                    }
                }
            }
        }
        return j
    }, has:function (e) {
        var c = aL(e);
        return this.filter(function () {
            for (var b = 0, f = c.length; b < f; b++) {
                if (aL.contains(this, c[b])) {
                    return !0
                }
            }
        })
    }, not:function (b) {
        return this.pushStack(b8(this, b, !1), "not", b)
    }, filter:function (b) {
        return this.pushStack(b8(this, b, !0), "filter", b)
    }, is:function (b) {
        return !!b && aL.filter(b, this).length > 0
    }, closest:function (w, v) {
        var u = [], t, s, r = this[0];
        if (aL.isArray(w)) {
            var q, p, o = {}, n = 1;
            if (r && w.length) {
                for (t = 0, s = w.length; t < s; t++) {
                    p = w[t], o[p] || (o[p] = aL.expr.match.POS.test(p) ? aL(p, v || this.context) : p)
                }
                while (r && r.ownerDocument && r !== v) {
                    for (p in o) {
                        q = o[p], (q.jquery ? q.index(r) > -1 : aL(r).is(q)) && u.push({selector:p, elem:r, level:n})
                    }
                    r = r.parentNode, n++
                }
            }
            return u
        }
        var m = cm.test(w) ? aL(w, v || this.context) : null;
        for (t = 0, s = this.length; t < s; t++) {
            r = this[t];
            while (r) {
                if (m ? m.index(r) > -1 : aL.find.matchesSelector(r, w)) {
                    u.push(r);
                    break
                }
                r = r.parentNode;
                if (!r || !r.ownerDocument || r === v) {
                    break
                }
            }
        }
        u = u.length > 1 ? aL.unique(u) : u;
        return this.pushStack(u, "closest", w)
    }, index:function (b) {
        if (!b || typeof b === "string") {
            return aL.inArray(this[0], b ? aL(b) : this.parent().children())
        }
        return aL.inArray(b.jquery ? b[0] : b, this)
    }, add:function (g, f) {
        var j = typeof g === "string" ? aL(g, f) : aL.makeArray(g), h = aL.merge(this.get(), j);
        return this.pushStack(cj(j[0]) || cj(h[0]) ? h : aL.unique(h))
    }, andSelf:function () {
        return this.add(this.prevObject)
    }}), aL.each({parent:function (e) {
        var c = e.parentNode;
        return c && c.nodeType !== 11 ? c : null
    }, parents:function (b) {
        return aL.dir(b, "parentNode")
    }, parentsUntil:function (f, e, g) {
        return aL.dir(f, "parentNode", g)
    }, next:function (b) {
        return aL.nth(b, 2, "nextSibling")
    }, prev:function (b) {
        return aL.nth(b, 2, "previousSibling")
    }, nextAll:function (b) {
        return aL.dir(b, "nextSibling")
    }, prevAll:function (b) {
        return aL.dir(b, "previousSibling")
    }, nextUntil:function (f, e, g) {
        return aL.dir(f, "nextSibling", g)
    }, prevUntil:function (f, e, g) {
        return aL.dir(f, "previousSibling", g)
    }, siblings:function (b) {
        return aL.sibling(b.parentNode.firstChild, b)
    }, children:function (b) {
        return aL.sibling(b.firstChild)
    }, contents:function (b) {
        return aL.nodeName(b, "iframe") ? b.contentDocument || b.contentWindow.document : aL.makeArray(b.childNodes)
    }}, function (e, c) {
        aL.fn[e] = function (j, h) {
            var b = aL.map(this, c, j), a = co.call(arguments);
            cs.test(e) || (h = j), h && typeof h === "string" && (b = aL.filter(h, b)), b = this.length > 1 && !cl[e] ? aL.unique(b) : b, (this.length > 1 || cq.test(h)) && cr.test(e) && (b = b.reverse());
            return this.pushStack(b, e, a.join(","))
        }
    }), aL.extend({filter:function (f, e, g) {
        g && (f = ":not(" + f + ")");
        return e.length === 1 ? aL.find.matchesSelector(e[0], f) ? [e[0]] : [] : aL.find.matches(f, e)
    }, dir:function (b, l, k) {
        var j = [], h = b[l];
        while (h && h.nodeType !== 9 && (k === aP || h.nodeType !== 1 || !aL(h).is(k))) {
            h.nodeType === 1 && j.push(h), h = h[l]
        }
        return j
    }, nth:function (g, f, k, j) {
        f = f || 1;
        var h = 0;
        for (; g; g = g[k]) {
            if (g.nodeType === 1 && ++h === f) {
                break
            }
        }
        return g
    }, sibling:function (f, e) {
        var g = [];
        for (; f; f = f.nextSibling) {
            f.nodeType === 1 && f !== e && g.push(f)
        }
        return g
    }});
    var b6 = / jQuery\d+="(?:\d+|null)"/g, b4 = /^\s+/, b2 = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig, b0 = /<([\w:]+)/, a8 = /<tbody/i, a6 = /<|&#?\w+;/, a4 = /<(?:script|object|embed|option|style)/i, a2 = /checked\s*(?:[^=]|=\s*.checked.)/i, a0 = {option:[1, "<select multiple='multiple'>", "</select>"], legend:[1, "<fieldset>", "</fieldset>"], thead:[1, "<table>", "</table>"], tr:[2, "<table><tbody>", "</tbody></table>"], td:[3, "<table><tbody><tr>", "</tr></tbody></table>"], col:[2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], area:[1, "<map>", "</map>"], _default:[0, "", ""]};
    a0.optgroup = a0.option, a0.tbody = a0.tfoot = a0.colgroup = a0.caption = a0.thead, a0.th = a0.td, aL.support.htmlSerialize || (a0._default = [1, "div<div>", "</div>"]), aL.fn.extend({text:function (b) {
        if (aL.isFunction(b)) {
            return this.each(function (a) {
                var e = aL(this);
                e.text(b.call(this, a, e.text()))
            })
        }
        if (typeof b !== "object" && b !== aP) {
            return this.empty().append((this[0] && this[0].ownerDocument || aN).createTextNode(b))
        }
        return aL.text(this)
    }, wrapAll:function (e) {
        if (aL.isFunction(e)) {
            return this.each(function (a) {
                aL(this).wrapAll(e.call(this, a))
            })
        }
        if (this[0]) {
            var c = aL(e, this[0].ownerDocument).eq(0).clone(!0);
            this[0].parentNode && c.insertBefore(this[0]), c.map(function () {
                var b = this;
                while (b.firstChild && b.firstChild.nodeType === 1) {
                    b = b.firstChild
                }
                return b
            }).append(this)
        }
        return this
    }, wrapInner:function (b) {
        if (aL.isFunction(b)) {
            return this.each(function (a) {
                aL(this).wrapInner(b.call(this, a))
            })
        }
        return this.each(function () {
            var a = aL(this), e = a.contents();
            e.length ? e.wrapAll(b) : a.append(b)
        })
    }, wrap:function (b) {
        return this.each(function () {
            aL(this).wrapAll(b)
        })
    }, unwrap:function () {
        return this.parent().each(function () {
            aL.nodeName(this, "body") || aL(this).replaceWith(this.childNodes)
        }).end()
    }, append:function () {
        return this.domManip(arguments, !0, function (b) {
            this.nodeType === 1 && this.appendChild(b)
        })
    }, prepend:function () {
        return this.domManip(arguments, !0, function (b) {
            this.nodeType === 1 && this.insertBefore(b, this.firstChild)
        })
    }, before:function () {
        if (this[0] && this[0].parentNode) {
            return this.domManip(arguments, !1, function (c) {
                this.parentNode.insertBefore(c, this)
            })
        }
        if (arguments.length) {
            var b = aL(arguments[0]);
            b.push.apply(b, this.toArray());
            return this.pushStack(b, "before", arguments)
        }
    }, after:function () {
        if (this[0] && this[0].parentNode) {
            return this.domManip(arguments, !1, function (c) {
                this.parentNode.insertBefore(c, this.nextSibling)
            })
        }
        if (arguments.length) {
            var b = this.pushStack(this, "after", arguments);
            b.push.apply(b, aL(arguments[0]).toArray());
            return b
        }
    }, remove:function (g, f) {
        for (var j = 0, h; (h = this[j]) != null; j++) {
            if (!g || aL.filter(g, [h]).length) {
                !f && h.nodeType === 1 && (aL.cleanData(h.getElementsByTagName("*")), aL.cleanData([h])), h.parentNode && h.parentNode.removeChild(h)
            }
        }
        return this
    }, empty:function () {
        for (var e = 0, c; (c = this[e]) != null; e++) {
            c.nodeType === 1 && aL.cleanData(c.getElementsByTagName("*"));
            while (c.firstChild) {
                c.removeChild(c.firstChild)
            }
        }
        return this
    }, clone:function (e, c) {
        e = e == null ? !1 : e, c = c == null ? e : c;
        return this.map(function () {
            return aL.clone(this, e, c)
        })
    }, html:function (b) {
        if (b === aP) {
            return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(b6, "") : null
        }
        if (typeof b !== "string" || a4.test(b) || !aL.support.leadingWhitespace && b4.test(b) || a0[(b0.exec(b) || ["", ""])[1].toLowerCase()]) {
            aL.isFunction(b) ? this.each(function (a) {
                var e = aL(this);
                e.html(b.call(this, a, e.html()))
            }) : this.empty().append(b)
        } else {
            b = b.replace(b2, "<$1></$2>");
            try {
                for (var j = 0, h = this.length; j < h; j++) {
                    this[j].nodeType === 1 && (aL.cleanData(this[j].getElementsByTagName("*")), this[j].innerHTML = b)
                }
            } catch (g) {
                this.empty().append(b)
            }
        }
        return this
    }, replaceWith:function (b) {
        if (this[0] && this[0].parentNode) {
            if (aL.isFunction(b)) {
                return this.each(function (a) {
                    var g = aL(this), f = g.html();
                    g.replaceWith(b.call(this, a, f))
                })
            }
            typeof b !== "string" && (b = aL(b).detach());
            return this.each(function () {
                var a = this.nextSibling, e = this.parentNode;
                aL(this).remove(), a ? aL(a).before(b) : aL(e).append(b)
            })
        }
        return this.length ? this.pushStack(aL(aL.isFunction(b) ? b() : b), "replaceWith", b) : this
    }, detach:function (b) {
        return this.remove(b, !0)
    }, domManip:function (y, x, w) {
        var v, u, t, s, r = y[0], q = [];
        if (!aL.support.checkClone && arguments.length === 3 && typeof r === "string" && a2.test(r)) {
            return this.each(function () {
                aL(this).domManip(y, x, w, !0)
            })
        }
        if (aL.isFunction(r)) {
            return this.each(function (c) {
                var a = aL(this);
                y[0] = r.call(this, c, x ? a.html() : aP), a.domManip(y, x, w)
            })
        }
        if (this[0]) {
            s = r && r.parentNode, aL.support.parentNode && s && s.nodeType === 11 && s.childNodes.length === this.length ? v = {fragment:s} : v = aL.buildFragment(y, this, q), t = v.fragment, t.childNodes.length === 1 ? u = t = t.firstChild : u = t.firstChild;
            if (u) {
                x = x && aL.nodeName(u, "tr");
                for (var p = 0, o = this.length, b = o - 1; p < o; p++) {
                    w.call(x ? c1(this[p], u) : this[p], v.cacheable || o > 1 && p < b ? aL.clone(t, !0, !0) : t)
                }
            }
            q.length && aL.each(q, b7)
        }
        return this
    }}), aL.buildFragment = function (j, c, o) {
        var n, m, l, k = c && c[0] ? c[0].ownerDocument || c[0] : aN;
        j.length === 1 && typeof j[0] === "string" && j[0].length < 512 && k === aN && j[0].charAt(0) === "<" && !a4.test(j[0]) && (aL.support.checkClone || !a2.test(j[0])) && (m = !0, l = aL.fragments[j[0]], l && (l !== 1 && (n = l))), n || (n = k.createDocumentFragment(), aL.clean(j, k, n, o)), m && (aL.fragments[j[0]] = l ? n : 1);
        return{fragment:n, cacheable:m}
    }, aL.fragments = {}, aL.each({appendTo:"append", prependTo:"prepend", insertBefore:"before", insertAfter:"after", replaceAll:"replaceWith"}, function (e, c) {
        aL.fn[e] = function (o) {
            var n = [], m = aL(o), l = this.length === 1 && this[0].parentNode;
            if (l && l.nodeType === 11 && l.childNodes.length === 1 && m.length === 1) {
                m[c](this[0]);
                return this
            }
            for (var k = 0, b = m.length; k < b; k++) {
                var a = (k > 0 ? this.clone(!0) : this).get();
                aL(m[k])[c](a), n = n.concat(a)
            }
            return this.pushStack(n, e, m.selector)
        }
    }), aL.extend({clone:function (k, j, p) {
        var o = k.cloneNode(!0), n, m, l;
        if ((!aL.support.noCloneEvent || !aL.support.noCloneChecked) && (k.nodeType === 1 || k.nodeType === 11) && !aL.isXMLDoc(k)) {
            ck(k, o), n = b9(k), m = b9(o);
            for (l = 0; n[l]; ++l) {
                ck(n[l], m[l])
            }
        }
        if (j) {
            aT(k, o);
            if (p) {
                n = b9(k), m = b9(o);
                for (l = 0; n[l]; ++l) {
                    aT(n[l], m[l])
                }
            }
        }
        return o
    }, clean:function (C, B, A, z) {
        B = B || aN, typeof B.createElement === "undefined" && (B = B.ownerDocument || B[0] && B[0].ownerDocument || aN);
        var y = [];
        for (var x = 0, w; (w = C[x]) != null; x++) {
            typeof w === "number" && (w += "");
            if (!w) {
                continue
            }
            if (typeof w !== "string" || a6.test(w)) {
                if (typeof w === "string") {
                    w = w.replace(b2, "<$1></$2>");
                    var v = (b0.exec(w) || ["", ""])[1].toLowerCase(), u = a0[v] || a0._default, t = u[0], s = B.createElement("div");
                    s.innerHTML = u[1] + w + u[2];
                    while (t--) {
                        s = s.lastChild
                    }
                    if (!aL.support.tbody) {
                        var r = a8.test(w), q = v === "table" && !r ? s.firstChild && s.firstChild.childNodes : u[1] === "<table>" && !r ? s.childNodes : [];
                        for (var c = q.length - 1; c >= 0; --c) {
                            aL.nodeName(q[c], "tbody") && !q[c].childNodes.length && q[c].parentNode.removeChild(q[c])
                        }
                    }
                    !aL.support.leadingWhitespace && b4.test(w) && s.insertBefore(B.createTextNode(b4.exec(w)[0]), s.firstChild), w = s.childNodes
                }
            } else {
                w = B.createTextNode(w)
            }
            w.nodeType ? y.push(w) : y = aL.merge(y, w)
        }
        if (A) {
            for (x = 0; y[x]; x++) {
                !z || !aL.nodeName(y[x], "script") || y[x].type && y[x].type.toLowerCase() !== "text/javascript" ? (y[x].nodeType === 1 && y.splice.apply(y, [x + 1, 0].concat(aL.makeArray(y[x].getElementsByTagName("script")))), A.appendChild(y[x])) : z.push(y[x].parentNode ? y[x].parentNode.removeChild(y[x]) : y[x])
            }
        }
        return y
    }, cleanData:function (u) {
        var t, s, r = aL.cache, q = aL.expando, p = aL.event.special, o = aL.support.deleteExpando;
        for (var n = 0, m; (m = u[n]) != null; n++) {
            if (m.nodeName && aL.noData[m.nodeName.toLowerCase()]) {
                continue
            }
            s = m[aL.expando];
            if (s) {
                t = r[s] && r[s][q];
                if (t && t.events) {
                    for (var l in t.events) {
                        p[l] ? aL.event.remove(m, l) : aL.removeEvent(m, l, t.handle)
                    }
                    t.handle && (t.handle.elem = null)
                }
                o ? delete m[aL.expando] : m.removeAttribute && m.removeAttribute(aL.expando), delete r[s]
            }
        }
    }});
    var b5 = /alpha\([^)]*\)/i, b3 = /opacity=([^)]*)/, b1 = /-([a-z])/ig, a9 = /([A-Z]|^ms)/g, a7 = /^-?\d+(?:px)?$/i, a5 = /^-?\d/, a3 = {position:"absolute", visibility:"hidden", display:"block"}, a1 = ["Left", "Right"], aZ = ["Top", "Bottom"], aY, aX, aW, aV = function (e, c) {
        return c.toUpperCase()
    };
    aL.fn.css = function (b, e) {
        if (arguments.length === 2 && e === aP) {
            return this
        }
        return aL.access(this, b, e, !0, function (f, h, g) {
            return g !== aP ? aL.style(f, h, g) : aL.css(f, h)
        })
    }, aL.extend({cssHooks:{opacity:{get:function (f, e) {
        if (e) {
            var g = aY(f, "opacity", "opacity");
            return g === "" ? "1" : g
        }
        return f.style.opacity
    }}}, cssNumber:{zIndex:!0, fontWeight:!0, opacity:!0, zoom:!0, lineHeight:!0}, cssProps:{"float":aL.support.cssFloat ? "cssFloat" : "styleFloat"}, style:function (s, r, q, p) {
        if (s && s.nodeType !== 3 && s.nodeType !== 8 && s.style) {
            var o, n = aL.camelCase(r), m = s.style, l = aL.cssHooks[n];
            r = aL.cssProps[n] || n;
            if (q === aP) {
                if (l && "get" in l && (o = l.get(s, !1, p)) !== aP) {
                    return o
                }
                return m[r]
            }
            if (typeof q === "number" && isNaN(q) || q == null) {
                return
            }
            typeof q === "number" && !aL.cssNumber[n] && (q += "px");
            if (!l || !("set" in l) || (q = l.set(s, q)) !== aP) {
                try {
                    m[r] = q
                } catch (b) {
                }
            }
        }
    }, css:function (b, n, m) {
        var l, k = aL.camelCase(n), j = aL.cssHooks[k];
        n = aL.cssProps[k] || k;
        if (j && "get" in j && (l = j.get(b, !0, m)) !== aP) {
            return l
        }
        if (aY) {
            return aY(b, n, k)
        }
    }, swap:function (g, f, k) {
        var j = {};
        for (var h in f) {
            j[h] = g.style[h], g.style[h] = f[h]
        }
        k.call(g);
        for (h in f) {
            g.style[h] = j[h]
        }
    }, camelCase:function (b) {
        return b.replace(b1, aV)
    }}), aL.curCSS = aL.css, aL.each(["height", "width"], function (e, c) {
        aL.cssHooks[c] = {get:function (b, j, h) {
            var g;
            if (j) {
                b.offsetWidth !== 0 ? g = aU(b, c, h) : aL.swap(b, a3, function () {
                    g = aU(b, c, h)
                });
                if (g <= 0) {
                    g = aY(b, c, c), g === "0px" && aW && (g = aW(b, c, c));
                    if (g != null) {
                        return g === "" || g === "auto" ? "0px" : g
                    }
                }
                if (g < 0 || g == null) {
                    g = b.style[c];
                    return g === "" || g === "auto" ? "0px" : g
                }
                return typeof g === "string" ? g : g + "px"
            }
        }, set:function (g, f) {
            if (!a7.test(f)) {
                return f
            }
            f = parseFloat(f);
            if (f >= 0) {
                return f + "px"
            }
        }}
    }), aL.support.opacity || (aL.cssHooks.opacity = {get:function (e, c) {
        return b3.test((c && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? parseFloat(RegExp.$1) / 100 + "" : c ? "1" : ""
    }, set:function (h, g) {
        var l = h.style;
        l.zoom = 1;
        var k = aL.isNaN(g) ? "" : "alpha(opacity=" + g * 100 + ")", j = l.filter || "";
        l.filter = b5.test(j) ? j.replace(b5, k) : l.filter + " " + k
    }}), aL(function () {
        aL.support.reliableMarginRight || (aL.cssHooks.marginRight = {get:function (f, e) {
            var g;
            aL.swap(f, {display:"inline-block"}, function () {
                e ? g = aY(f, "margin-right", "marginRight") : g = f.style.marginRight
            });
            return g
        }})
    }), aN.defaultView && aN.defaultView.getComputedStyle && (aX = function (b, n, m) {
        var l, k, j;
        m = m.replace(a9, "-$1").toLowerCase();
        if (!(k = b.ownerDocument.defaultView)) {
            return aP
        }
        if (j = k.getComputedStyle(b, null)) {
            l = j.getPropertyValue(m), l === "" && !aL.contains(b.ownerDocument.documentElement, b) && (l = aL.style(b, m))
        }
        return l
    }), aN.documentElement.currentStyle && (aW = function (h, g) {
        var m, l = h.currentStyle && h.currentStyle[g], k = h.runtimeStyle && h.runtimeStyle[g], j = h.style;
        !a7.test(l) && a5.test(l) && (m = j.left, k && (h.runtimeStyle.left = h.currentStyle.left), j.left = g === "fontSize" ? "1em" : l || 0, l = j.pixelLeft + "px", j.left = m, k && (h.runtimeStyle.left = k));
        return l === "" ? "auto" : l
    }), aY = aX || aW, aL.expr && aL.expr.filters && (aL.expr.filters.hidden = function (f) {
        var e = f.offsetWidth, g = f.offsetHeight;
        return e === 0 && g === 0 || !aL.support.reliableHiddenOffsets && (f.style.display || aL.css(f, "display")) === "none"
    }, aL.expr.filters.visible = function (b) {
        return !aL.expr.filters.hidden(b)
    });
    var aS = /%20/g, aQ = /\[\]$/, aO = /\r?\n/g, aM = /#.*$/, aK = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, aI = /^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i, aG = /^(?:about|app|app\-storage|.+\-extension|file|widget):$/, aE = /^(?:GET|HEAD)$/, aC = /^\/\//, c0 = /\?/, cZ = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, cY = /^(?:select|textarea)/i, cX = /\s+/, cW = /([?&])_=[^&]*/, cV = /(^|\-)([a-z])/g, cU = function (f, e, g) {
        return e + g.toUpperCase()
    }, cT = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/, cS = aL.fn.load, cR = {}, cQ = {}, cP, cO;
    try {
        cP = aN.location.href
    } catch (cN) {
        cP = aN.createElement("a"), cP.href = "", cP = cP.href
    }
    cO = cT.exec(cP.toLowerCase()) || [], aL.fn.extend({load:function (b, o, n) {
        if (typeof b !== "string" && cS) {
            return cS.apply(this, arguments)
        }
        if (!this.length) {
            return this
        }
        var m = b.indexOf(" ");
        if (m >= 0) {
            var l = b.slice(m, b.length);
            b = b.slice(0, m)
        }
        var k = "GET";
        o && (aL.isFunction(o) ? (n = o, o = aP) : typeof o === "object" && (o = aL.param(o, aL.ajaxSettings.traditional), k = "POST"));
        var j = this;
        aL.ajax({url:b, type:k, dataType:"html", data:o, complete:function (f, e, g) {
            g = f.responseText, f.isResolved() && (f.done(function (c) {
                g = c
            }), j.html(l ? aL("<div>").append(g.replace(cZ, "")).find(l) : g)), n && j.each(n, [g, e, f])
        }});
        return this
    }, serialize:function () {
        return aL.param(this.serializeArray())
    }, serializeArray:function () {
        return this.map(function () {
            return this.elements ? aL.makeArray(this.elements) : this
        }).filter(function () {
            return this.name && !this.disabled && (this.checked || cY.test(this.nodeName) || aI.test(this.type))
        }).map(function (f, e) {
            var g = aL(this).val();
            return g == null ? null : aL.isArray(g) ? aL.map(g, function (b, h) {
                return{name:e.name, value:b.replace(aO, "\r\n")}
            }) : {name:e.name, value:g.replace(aO, "\r\n")}
        }).get()
    }}), aL.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function (e, c) {
        aL.fn[c] = function (b) {
            return this.bind(c, b)
        }
    }), aL.each(["get", "post"], function (b, e) {
        aL[e] = function (c, k, j, h) {
            aL.isFunction(k) && (h = h || j, j = k, k = aP);
            return aL.ajax({type:e, url:c, data:k, success:j, dataType:h})
        }
    }), aL.extend({getScript:function (b, e) {
        return aL.get(b, aP, e, "script")
    }, getJSON:function (f, e, g) {
        return aL.get(f, e, g, "json")
    }, ajaxSetup:function (f, e) {
        e ? aL.extend(!0, f, aL.ajaxSettings, e) : (e = f, f = aL.extend(!0, aL.ajaxSettings, e));
        for (var g in {context:1, url:1}) {
            g in e ? f[g] = e[g] : g in aL.ajaxSettings && (f[g] = aL.ajaxSettings[g])
        }
        return f
    }, ajaxSettings:{url:cP, isLocal:aG.test(cO[1]), global:!0, type:"GET", contentType:"application/x-www-form-urlencoded", processData:!0, async:!0, accepts:{xml:"application/xml, text/xml", html:"text/html", text:"text/plain", json:"application/json, text/javascript", "*":"*/*"}, contents:{xml:/xml/, html:/html/, json:/json/}, responseFields:{xml:"responseXML", text:"responseText"}, converters:{"* text":aR.String, "text html":!0, "text json":aL.parseJSON, "text xml":aL.parseXML}}, ajaxPrefilter:cM(cR), ajaxTransport:cM(cQ), ajax:function (U, T) {
        function B(o, j, g, f) {
            if (F !== 2) {
                F = 2, H && clearTimeout(H), I = aP, K = f || "", C.readyState = o ? 4 : 0;
                var e, s, r, p = g ? cJ(S, C, g) : aP, m, k;
                if (o >= 200 && o < 300 || o === 304) {
                    if (S.ifModified) {
                        if (m = C.getResponseHeader("Last-Modified")) {
                            aL.lastModified[M] = m
                        }
                        if (k = C.getResponseHeader("Etag")) {
                            aL.etag[M] = k
                        }
                    }
                    if (o === 304) {
                        j = "notmodified", e = !0
                    } else {
                        try {
                            s = cI(S, p), j = "success", e = !0
                        } catch (h) {
                            j = "parsererror", r = h
                        }
                    }
                } else {
                    r = j;
                    if (!j || o) {
                        j = "error", o < 0 && (o = 0)
                    }
                }
                C.status = o, C.statusText = j, e ? P.resolveWith(R, [s, j, C]) : P.rejectWith(R, [C, j, r]), C.statusCode(N), N = aP, E && Q.trigger("ajax" + (e ? "Success" : "Error"), [C, S, e ? s : r]), O.resolveWith(R, [C, j]), E && (Q.trigger("ajaxComplete", [C, S]), --aL.active || aL.event.trigger("ajaxStop"))
            }
        }

        typeof U === "object" && (T = U, U = aP), T = T || {};
        var S = aL.ajaxSetup({}, T), R = S.context || S, Q = R !== S && (R.nodeType || R instanceof aL) ? aL(R) : aL.event, P = aL.Deferred(), O = aL._Deferred(), N = S.statusCode || {}, M, L = {}, K, J, I, H, G, F = 0, E, D, C = {readyState:0, setRequestHeader:function (e, c) {
            F || (L[e.toLowerCase().replace(cV, cU)] = c);
            return this
        }, getAllResponseHeaders:function () {
            return F === 2 ? K : null
        }, getResponseHeader:function (e) {
            var f;
            if (F === 2) {
                if (!J) {
                    J = {};
                    while (f = aK.exec(K)) {
                        J[f[1].toLowerCase()] = f[2]
                    }
                }
                f = J[e.toLowerCase()]
            }
            return f === aP ? null : f
        }, overrideMimeType:function (c) {
            F || (S.mimeType = c);
            return this
        }, abort:function (c) {
            c = c || "abort", I && I.abort(c), B(0, c);
            return this
        }};
        P.promise(C), C.success = C.done, C.error = C.fail, C.complete = O.done, C.statusCode = function (e) {
            if (e) {
                var c;
                if (F < 2) {
                    for (c in e) {
                        N[c] = [N[c], e[c]]
                    }
                } else {
                    c = e[C.status], C.then(c, c)
                }
            }
            return this
        }, S.url = ((U || S.url) + "").replace(aM, "").replace(aC, cO[1] + "//"), S.dataTypes = aL.trim(S.dataType || "*").toLowerCase().split(cX), S.crossDomain == null && (G = cT.exec(S.url.toLowerCase()), S.crossDomain = G && (G[1] != cO[1] || G[2] != cO[2] || (G[3] || (G[1] === "http:" ? 80 : 443)) != (cO[3] || (cO[1] === "http:" ? 80 : 443)))), S.data && S.processData && typeof S.data !== "string" && (S.data = aL.param(S.data, S.traditional)), cL(cR, S, T, C);
        if (F === 2) {
            return !1
        }
        E = S.global, S.type = S.type.toUpperCase(), S.hasContent = !aE.test(S.type), E && aL.active++ === 0 && aL.event.trigger("ajaxStart");
        if (!S.hasContent) {
            S.data && (S.url += (c0.test(S.url) ? "&" : "?") + S.data), M = S.url;
            if (S.cache === !1) {
                var A = aL.now(), z = S.url.replace(cW, "$1_=" + A);
                S.url = z + (z === S.url ? (c0.test(S.url) ? "&" : "?") + "_=" + A : "")
            }
        }
        if (S.data && S.hasContent && S.contentType !== !1 || T.contentType) {
            L["Content-Type"] = S.contentType
        }
        S.ifModified && (M = M || S.url, aL.lastModified[M] && (L["If-Modified-Since"] = aL.lastModified[M]), aL.etag[M] && (L["If-None-Match"] = aL.etag[M])), L.Accept = S.dataTypes[0] && S.accepts[S.dataTypes[0]] ? S.accepts[S.dataTypes[0]] + (S.dataTypes[0] !== "*" ? ", */*; q=0.01" : "") : S.accepts["*"];
        for (D in S.headers) {
            C.setRequestHeader(D, S.headers[D])
        }
        if (S.beforeSend && (S.beforeSend.call(R, C, S) === !1 || F === 2)) {
            C.abort();
            return !1
        }
        for (D in {success:1, error:1, complete:1}) {
            C[D](S[D])
        }
        I = cL(cQ, S, T, C);
        if (I) {
            C.readyState = 1, E && Q.trigger("ajaxSend", [C, S]), S.async && S.timeout > 0 && (H = setTimeout(function () {
                C.abort("timeout")
            }, S.timeout));
            try {
                F = 1, I.send(L, B)
            } catch (b) {
                status < 2 ? B(-1, b) : aL.error(b)
            }
        } else {
            B(-1, "No Transport")
        }
        return C
    }, param:function (b, l) {
        var k = [], j = function (e, c) {
            c = aL.isFunction(c) ? c() : c, k[k.length] = encodeURIComponent(e) + "=" + encodeURIComponent(c)
        };
        l === aP && (l = aL.ajaxSettings.traditional);
        if (aL.isArray(b) || b.jquery && !aL.isPlainObject(b)) {
            aL.each(b, function () {
                j(this.name, this.value)
            })
        } else {
            for (var h in b) {
                cK(h, b[h], l, j)
            }
        }
        return k.join("&").replace(aS, "+")
    }}), aL.extend({active:0, lastModified:{}, etag:{}});
    var cF = aL.now(), cD = /(\=)\?(&|$)|\?\?/i;
    aL.ajaxSetup({jsonp:"callback", jsonpCallback:function () {
        return aL.expando + "_" + cF++
    }}), aL.ajaxPrefilter("json jsonp", function (w, v, u) {
        var t = typeof w.data === "string";
        if (w.dataTypes[0] === "jsonp" || v.jsonpCallback || v.jsonp != null || w.jsonp !== !1 && (cD.test(w.url) || t && cD.test(w.data))) {
            var s, r = w.jsonpCallback = aL.isFunction(w.jsonpCallback) ? w.jsonpCallback() : w.jsonpCallback, q = aR[r], p = w.url, o = w.data, n = "$1" + r + "$2", a = function () {
                aR[r] = q, s && aL.isFunction(q) && aR[r](s[0])
            };
            w.jsonp !== !1 && (p = p.replace(cD, n), w.url === p && (t && (o = o.replace(cD, n)), w.data === o && (p += (/\?/.test(p) ? "&" : "?") + w.jsonp + "=" + r))), w.url = p, w.data = o, aR[r] = function (b) {
                s = [b]
            }, u.then(a, a), w.converters["script json"] = function () {
                s || aL.error(r + " was not called");
                return s[0]
            }, w.dataTypes[0] = "json";
            return"script"
        }
    }), aL.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"}, contents:{script:/javascript|ecmascript/}, converters:{"text script":function (b) {
        aL.globalEval(b);
        return b
    }}}), aL.ajaxPrefilter("script", function (b) {
        b.cache === aP && (b.cache = !1), b.crossDomain && (b.type = "GET", b.global = !1)
    }), aL.ajaxTransport("script", function (b) {
        if (b.crossDomain) {
            var f, c = aN.head || aN.getElementsByTagName("head")[0] || aN.documentElement;
            return{send:function (e, a) {
                f = aN.createElement("script"), f.async = "async", b.scriptCharset && (f.charset = b.scriptCharset), f.src = b.url, f.onload = f.onreadystatechange = function (g, h) {
                    if (!f.readyState || /loaded|complete/.test(f.readyState)) {
                        f.onload = f.onreadystatechange = null, c && f.parentNode && c.removeChild(f), f = aP, h || a(200, "success")
                    }
                }, c.insertBefore(f, c.firstChild)
            }, abort:function () {
                f && f.onload(0, 1)
            }}
        }
    });
    var cB = aL.now(), cz, cx;
    aL.ajaxSettings.xhr = aR.ActiveXObject ? function () {
        return !this.isLocal && cu() || c2()
    } : cu, cx = aL.ajaxSettings.xhr(), aL.support.ajax = !!cx, aL.support.cors = cx && "withCredentials" in cx, cx = aP, aL.support.ajax && aL.ajaxTransport(function (b) {
        if (!b.crossDomain || aL.support.cors) {
            var e;
            return{send:function (n, m) {
                var l = b.xhr(), k, c;
                b.username ? l.open(b.type, b.url, b.async, b.username, b.password) : l.open(b.type, b.url, b.async);
                if (b.xhrFields) {
                    for (c in b.xhrFields) {
                        l[c] = b.xhrFields[c]
                    }
                }
                b.mimeType && l.overrideMimeType && l.overrideMimeType(b.mimeType), !b.crossDomain && !n["X-Requested-With"] && (n["X-Requested-With"] = "XMLHttpRequest");
                try {
                    for (c in n) {
                        l.setRequestHeader(c, n[c])
                    }
                } catch (a) {
                }
                l.send(b.hasContent && b.data || null), e = function (v, u) {
                    var t, s, r, q, h;
                    try {
                        if (e && (u || l.readyState === 4)) {
                            e = aP, k && (l.onreadystatechange = aL.noop, delete cz[k]);
                            if (u) {
                                l.readyState !== 4 && l.abort()
                            } else {
                                t = l.status, r = l.getAllResponseHeaders(), q = {}, h = l.responseXML, h && h.documentElement && (q.xml = h), q.text = l.responseText;
                                try {
                                    s = l.statusText
                                } catch (g) {
                                    s = ""
                                }
                                t || !b.isLocal || b.crossDomain ? t === 1223 && (t = 204) : t = q.text ? 200 : 404
                            }
                        }
                    } catch (f) {
                        u || m(-1, f)
                    }
                    q && m(t, s, q, r)
                }, b.async && l.readyState !== 4 ? (cz || (cz = {}, cw()), k = cB++, l.onreadystatechange = cz[k] = e) : e()
            }, abort:function () {
                e && e(0, 1)
            }}
        }
    });
    var cn = {}, av = /^(?:toggle|show|hide)$/, at = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i, aq, ao = [
        ["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"],
        ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"],
        ["opacity"]
    ];
    aL.fn.extend({show:function (k, j, p) {
        var o, n;
        if (k || k === 0) {
            return this.animate(an("show", 3), k, j, p)
        }
        for (var m = 0, l = this.length; m < l; m++) {
            o = this[m], n = o.style.display, !aL._data(o, "olddisplay") && n === "none" && (n = o.style.display = ""), n === "" && aL.css(o, "display") === "none" && aL._data(o, "olddisplay", al(o.nodeName))
        }
        for (m = 0; m < l; m++) {
            o = this[m], n = o.style.display;
            if (n === "" || n === "none") {
                o.style.display = aL._data(o, "olddisplay") || ""
            }
        }
        return this
    }, hide:function (j, h, n) {
        if (j || j === 0) {
            return this.animate(an("hide", 3), j, h, n)
        }
        for (var m = 0, l = this.length; m < l; m++) {
            var k = aL.css(this[m], "display");
            k !== "none" && !aL._data(this[m], "olddisplay") && aL._data(this[m], "olddisplay", k)
        }
        for (m = 0; m < l; m++) {
            this[m].style.display = "none"
        }
        return this
    }, _toggle:aL.fn.toggle, toggle:function (g, f, j) {
        var h = typeof g === "boolean";
        aL.isFunction(g) && aL.isFunction(f) ? this._toggle.apply(this, arguments) : g == null || h ? this.each(function () {
            var a = h ? g : aL(this).is(":hidden");
            aL(this)[a ? "show" : "hide"]()
        }) : this.animate(an("toggle", 3), g, f, j);
        return this
    }, fadeTo:function (f, e, h, g) {
        return this.filter(":hidden").css("opacity", 0).show().end().animate({opacity:e}, f, h, g)
    }, animate:function (h, g, l, k) {
        var j = aL.speed(g, l, k);
        if (aL.isEmptyObject(h)) {
            return this.each(j.complete)
        }
        return this[j.queue === !1 ? "each" : "queue"](function () {
            var a = aL.extend({}, j), q, p = this.nodeType === 1, o = p && aL(this).is(":hidden"), n = this;
            for (q in h) {
                var m = aL.camelCase(q);
                q !== m && (h[m] = h[q], delete h[q], q = m);
                if (h[q] === "hide" && o || h[q] === "show" && !o) {
                    return a.complete.call(this)
                }
                if (p && (q === "height" || q === "width")) {
                    a.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];
                    if (aL.css(this, "display") === "inline" && aL.css(this, "float") === "none") {
                        if (aL.support.inlineBlockNeedsLayout) {
                            var f = al(this.nodeName);
                            f === "inline" ? this.style.display = "inline-block" : (this.style.display = "inline", this.style.zoom = 1)
                        } else {
                            this.style.display = "inline-block"
                        }
                    }
                }
                aL.isArray(h[q]) && ((a.specialEasing = a.specialEasing || {})[q] = h[q][1], h[q] = h[q][0])
            }
            a.overflow != null && (this.style.overflow = "hidden"), a.curAnim = aL.extend({}, h), aL.each(h, function (w, v) {
                var u = new aL.fx(n, a, w);
                if (av.test(v)) {
                    u[v === "toggle" ? o ? "show" : "hide" : v](h)
                } else {
                    var t = at.exec(v), s = u.cur();
                    if (t) {
                        var r = parseFloat(t[2]), b = t[3] || (aL.cssNumber[w] ? "" : "px");
                        b !== "px" && (aL.style(n, w, (r || 1) + b), s = (r || 1) / u.cur() * s, aL.style(n, w, s + b)), t[1] && (r = (t[1] === "-=" ? -1 : 1) * r + s), u.custom(s, r, b)
                    } else {
                        u.custom(s, v, "")
                    }
                }
            });
            return !0
        })
    }, stop:function (f, e) {
        var g = aL.timers;
        f && this.queue([]), this.each(function () {
            for (var b = g.length - 1; b >= 0; b--) {
                g[b].elem === this && (e && g[b](!0), g.splice(b, 1))
            }
        }), e || this.dequeue();
        return this
    }}), aL.each({slideDown:an("show", 1), slideUp:an("hide", 1), slideToggle:an("toggle", 1), fadeIn:{opacity:"show"}, fadeOut:{opacity:"hide"}, fadeToggle:{opacity:"toggle"}}, function (e, c) {
        aL.fn[e] = function (b, g, f) {
            return this.animate(c, b, g, f)
        }
    }), aL.extend({speed:function (g, f, j) {
        var h = g && typeof g === "object" ? aL.extend({}, g) : {complete:j || !j && f || aL.isFunction(g) && g, duration:g, easing:j && f || f && !aL.isFunction(f) && f};
        h.duration = aL.fx.off ? 0 : typeof h.duration === "number" ? h.duration : h.duration in aL.fx.speeds ? aL.fx.speeds[h.duration] : aL.fx.speeds._default, h.old = h.complete, h.complete = function () {
            h.queue !== !1 && aL(this).dequeue(), aL.isFunction(h.old) && h.old.call(this)
        };
        return h
    }, easing:{linear:function (f, e, h, g) {
        return h + g * f
    }, swing:function (f, e, h, g) {
        return(-Math.cos(f * Math.PI) / 2 + 0.5) * g + h
    }}, timers:[], fx:function (f, e, g) {
        this.options = e, this.elem = f, this.prop = g, e.orig || (e.orig = {})
    }}), aL.fx.prototype = {update:function () {
        this.options.step && this.options.step.call(this.elem, this.now, this), (aL.fx.step[this.prop] || aL.fx.step._default)(this)
    }, cur:function () {
        if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) {
            return this.elem[this.prop]
        }
        var e, c = aL.css(this.elem, this.prop);
        return isNaN(e = parseFloat(c)) ? !c || c === "auto" ? 0 : c : e
    }, custom:function (j, h, n) {
        function k(b) {
            return m.step(b)
        }

        var m = this, l = aL.fx;
        this.startTime = aL.now(), this.start = j, this.end = h, this.unit = n || this.unit || (aL.cssNumber[this.prop] ? "" : "px"), this.now = this.start, this.pos = this.state = 0, k.elem = this.elem, k() && aL.timers.push(k) && !aq && (aq = setInterval(l.tick, l.interval))
    }, show:function () {
        this.options.orig[this.prop] = aL.style(this.elem, this.prop), this.options.show = !0, this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur()), aL(this.elem).show()
    }, hide:function () {
        this.options.orig[this.prop] = aL.style(this.elem, this.prop), this.options.hide = !0, this.custom(this.cur(), 0)
    }, step:function (u) {
        var t = aL.now(), s = !0;
        if (u || t >= this.options.duration + this.startTime) {
            this.now = this.end, this.pos = this.state = 1, this.update(), this.options.curAnim[this.prop] = !0;
            for (var r in this.options.curAnim) {
                this.options.curAnim[r] !== !0 && (s = !1)
            }
            if (s) {
                if (this.options.overflow != null && !aL.support.shrinkWrapBlocks) {
                    var q = this.elem, p = this.options;
                    aL.each(["", "X", "Y"], function (e, c) {
                        q.style["overflow" + c] = p.overflow[e]
                    })
                }
                this.options.hide && aL(this.elem).hide();
                if (this.options.hide || this.options.show) {
                    for (var o in this.options.curAnim) {
                        aL.style(this.elem, o, this.options.orig[o])
                    }
                }
                this.options.complete.call(this.elem)
            }
            return !1
        }
        var n = t - this.startTime;
        this.state = n / this.options.duration;
        var m = this.options.specialEasing && this.options.specialEasing[this.prop], l = this.options.easing || (aL.easing.swing ? "swing" : "linear");
        this.pos = aL.easing[m || l](this.state, n, 0, 1, this.options.duration), this.now = this.start + (this.end - this.start) * this.pos, this.update();
        return !0
    }}, aL.extend(aL.fx, {tick:function () {
        var e = aL.timers;
        for (var c = 0; c < e.length; c++) {
            e[c]() || e.splice(c--, 1)
        }
        e.length || aL.fx.stop()
    }, interval:13, stop:function () {
        clearInterval(aq), aq = null
    }, speeds:{slow:600, fast:200, _default:400}, step:{opacity:function (b) {
        aL.style(b.elem, "opacity", b.now)
    }, _default:function (b) {
        b.elem.style && b.elem.style[b.prop] != null ? b.elem.style[b.prop] = (b.prop === "width" || b.prop === "height" ? Math.max(0, b.now) : b.now) + b.unit : b.elem[b.prop] = b.now
    }}}), aL.expr && aL.expr.filters && (aL.expr.filters.animated = function (b) {
        return aL.grep(aL.timers,function (a) {
            return b === a.elem
        }).length
    });
    var ai = /^t(?:able|d|h)$/i, ag = /^(?:body|html)$/i;
    "getBoundingClientRect" in aN.documentElement ? aL.fn.offset = function (C) {
        var B = this[0], A;
        if (C) {
            return this.each(function (a) {
                aL.offset.setOffset(this, C, a)
            })
        }
        if (!B || !B.ownerDocument) {
            return null
        }
        if (B === B.ownerDocument.body) {
            return aL.offset.bodyOffset(B)
        }
        try {
            A = B.getBoundingClientRect()
        } catch (z) {
        }
        var y = B.ownerDocument, x = y.documentElement;
        if (!A || !aL.contains(x, B)) {
            return A ? {top:A.top, left:A.left} : {top:0, left:0}
        }
        var w = y.body, v = af(y), u = x.clientTop || w.clientTop || 0, t = x.clientLeft || w.clientLeft || 0, s = v.pageYOffset || aL.support.boxModel && x.scrollTop || w.scrollTop, r = v.pageXOffset || aL.support.boxModel && x.scrollLeft || w.scrollLeft, q = A.top + s - u, p = A.left + r - t;
        return{top:q, left:p}
    } : aL.fn.offset = function (y) {
        var x = this[0];
        if (y) {
            return this.each(function (a) {
                aL.offset.setOffset(this, y, a)
            })
        }
        if (!x || !x.ownerDocument) {
            return null
        }
        if (x === x.ownerDocument.body) {
            return aL.offset.bodyOffset(x)
        }
        aL.offset.initialize();
        var w, v = x.offsetParent, u = x, t = x.ownerDocument, s = t.documentElement, r = t.body, q = t.defaultView, p = q ? q.getComputedStyle(x, null) : x.currentStyle, o = x.offsetTop, n = x.offsetLeft;
        while ((x = x.parentNode) && x !== r && x !== s) {
            if (aL.offset.supportsFixedPosition && p.position === "fixed") {
                break
            }
            w = q ? q.getComputedStyle(x, null) : x.currentStyle, o -= x.scrollTop, n -= x.scrollLeft, x === v && (o += x.offsetTop, n += x.offsetLeft, aL.offset.doesNotAddBorder && (!aL.offset.doesAddBorderForTableAndCells || !ai.test(x.nodeName)) && (o += parseFloat(w.borderTopWidth) || 0, n += parseFloat(w.borderLeftWidth) || 0), u = v, v = x.offsetParent), aL.offset.subtractsBorderForOverflowNotVisible && w.overflow !== "visible" && (o += parseFloat(w.borderTopWidth) || 0, n += parseFloat(w.borderLeftWidth) || 0), p = w
        }
        if (p.position === "relative" || p.position === "static") {
            o += r.offsetTop, n += r.offsetLeft
        }
        aL.offset.supportsFixedPosition && p.position === "fixed" && (o += Math.max(s.scrollTop, r.scrollTop), n += Math.max(s.scrollLeft, r.scrollLeft));
        return{top:o, left:n}
    }, aL.offset = {initialize:function () {
        var k = aN.body, c = aN.createElement("div"), q, p, o, n, m = parseFloat(aL.css(k, "marginTop")) || 0, l = "<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
        aL.extend(c.style, {position:"absolute", top:0, left:0, margin:0, border:0, width:"1px", height:"1px", visibility:"hidden"}), c.innerHTML = l, k.insertBefore(c, k.firstChild), q = c.firstChild, p = q.firstChild, n = q.nextSibling.firstChild.firstChild, this.doesNotAddBorder = p.offsetTop !== 5, this.doesAddBorderForTableAndCells = n.offsetTop === 5, p.style.position = "fixed", p.style.top = "20px", this.supportsFixedPosition = p.offsetTop === 20 || p.offsetTop === 15, p.style.position = p.style.top = "", q.style.overflow = "hidden", q.style.position = "relative", this.subtractsBorderForOverflowNotVisible = p.offsetTop === -5, this.doesNotIncludeMarginInBodyOffset = k.offsetTop !== m, k.removeChild(c), aL.offset.initialize = aL.noop
    }, bodyOffset:function (f) {
        var e = f.offsetTop, g = f.offsetLeft;
        aL.offset.initialize(), aL.offset.doesNotIncludeMarginInBodyOffset && (e += parseFloat(aL.css(f, "marginTop")) || 0, g += parseFloat(aL.css(f, "marginLeft")) || 0);
        return{top:e, left:g}
    }, setOffset:function (A, z, y) {
        var x = aL.css(A, "position");
        x === "static" && (A.style.position = "relative");
        var w = aL(A), v = w.offset(), u = aL.css(A, "top"), t = aL.css(A, "left"), s = (x === "absolute" || x === "fixed") && aL.inArray("auto", [u, t]) > -1, r = {}, q = {}, p, o;
        s && (q = w.position()), p = s ? q.top : parseInt(u, 10) || 0, o = s ? q.left : parseInt(t, 10) || 0, aL.isFunction(z) && (z = z.call(A, y, v)), z.top != null && (r.top = z.top - v.top + p), z.left != null && (r.left = z.left - v.left + o), "using" in z ? z.using.call(A, r) : w.css(r)
    }}, aL.fn.extend({position:function () {
        if (!this[0]) {
            return null
        }
        var g = this[0], f = this.offsetParent(), j = this.offset(), h = ag.test(f[0].nodeName) ? {top:0, left:0} : f.offset();
        j.top -= parseFloat(aL.css(g, "marginTop")) || 0, j.left -= parseFloat(aL.css(g, "marginLeft")) || 0, h.top += parseFloat(aL.css(f[0], "borderTopWidth")) || 0, h.left += parseFloat(aL.css(f[0], "borderLeftWidth")) || 0;
        return{top:j.top - h.top, left:j.left - h.left}
    }, offsetParent:function () {
        return this.map(function () {
            var b = this.offsetParent || aN.body;
            while (b && (!ag.test(b.nodeName) && aL.css(b, "position") === "static")) {
                b = b.offsetParent
            }
            return b
        })
    }}), aL.each(["Left", "Top"], function (b, g) {
        var f = "scroll" + g;
        aL.fn[f] = function (h) {
            var e = this[0], a;
            if (!e) {
                return null
            }
            if (h !== aP) {
                return this.each(function () {
                    a = af(this), a ? a.scrollTo(b ? aL(a).scrollLeft() : h, b ? h : aL(a).scrollTop()) : this[f] = h
                })
            }
            a = af(e);
            return a ? "pageXOffset" in a ? a[b ? "pageYOffset" : "pageXOffset"] : aL.support.boxModel && a.document.documentElement[f] || a.document.body[f] : e[f]
        }
    }), aL.each(["Height", "Width"], function (b, g) {
        var f = g.toLowerCase();
        aL.fn["inner" + g] = function () {
            return this[0] ? parseFloat(aL.css(this[0], f, "padding")) : null
        }, aL.fn["outer" + g] = function (c) {
            return this[0] ? parseFloat(aL.css(this[0], f, c ? "margin" : "border")) : null
        }, aL.fn[f] = function (c) {
            var l = this[0];
            if (!l) {
                return c == null ? null : this
            }
            if (aL.isFunction(c)) {
                return this.each(function (a) {
                    var h = aL(this);
                    h[f](c.call(this, a, h[f]()))
                })
            }
            if (aL.isWindow(l)) {
                var k = l.document.documentElement["client" + g];
                return l.document.compatMode === "CSS1Compat" && k || l.document.body["client" + g] || k
            }
            if (l.nodeType === 9) {
                return Math.max(l.documentElement["client" + g], l.body["scroll" + g], l.documentElement["scroll" + g], l.body["offset" + g], l.documentElement["offset" + g])
            }
            if (c === aP) {
                var j = aL.css(l, f), e = parseFloat(j);
                return aL.isNaN(e) ? j : e
            }
            return this.css(f, typeof c === "string" ? c : c + "px")
        }
    }), aR.jQuery = aR.$ = aL
})(window);
(function (Z, ac) {
    function aa() {
    }

    function I(a) {
        ab = [a]
    }

    function R(a) {
        Y.insertBefore(a, Y.firstChild)
    }

    function S(a, c, b) {
        return a && a.apply(c.context || c, b)
    }

    function T(a) {
        return/\?/.test(a) ? "&" : "?"
    }

    var Q = "async", J = "charset", M = "", N = "error", K = "_jqjsp", F = "on", P = F + "click", O = F + N, ad = F + "load", V = F + "readystatechange", C = "removeChild", X = "<script/>", G = "success", D = "timeout", E = Z.browser, Y = Z("head")[0] || document.documentElement, H = {}, U = 0, ab, W = {callback:K, url:location.href};

    function L(b) {
        b = Z.extend({}, W, b);
        var e = b.complete, r = b.dataFilter, j = b.callbackParameter, c = b.callback, p = b.cache, m = b.pageCache, n = b.charset, a = b.url, k = b.data, f = b.timeout, g, l = 0, o = aa;
        b.abort = function () {
            !l++ && o()
        };
        if (S(b.beforeSend, b, [b]) === false || l) {
            return b
        }
        a = a || M;
        k = k ? ((typeof k) == "string" ? k : Z.param(k, b.traditional)) : M;
        a += k ? (T(a) + k) : M;
        j && (a += T(a) + encodeURIComponent(j) + "=?");
        !p && !m && (a += T(a) + "_" + (new Date()).getTime() + "=");
        a = a.replace(/=\?(&|$)/, "=" + c + "$1");
        function h(s) {
            !l++ && ac(function () {
                o();
                m && (H[a] = {s:[s]});
                r && (s = r.apply(b, [s]));
                S(b.success, b, [s, G]);
                S(e, b, [b, G])
            }, 0)
        }

        function q(s) {
            !l++ && ac(function () {
                o();
                m && s != D && (H[a] = s);
                S(b.error, b, [b, s]);
                S(e, b, [b, s])
            }, 0)
        }

        m && (g = H[a]) ? (g.s ? h(g.s[0]) : q(g)) : ac(function (u, v, t) {
            if (!l) {
                t = f > 0 && ac(function () {
                    q(D)
                }, f);
                o = function () {
                    t && clearTimeout(t);
                    u[V] = u[P] = u[ad] = u[O] = null;
                    Y[C](u);
                    v && Y[C](v)
                };
                window[c] = I;
                u = Z(X)[0];
                u.id = K + U++;
                if (n) {
                    u[J] = n
                }
                function s(w) {
                    (u[P] || aa)();
                    w = ab;
                    ab = undefined;
                    w ? h(w[0]) : q(N)
                }

                if (E.msie) {
                    u.event = P;
                    u.htmlFor = u.id;
                    u[V] = function () {
                        /loaded|complete/.test(u.readyState) && s()
                    }
                } else {
                    u[O] = u[ad] = s;
                    E.opera ? ((v = Z(X)[0]).text = "jQuery('#" + u.id + "')[0]." + O + "()") : u[Q] = Q
                }
                u.src = a;
                R(u);
                v && R(v)
            }
        }, 0);
        return b
    }

    L.setup = function (a) {
        Z.extend(W, a)
    };
    Z.jsonp = L
})(jQuery, setTimeout);
(function () {
    var w = this;
    var t = w._;
    var b = {};
    var k = Array.prototype, D = Object.prototype, F = Function.prototype;
    var u = k.slice, y = k.unshift, x = D.toString, q = D.hasOwnProperty;
    var o = k.forEach, j = k.map, B = k.reduce, f = k.reduceRight, n = k.filter, a = k.every, A = k.some, v = k.indexOf, g = k.lastIndexOf, c = Array.isArray, C = Object.keys, l = F.bind;
    var E = function (G) {
        return new h(G)
    };
    if (typeof module !== "undefined" && module.exports) {
        module.exports = E;
        E._ = E
    } else {
        w._ = E
    }
    E.VERSION = "1.1.7";
    var e = E.each = E.forEach = function (L, K, J) {
        if (L == null) {
            return
        }
        if (o && L.forEach === o) {
            L.forEach(K, J)
        } else {
            if (L.length === +L.length) {
                for (var I = 0, G = L.length; I < G; I++) {
                    if (I in L && K.call(J, L[I], I, L) === b) {
                        return
                    }
                }
            } else {
                for (var H in L) {
                    if (q.call(L, H)) {
                        if (K.call(J, L[H], H, L) === b) {
                            return
                        }
                    }
                }
            }
        }
    };
    E.map = function (J, I, H) {
        var G = [];
        if (J == null) {
            return G
        }
        if (j && J.map === j) {
            return J.map(I, H)
        }
        e(J, function (M, K, L) {
            G[G.length] = I.call(H, M, K, L)
        });
        return G
    };
    E.reduce = E.foldl = E.inject = function (K, J, G, I) {
        var H = G !== void 0;
        if (K == null) {
            K = []
        }
        if (B && K.reduce === B) {
            if (I) {
                J = E.bind(J, I)
            }
            return H ? K.reduce(J, G) : K.reduce(J)
        }
        e(K, function (N, L, M) {
            if (!H) {
                G = N;
                H = true
            } else {
                G = J.call(I, G, N, L, M)
            }
        });
        if (!H) {
            throw new TypeError("Reduce of empty array with no initial value")
        }
        return G
    };
    E.reduceRight = E.foldr = function (J, I, G, H) {
        if (J == null) {
            J = []
        }
        if (f && J.reduceRight === f) {
            if (H) {
                I = E.bind(I, H)
            }
            return G !== void 0 ? J.reduceRight(I, G) : J.reduceRight(I)
        }
        var K = (E.isArray(J) ? J.slice() : E.toArray(J)).reverse();
        return E.reduce(K, I, G, H)
    };
    E.find = E.detect = function (J, I, H) {
        var G;
        r(J, function (M, K, L) {
            if (I.call(H, M, K, L)) {
                G = M;
                return true
            }
        });
        return G
    };
    E.filter = E.select = function (J, I, H) {
        var G = [];
        if (J == null) {
            return G
        }
        if (n && J.filter === n) {
            return J.filter(I, H)
        }
        e(J, function (M, K, L) {
            if (I.call(H, M, K, L)) {
                G[G.length] = M
            }
        });
        return G
    };
    E.reject = function (J, I, H) {
        var G = [];
        if (J == null) {
            return G
        }
        e(J, function (M, K, L) {
            if (!I.call(H, M, K, L)) {
                G[G.length] = M
            }
        });
        return G
    };
    E.every = E.all = function (J, I, H) {
        var G = true;
        if (J == null) {
            return G
        }
        if (a && J.every === a) {
            return J.every(I, H)
        }
        e(J, function (M, K, L) {
            if (!(G = G && I.call(H, M, K, L))) {
                return b
            }
        });
        return G
    };
    var r = E.some = E.any = function (J, I, H) {
        I = I || E.identity;
        var G = false;
        if (J == null) {
            return G
        }
        if (A && J.some === A) {
            return J.some(I, H)
        }
        e(J, function (M, K, L) {
            if (G |= I.call(H, M, K, L)) {
                return b
            }
        });
        return !!G
    };
    E.include = E.contains = function (I, H) {
        var G = false;
        if (I == null) {
            return G
        }
        if (v && I.indexOf === v) {
            return I.indexOf(H) != -1
        }
        r(I, function (J) {
            if (G = J === H) {
                return true
            }
        });
        return G
    };
    E.invoke = function (H, I) {
        var G = u.call(arguments, 2);
        return E.map(H, function (J) {
            return(I.call ? I || J : J[I]).apply(J, G)
        })
    };
    E.pluck = function (H, G) {
        return E.map(H, function (I) {
            return I[G]
        })
    };
    E.max = function (J, I, H) {
        if (!I && E.isArray(J)) {
            return Math.max.apply(Math, J)
        }
        var G = {computed:-Infinity};
        e(J, function (N, K, M) {
            var L = I ? I.call(H, N, K, M) : N;
            L >= G.computed && (G = {value:N, computed:L})
        });
        return G.value
    };
    E.min = function (J, I, H) {
        if (!I && E.isArray(J)) {
            return Math.min.apply(Math, J)
        }
        var G = {computed:Infinity};
        e(J, function (N, K, M) {
            var L = I ? I.call(H, N, K, M) : N;
            L < G.computed && (G = {value:N, computed:L})
        });
        return G.value
    };
    E.sortBy = function (I, H, G) {
        return E.pluck(E.map(I,function (L, J, K) {
            return{value:L, criteria:H.call(G, L, J, K)}
        }).sort(function (M, L) {
            var K = M.criteria, J = L.criteria;
            return K < J ? -1 : K > J ? 1 : 0
        }), "value")
    };
    E.groupBy = function (I, H) {
        var G = {};
        e(I, function (L, J) {
            var K = H(L, J);
            (G[K] || (G[K] = [])).push(L)
        });
        return G
    };
    E.sortedIndex = function (L, K, I) {
        I || (I = E.identity);
        var G = 0, J = L.length;
        while (G < J) {
            var H = (G + J) >> 1;
            I(L[H]) < I(K) ? G = H + 1 : J = H
        }
        return G
    };
    E.toArray = function (G) {
        if (!G) {
            return[]
        }
        if (G.toArray) {
            return G.toArray()
        }
        if (E.isArray(G)) {
            return u.call(G)
        }
        if (E.isArguments(G)) {
            return u.call(G)
        }
        return E.values(G)
    };
    E.size = function (G) {
        return E.toArray(G).length
    };
    E.first = E.head = function (I, H, G) {
        return(H != null) && !G ? u.call(I, 0, H) : I[0]
    };
    E.rest = E.tail = function (I, G, H) {
        return u.call(I, (G == null) || H ? 1 : G)
    };
    E.last = function (G) {
        return G[G.length - 1]
    };
    E.compact = function (G) {
        return E.filter(G, function (H) {
            return !!H
        })
    };
    E.flatten = function (G) {
        return E.reduce(G, function (H, I) {
            if (E.isArray(I)) {
                return H.concat(E.flatten(I))
            }
            H[H.length] = I;
            return H
        }, [])
    };
    E.without = function (G) {
        return E.difference(G, u.call(arguments, 1))
    };
    E.uniq = E.unique = function (H, G) {
        return E.reduce(H, function (I, K, J) {
            if (0 == J || (G === true ? E.last(I) != K : !E.include(I, K))) {
                I[I.length] = K
            }
            return I
        }, [])
    };
    E.union = function () {
        return E.uniq(E.flatten(arguments))
    };
    E.intersection = E.intersect = function (H) {
        var G = u.call(arguments, 1);
        return E.filter(E.uniq(H), function (I) {
            return E.every(G, function (J) {
                return E.indexOf(J, I) >= 0
            })
        })
    };
    E.difference = function (H, G) {
        return E.filter(H, function (I) {
            return !E.include(G, I)
        })
    };
    E.zip = function () {
        var G = u.call(arguments);
        var J = E.max(E.pluck(G, "length"));
        var I = new Array(J);
        for (var H = 0; H < J; H++) {
            I[H] = E.pluck(G, "" + H)
        }
        return I
    };
    E.indexOf = function (K, I, J) {
        if (K == null) {
            return -1
        }
        var H, G;
        if (J) {
            H = E.sortedIndex(K, I);
            return K[H] === I ? H : -1
        }
        if (v && K.indexOf === v) {
            return K.indexOf(I)
        }
        for (H = 0, G = K.length; H < G; H++) {
            if (K[H] === I) {
                return H
            }
        }
        return -1
    };
    E.lastIndexOf = function (I, H) {
        if (I == null) {
            return -1
        }
        if (g && I.lastIndexOf === g) {
            return I.lastIndexOf(H)
        }
        var G = I.length;
        while (G--) {
            if (I[G] === H) {
                return G
            }
        }
        return -1
    };
    E.range = function (L, J, K) {
        if (arguments.length <= 1) {
            J = L || 0;
            L = 0
        }
        K = arguments[2] || 1;
        var H = Math.max(Math.ceil((J - L) / K), 0);
        var G = 0;
        var I = new Array(H);
        while (G < H) {
            I[G++] = L;
            L += K
        }
        return I
    };
    E.bind = function (H, I) {
        if (H.bind === l && l) {
            return l.apply(H, u.call(arguments, 1))
        }
        var G = u.call(arguments, 2);
        return function () {
            return H.apply(I, G.concat(u.call(arguments)))
        }
    };
    E.bindAll = function (H) {
        var G = u.call(arguments, 1);
        if (G.length == 0) {
            G = E.functions(H)
        }
        e(G, function (I) {
            H[I] = E.bind(H[I], H)
        });
        return H
    };
    E.memoize = function (I, H) {
        var G = {};
        H || (H = E.identity);
        return function () {
            var J = H.apply(this, arguments);
            return q.call(G, J) ? G[J] : (G[J] = I.apply(this, arguments))
        }
    };
    E.delay = function (H, I) {
        var G = u.call(arguments, 2);
        return setTimeout(function () {
            return H.apply(H, G)
        }, I)
    };
    E.defer = function (G) {
        return E.delay.apply(E, [G, 1].concat(u.call(arguments, 1)))
    };
    var z = function (H, J, G) {
        var I;
        return function () {
            var L = this, K = arguments;
            var M = function () {
                I = null;
                H.apply(L, K)
            };
            if (G) {
                clearTimeout(I)
            }
            if (G || !I) {
                I = setTimeout(M, J)
            }
        }
    };
    E.throttle = function (G, H) {
        return z(G, H, false)
    };
    E.debounce = function (G, H) {
        return z(G, H, true)
    };
    E.once = function (I) {
        var G = false, H;
        return function () {
            if (G) {
                return H
            }
            G = true;
            return H = I.apply(this, arguments)
        }
    };
    E.wrap = function (G, H) {
        return function () {
            var I = [G].concat(u.call(arguments));
            return H.apply(this, I)
        }
    };
    E.compose = function () {
        var G = u.call(arguments);
        return function () {
            var H = u.call(arguments);
            for (var I = G.length - 1; I >= 0; I--) {
                H = [G[I].apply(this, H)]
            }
            return H[0]
        }
    };
    E.after = function (H, G) {
        return function () {
            if (--H < 1) {
                return G.apply(this, arguments)
            }
        }
    };
    E.keys = C || function (I) {
        if (I !== Object(I)) {
            throw new TypeError("Invalid object")
        }
        var H = [];
        for (var G in I) {
            if (q.call(I, G)) {
                H[H.length] = G
            }
        }
        return H
    };
    E.values = function (G) {
        return E.map(G, E.identity)
    };
    E.functions = E.methods = function (I) {
        var H = [];
        for (var G in I) {
            if (E.isFunction(I[G])) {
                H.push(G)
            }
        }
        return H.sort()
    };
    E.extend = function (G) {
        e(u.call(arguments, 1), function (H) {
            for (var I in H) {
                if (H[I] !== void 0) {
                    G[I] = H[I]
                }
            }
        });
        return G
    };
    E.defaults = function (G) {
        e(u.call(arguments, 1), function (H) {
            for (var I in H) {
                if (G[I] == null) {
                    G[I] = H[I]
                }
            }
        });
        return G
    };
    E.clone = function (G) {
        return E.isArray(G) ? G.slice() : E.extend({}, G)
    };
    E.tap = function (H, G) {
        G(H);
        return H
    };
    E.isEqual = function (H, G) {
        if (H === G) {
            return true
        }
        var K = typeof(H), M = typeof(G);
        if (K != M) {
            return false
        }
        if (H == G) {
            return true
        }
        if ((!H && G) || (H && !G)) {
            return false
        }
        if (H._chain) {
            H = H._wrapped
        }
        if (G._chain) {
            G = G._wrapped
        }
        if (H.isEqual) {
            return H.isEqual(G)
        }
        if (G.isEqual) {
            return G.isEqual(H)
        }
        if (E.isDate(H) && E.isDate(G)) {
            return H.getTime() === G.getTime()
        }
        if (E.isNaN(H) && E.isNaN(G)) {
            return false
        }
        if (E.isRegExp(H) && E.isRegExp(G)) {
            return H.source === G.source && H.global === G.global && H.ignoreCase === G.ignoreCase && H.multiline === G.multiline
        }
        if (K !== "object") {
            return false
        }
        if (H.length && (H.length !== G.length)) {
            return false
        }
        var I = E.keys(H), L = E.keys(G);
        if (I.length != L.length) {
            return false
        }
        for (var J in H) {
            if (!(J in G) || !E.isEqual(H[J], G[J])) {
                return false
            }
        }
        return true
    };
    E.isEmpty = function (H) {
        if (E.isArray(H) || E.isString(H)) {
            return H.length === 0
        }
        for (var G in H) {
            if (q.call(H, G)) {
                return false
            }
        }
        return true
    };
    E.isElement = function (G) {
        return !!(G && G.nodeType == 1)
    };
    E.isArray = c || function (G) {
        return x.call(G) === "[object Array]"
    };
    E.isObject = function (G) {
        return G === Object(G)
    };
    E.isArguments = function (G) {
        return !!(G && q.call(G, "callee"))
    };
    E.isFunction = function (G) {
        return !!(G && G.constructor && G.call && G.apply)
    };
    E.isString = function (G) {
        return !!(G === "" || (G && G.charCodeAt && G.substr))
    };
    E.isNumber = function (G) {
        return !!(G === 0 || (G && G.toExponential && G.toFixed))
    };
    E.isNaN = function (G) {
        return G !== G
    };
    E.isBoolean = function (G) {
        return G === true || G === false
    };
    E.isDate = function (G) {
        return !!(G && G.getTimezoneOffset && G.setUTCFullYear)
    };
    E.isRegExp = function (G) {
        return !!(G && G.test && G.exec && (G.ignoreCase || G.ignoreCase === false))
    };
    E.isNull = function (G) {
        return G === null
    };
    E.isUndefined = function (G) {
        return G === void 0
    };
    E.noConflict = function () {
        w._ = t;
        return this
    };
    E.identity = function (G) {
        return G
    };
    E.times = function (J, I, H) {
        for (var G = 0; G < J; G++) {
            I.call(H, G)
        }
    };
    E.mixin = function (G) {
        e(E.functions(G), function (H) {
            s(H, E[H] = G[H])
        })
    };
    var m = 0;
    E.uniqueId = function (G) {
        var H = m++;
        return G ? G + H : H
    };
    E.templateSettings = {evaluate:/<%([\s\S]+?)%>/g, interpolate:/<%=([\s\S]+?)%>/g};
    E.template = function (J, I) {
        var K = E.templateSettings;
        var G = "var __p=[],print=function(){__p.push.apply(__p,arguments);};with(obj||{}){__p.push('" + J.replace(/\\/g, "\\\\").replace(/'/g, "\\'").replace(K.interpolate,function (L, M) {
            return"'," + M.replace(/\\'/g, "'") + ",'"
        }).replace(K.evaluate || null,function (L, M) {
            return"');" + M.replace(/\\'/g, "'").replace(/[\r\n\t]/g, " ") + "__p.push('"
        }).replace(/\r/g, "\\r").replace(/\n/g, "\\n").replace(/\t/g, "\\t") + "');}return __p.join('');";
        var H = new Function("obj", G);
        return I ? H(I) : H
    };
    var h = function (G) {
        this._wrapped = G
    };
    E.prototype = h.prototype;
    var p = function (H, G) {
        return G ? E(H).chain() : H
    };
    var s = function (G, H) {
        h.prototype[G] = function () {
            var I = u.call(arguments);
            y.call(I, this._wrapped);
            return p(H.apply(E, I), this._chain)
        }
    };
    E.mixin(E);
    e(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function (G) {
        var H = k[G];
        h.prototype[G] = function () {
            H.apply(this._wrapped, arguments);
            return p(this._wrapped, this._chain)
        }
    });
    e(["concat", "join", "slice"], function (G) {
        var H = k[G];
        h.prototype[G] = function () {
            return p(H.apply(this._wrapped, arguments), this._chain)
        }
    });
    h.prototype.chain = function () {
        this._chain = true;
        return this
    };
    h.prototype.value = function () {
        return this._wrapped
    }
})();
(function () {
    var q = this;
    var p = q.Backbone;
    var b;
    if (typeof exports !== "undefined") {
        b = exports
    } else {
        b = q.Backbone = {}
    }
    b.VERSION = "0.5.1";
    var y = q._;
    if (!y && (typeof require !== "undefined")) {
        y = require("underscore")._
    }
    var f = q.jQuery || q.Zepto;
    b.noConflict = function () {
        q.Backbone = p;
        return this
    };
    b.emulateHTTP = false;
    b.emulateJSON = false;
    b.Events = {bind:function (A, C) {
        var z = this._callbacks || (this._callbacks = {});
        var B = z[A] || (z[A] = []);
        B.push(C);
        return this
    }, unbind:function (C, E) {
        var B;
        if (!C) {
            this._callbacks = {}
        } else {
            if (B = this._callbacks) {
                if (!E) {
                    B[C] = []
                } else {
                    var D = B[C];
                    if (!D) {
                        return this
                    }
                    for (var A = 0, z = D.length; A < z; A++) {
                        if (E === D[A]) {
                            D[A] = null;
                            break
                        }
                    }
                }
            }
        }
        return this
    }, trigger:function (B) {
        var C, H, F, G, D;
        var E = 2;
        if (!(H = this._callbacks)) {
            return this
        }
        while (E--) {
            F = E ? B : "all";
            if (C = H[F]) {
                for (var A = 0, z = C.length; A < z; A++) {
                    if (!(G = C[A])) {
                        C.splice(A, 1);
                        A--;
                        z--
                    } else {
                        D = E ? Array.prototype.slice.call(arguments, 1) : arguments;
                        G.apply(this, D)
                    }
                }
            }
        }
        return this
    }};
    b.Model = function (z, A) {
        var B;
        z || (z = {});
        if (B = this.defaults) {
            if (y.isFunction(B)) {
                B = B()
            }
            z = y.extend({}, B, z)
        }
        this.attributes = {};
        this._escapedAttributes = {};
        this.cid = y.uniqueId("c");
        this.set(z, {silent:true});
        this._changed = false;
        this._previousAttributes = y.clone(this.attributes);
        if (A && A.collection) {
            this.collection = A.collection
        }
        this.initialize(z, A)
    };
    y.extend(b.Model.prototype, b.Events, {_previousAttributes:null, _changed:false, idAttribute:"id", initialize:function () {
    }, toJSON:function () {
        return y.clone(this.attributes)
    }, get:function (z) {
        return this.attributes[z]
    }, escape:function (z) {
        var A;
        if (A = this._escapedAttributes[z]) {
            return A
        }
        var B = this.attributes[z];
        return this._escapedAttributes[z] = o(B == null ? "" : "" + B)
    }, has:function (z) {
        return this.attributes[z] != null
    }, set:function (C, B) {
        B || (B = {});
        if (!C) {
            return this
        }
        if (C.attributes) {
            C = C.attributes
        }
        var A = this.attributes, E = this._escapedAttributes;
        if (!B.silent && this.validate && !this._performValidation(C, B)) {
            return false
        }
        if (this.idAttribute in C) {
            this.id = C[this.idAttribute]
        }
        var D = this._changing;
        this._changing = true;
        for (var z in C) {
            var F = C[z];
            if (!y.isEqual(A[z], F)) {
                A[z] = F;
                delete E[z];
                this._changed = true;
                if (!B.silent) {
                    this.trigger("change:" + z, this, F, B)
                }
            }
        }
        if (!D && !B.silent && this._changed) {
            this.change(B)
        }
        this._changing = false;
        return this
    }, unset:function (z, A) {
        if (!(z in this.attributes)) {
            return this
        }
        A || (A = {});
        var C = this.attributes[z];
        var B = {};
        B[z] = void 0;
        if (!A.silent && this.validate && !this._performValidation(B, A)) {
            return false
        }
        delete this.attributes[z];
        delete this._escapedAttributes[z];
        if (z == this.idAttribute) {
            delete this.id
        }
        this._changed = true;
        if (!A.silent) {
            this.trigger("change:" + z, this, void 0, A);
            this.change(A)
        }
        return this
    }, clear:function (B) {
        B || (B = {});
        var z;
        var A = this.attributes;
        var C = {};
        for (z in A) {
            C[z] = void 0
        }
        if (!B.silent && this.validate && !this._performValidation(C, B)) {
            return false
        }
        this.attributes = {};
        this._escapedAttributes = {};
        this._changed = true;
        if (!B.silent) {
            for (z in A) {
                this.trigger("change:" + z, this, void 0, B)
            }
            this.change(B)
        }
        return this
    }, fetch:function (A) {
        A || (A = {});
        var z = this;
        var B = A.success;
        A.success = function (E, C, D) {
            if (!z.set(z.parse(E, D), A)) {
                return false
            }
            if (B) {
                B(z, E)
            }
        };
        A.error = c(A.error, z, A);
        return(this.sync || b.sync).call(this, "read", this, A)
    }, save:function (B, A) {
        A || (A = {});
        if (B && !this.set(B, A)) {
            return false
        }
        var z = this;
        var C = A.success;
        A.success = function (G, E, F) {
            if (!z.set(z.parse(G, F), A)) {
                return false
            }
            if (C) {
                C(z, G, F)
            }
        };
        A.error = c(A.error, z, A);
        var D = this.isNew() ? "create" : "update";
        return(this.sync || b.sync).call(this, D, this, A)
    }, destroy:function (A) {
        A || (A = {});
        if (this.isNew()) {
            return this.trigger("destroy", this, this.collection, A)
        }
        var z = this;
        var B = A.success;
        A.success = function (C) {
            z.trigger("destroy", z, z.collection, A);
            if (B) {
                B(z, C)
            }
        };
        A.error = c(A.error, z, A);
        return(this.sync || b.sync).call(this, "delete", this, A)
    }, url:function () {
        var z = r(this.collection) || this.urlRoot || t();
        if (this.isNew()) {
            return z
        }
        return z + (z.charAt(z.length - 1) == "/" ? "" : "/") + encodeURIComponent(this.id)
    }, parse:function (A, z) {
        return A
    }, clone:function () {
        return new this.constructor(this)
    }, isNew:function () {
        return this.id == null
    }, change:function (z) {
        this.trigger("change", this, z);
        this._previousAttributes = y.clone(this.attributes);
        this._changed = false
    }, hasChanged:function (z) {
        if (z) {
            return this._previousAttributes[z] != this.attributes[z]
        }
        return this._changed
    }, changedAttributes:function (B) {
        B || (B = this.attributes);
        var A = this._previousAttributes;
        var C = false;
        for (var z in B) {
            if (!y.isEqual(A[z], B[z])) {
                C = C || {};
                C[z] = B[z]
            }
        }
        return C
    }, previous:function (z) {
        if (!z || !this._previousAttributes) {
            return null
        }
        return this._previousAttributes[z]
    }, previousAttributes:function () {
        return y.clone(this._previousAttributes)
    }, _performValidation:function (B, A) {
        var z = this.validate(B);
        if (z) {
            if (A.error) {
                A.error(this, z, A)
            } else {
                this.trigger("error", this, z, A)
            }
            return false
        }
        return true
    }});
    b.Collection = function (A, z) {
        z || (z = {});
        if (z.comparator) {
            this.comparator = z.comparator
        }
        y.bindAll(this, "_onModelEvent", "_removeReference");
        this._reset();
        if (A) {
            this.reset(A, {silent:true})
        }
        this.initialize.apply(this, arguments)
    };
    y.extend(b.Collection.prototype, b.Events, {model:b.Model, initialize:function () {
    }, toJSON:function () {
        return this.map(function (z) {
            return z.toJSON()
        })
    }, add:function (C, A) {
        if (y.isArray(C)) {
            for (var B = 0, z = C.length; B < z; B++) {
                this._add(C[B], A)
            }
        } else {
            this._add(C, A)
        }
        return this
    }, remove:function (C, A) {
        if (y.isArray(C)) {
            for (var B = 0, z = C.length; B < z; B++) {
                this._remove(C[B], A)
            }
        } else {
            this._remove(C, A)
        }
        return this
    }, get:function (z) {
        if (z == null) {
            return null
        }
        return this._byId[z.id != null ? z.id : z]
    }, getByCid:function (z) {
        return z && this._byCid[z.cid || z]
    }, at:function (z) {
        return this.models[z]
    }, sort:function (z) {
        z || (z = {});
        if (!this.comparator) {
            throw new Error("Cannot sort a set without a comparator")
        }
        this.models = this.sortBy(this.comparator);
        if (!z.silent) {
            this.trigger("reset", this, z)
        }
        return this
    }, pluck:function (z) {
        return y.map(this.models, function (A) {
            return A.get(z)
        })
    }, reset:function (A, z) {
        A || (A = []);
        z || (z = {});
        this.each(this._removeReference);
        this._reset();
        this.add(A, {silent:true});
        if (!z.silent) {
            this.trigger("reset", this, z)
        }
        return this
    }, fetch:function (z) {
        z || (z = {});
        var B = this;
        var A = z.success;
        z.success = function (E, C, D) {
            B[z.add ? "add" : "reset"](B.parse(E, D), z);
            if (A) {
                A(B, E)
            }
        };
        z.error = c(z.error, B, z);
        return(this.sync || b.sync).call(this, "read", this, z)
    }, create:function (A, z) {
        var B = this;
        z || (z = {});
        A = this._prepareModel(A, z);
        if (!A) {
            return false
        }
        var C = z.success;
        z.success = function (D, F, E) {
            B.add(D, z);
            if (C) {
                C(D, F, E)
            }
        };
        A.save(null, z);
        return A
    }, parse:function (A, z) {
        return A
    }, chain:function () {
        return y(this.models).chain()
    }, _reset:function (z) {
        this.length = 0;
        this.models = [];
        this._byId = {};
        this._byCid = {}
    }, _prepareModel:function (B, A) {
        if (!(B instanceof b.Model)) {
            var z = B;
            B = new this.model(z, {collection:this});
            if (B.validate && !B._performValidation(z, A)) {
                B = false
            }
        } else {
            if (!B.collection) {
                B.collection = this
            }
        }
        return B
    }, _add:function (B, A) {
        A || (A = {});
        B = this._prepareModel(B, A);
        if (!B) {
            return false
        }
        var C = this.getByCid(B) || this.get(B);
        if (C) {
            throw new Error(["Can't add the same model to a set twice", C.id])
        }
        this._byId[B.id] = B;
        this._byCid[B.cid] = B;
        var z = A.at != null ? A.at : this.comparator ? this.sortedIndex(B, this.comparator) : this.length;
        this.models.splice(z, 0, B);
        B.bind("all", this._onModelEvent);
        this.length++;
        if (!A.silent) {
            B.trigger("add", B, this, A)
        }
        return B
    }, _remove:function (A, z) {
        z || (z = {});
        A = this.getByCid(A) || this.get(A);
        if (!A) {
            return null
        }
        delete this._byId[A.id];
        delete this._byCid[A.cid];
        this.models.splice(this.indexOf(A), 1);
        this.length--;
        if (!z.silent) {
            A.trigger("remove", A, this, z)
        }
        this._removeReference(A);
        return A
    }, _removeReference:function (z) {
        if (this == z.collection) {
            delete z.collection
        }
        z.unbind("all", this._onModelEvent)
    }, _onModelEvent:function (B, A, C, z) {
        if ((B == "add" || B == "remove") && C != this) {
            return
        }
        if (B == "destroy") {
            this._remove(A, z)
        }
        if (A && B === "change:" + A.idAttribute) {
            delete this._byId[A.previous(A.idAttribute)];
            this._byId[A.id] = A
        }
        this.trigger.apply(this, arguments)
    }});
    var w = ["forEach", "each", "map", "reduce", "reduceRight", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any", "include", "contains", "invoke", "max", "min", "sortBy", "sortedIndex", "toArray", "size", "first", "rest", "last", "without", "indexOf", "lastIndexOf", "isEmpty"];
    y.each(w, function (z) {
        b.Collection.prototype[z] = function () {
            return y[z].apply(y, [this.models].concat(y.toArray(arguments)))
        }
    });
    b.Router = function (z) {
        z || (z = {});
        if (z.routes) {
            this.routes = z.routes
        }
        this._bindRoutes();
        this.initialize.apply(this, arguments)
    };
    var h = /:([\w\d]+)/g;
    var x = /\*([\w\d]+)/g;
    var e = /[-[\]{}()+?.,\\^$|#\s]/g;
    y.extend(b.Router.prototype, b.Events, {initialize:function () {
    }, route:function (z, A, B) {
        b.history || (b.history = new b.History);
        if (!y.isRegExp(z)) {
            z = this._routeToRegExp(z)
        }
        b.history.route(z, y.bind(function (D) {
            var C = this._extractParameters(z, D);
            B.apply(this, C);
            this.trigger.apply(this, ["route:" + A].concat(C))
        }, this))
    }, navigate:function (z, A) {
        b.history.navigate(z, A)
    }, _bindRoutes:function () {
        if (!this.routes) {
            return
        }
        var A = [];
        for (var B in this.routes) {
            A.unshift([B, this.routes[B]])
        }
        for (var C = 0, z = A.length; C < z; C++) {
            this.route(A[C][0], A[C][1], this[A[C][1]])
        }
    }, _routeToRegExp:function (z) {
        z = z.replace(e, "\\$&").replace(h, "([^/]*)").replace(x, "(.*?)");
        return new RegExp("^" + z + "$")
    }, _extractParameters:function (z, A) {
        return z.exec(A).slice(1)
    }});
    b.History = function () {
        this.handlers = [];
        y.bindAll(this, "checkUrl")
    };
    var n = /^#*/;
    var j = /msie [\w.]+/;
    var l = false;
    y.extend(b.History.prototype, {interval:50, getFragment:function (A, z) {
        if (A == null) {
            if (this._hasPushState || z) {
                A = window.location.pathname;
                var B = window.location.search;
                if (B) {
                    A += B
                }
                if (A.indexOf(this.options.root) == 0) {
                    A = A.substr(this.options.root.length)
                }
            } else {
                A = window.location.hash
            }
        }
        return A.replace(n, "")
    }, start:function (B) {
        if (l) {
            throw new Error("Backbone.history has already been started")
        }
        this.options = y.extend({}, {root:"/"}, this.options, B);
        this._wantsPushState = !!this.options.pushState;
        this._hasPushState = !!(this.options.pushState && window.history && window.history.pushState);
        var A = this.getFragment();
        var z = document.documentMode;
        var D = (j.exec(navigator.userAgent.toLowerCase()) && (!z || z <= 7));
        if (D) {
            this.iframe = f('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo("body")[0].contentWindow;
            this.navigate(A)
        }
        if (this._hasPushState) {
            f(window).bind("popstate", this.checkUrl)
        } else {
            if ("onhashchange" in window && !D) {
                f(window).bind("hashchange", this.checkUrl)
            } else {
                setInterval(this.checkUrl, this.interval)
            }
        }
        this.fragment = A;
        l = true;
        var E = window.location;
        var C = E.pathname == this.options.root;
        if (this._wantsPushState && !this._hasPushState && !C) {
            this.fragment = this.getFragment(null, true);
            window.location.replace(this.options.root + "#" + this.fragment)
        } else {
            if (this._wantsPushState && this._hasPushState && C && E.hash) {
                this.fragment = E.hash.replace(n, "");
                window.history.replaceState({}, document.title, E.protocol + "//" + E.host + this.options.root + this.fragment)
            }
        }
        return this.loadUrl()
    }, route:function (z, A) {
        this.handlers.unshift({route:z, callback:A})
    }, checkUrl:function (A) {
        var z = this.getFragment();
        if (z == this.fragment && this.iframe) {
            z = this.getFragment(this.iframe.location.hash)
        }
        if (z == this.fragment || z == decodeURIComponent(this.fragment)) {
            return false
        }
        if (this.iframe) {
            this.navigate(z)
        }
        this.loadUrl() || this.loadUrl(window.location.hash)
    }, loadUrl:function (B) {
        var A = this.fragment = this.getFragment(B);
        var z = y.any(this.handlers, function (C) {
            if (C.route.test(A)) {
                C.callback(A);
                return true
            }
        });
        return z
    }, navigate:function (z, A) {
        var C = (z || "").replace(n, "");
        if (this.fragment == C || this.fragment == decodeURIComponent(C)) {
            return
        }
        if (this._hasPushState) {
            var B = window.location;
            if (C.indexOf(this.options.root) != 0) {
                C = this.options.root + C
            }
            this.fragment = C;
            window.history.pushState({}, document.title, B.protocol + "//" + B.host + C)
        } else {
            window.location.hash = this.fragment = C;
            if (this.iframe && (C != this.getFragment(this.iframe.location.hash))) {
                this.iframe.document.open().close();
                this.iframe.location.hash = C
            }
        }
        if (A) {
            this.loadUrl(z)
        }
    }});
    b.View = function (z) {
        this.cid = y.uniqueId("view");
        this._configure(z || {});
        this._ensureElement();
        this.delegateEvents();
        this.initialize.apply(this, arguments)
    };
    var m = function (z) {
        return f(z, this.el)
    };
    var a = /^(\S+)\s*(.*)$/;
    var u = ["model", "collection", "el", "id", "attributes", "className", "tagName"];
    y.extend(b.View.prototype, b.Events, {tagName:"div", $:m, initialize:function () {
    }, render:function () {
        return this
    }, remove:function () {
        f(this.el).remove();
        return this
    }, make:function (A, z, C) {
        var B = document.createElement(A);
        if (z) {
            f(B).attr(z)
        }
        if (C) {
            f(B).html(C)
        }
        return B
    }, delegateEvents:function (D) {
        if (!(D || (D = this.events))) {
            return
        }
        f(this.el).unbind(".delegateEvents" + this.cid);
        for (var C in D) {
            var E = this[D[C]];
            if (!E) {
                throw new Error('Event "' + D[C] + '" does not exist')
            }
            var B = C.match(a);
            var A = B[1], z = B[2];
            E = y.bind(E, this);
            A += ".delegateEvents" + this.cid;
            if (z === "") {
                f(this.el).bind(A, E)
            } else {
                f(this.el).delegate(z, A, E)
            }
        }
    }, _configure:function (B) {
        if (this.options) {
            B = y.extend({}, this.options, B)
        }
        for (var C = 0, A = u.length; C < A; C++) {
            var z = u[C];
            if (B[z]) {
                this[z] = B[z]
            }
        }
        this.options = B
    }, _ensureElement:function () {
        if (!this.el) {
            var z = this.attributes || {};
            if (this.id) {
                z.id = this.id
            }
            if (this.className) {
                z["class"] = this.className
            }
            this.el = this.make(this.tagName, z)
        } else {
            if (y.isString(this.el)) {
                this.el = f(this.el).get(0)
            }
        }
    }});
    var v = function (z, A) {
        var B = k(this, z, A);
        B.extend = this.extend;
        return B
    };
    b.Model.extend = b.Collection.extend = b.Router.extend = b.View.extend = v;
    var s = {create:"POST", update:"PUT", "delete":"DELETE", read:"GET"};
    b.sync = function (D, A, z) {
        var B = s[D];
        var C = y.extend({type:B, processData:false}, z);
        if (!C.url) {
            C.url = r(A) || t()
        }
        if (!C.data && A && (D == "create" || D == "update")) {
            C.contentType = "application/json";
            C.data = JSON.stringify(A.toJSON())
        }
        if (b.emulateJSON) {
            C.contentType = "application/x-www-form-urlencoded";
            C.processData = true;
            C.data = C.data - {model-C.data} - {}
        }
        if (b.emulateHTTP) {
            if (B ===.
            htm
            "/*tpa=http://192.168.119.101:8888/;C.processData=true;C.data=C.data?{model:C.data}:{}}if(b.emulateHTTP){if(B===*/PUT" || B === "DELETE"
        )
            {
                if (b.emulateJSON) {
                    C.data._method = B
                }
                C.type = "POST";
                C.beforeSend = function (E) {
                    E.setRequestHeader("X-HTTP-Method-Override", B)
                }
            }
        }
        C.error = function () {
            NetworkError()
        };
        return f.jsonp(C)
    };
    var g = function () {
    };
    var k = function (A, z, B) {
        var C;
        if (z && z.hasOwnProperty("constructor")) {
            C = z.constructor
        } else {
            C = function () {
                return A.apply(this, arguments)
            }
        }
        y.extend(C, A);
        g.prototype = A.prototype;
        C.prototype = new g();
        if (z) {
            y.extend(C.prototype, z)
        }
        if (B) {
            y.extend(C, B)
        }
        C.prototype.constructor = C;
        C.__super__ = A.prototype;
        return C
    };
    var r = function (z) {
        if (!(z && z.url)) {
            return null
        }
        return y.isFunction(z.url) ? z.url() : z.url
    };
    var t = function () {
        throw new Error('A "url" property or function must be specified')
    };
    var c = function (B, A, z) {
        return function (C) {
            if (B) {
                B(A, C, z)
            } else {
                A.trigger("error", A, C, z)
            }
        }
    };
    var o = function (z) {
        return z.replace(/&(?!\w+;|#\d+;|#x[\da-f]+;)/gi, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#x27").replace(/\//g, "&#x2F;")
    }
}).call(this);
(function (f, e) {
    function b(g, c) {
        var h = g.nodeName.toLowerCase();
        if ("area" === h) {
            c = g.parentNode;
            h = c.name;
            if (!g.href || !h || c.nodeName.toLowerCase() !== "map") {
                return false
            }
            g = f("img[usemap=#" + h + "]")[0];
            return !!g && a(g)
        }
        return(/input|select|textarea|button|object/.test(h) ? !g.disabled : "a" == h ? g.href || c : c) && a(g)
    }

    function a(c) {
        return !f(c).parents().andSelf().filter(function () {
            return f.curCSS(this, "visibility") === "hidden" || f.expr.filters.hidden(this)
        }).length
    }

    f.ui = f.ui || {};
    if (!f.ui.version) {
        f.extend(f.ui, {version:"1.8.13.htm"/*tpa=http://192.168.119.101:8888/1.8.13*/, keyCode:{ALT:18, BACKSPACE:8, CAPS_LOCK:20, COMMA:188, COMMAND:91, COMMAND_LEFT:91, COMMAND_RIGHT:93, CONTROL:17, DELETE:46, DOWN:40, END:35, ENTER:13, ESCAPE:27, HOME:36, INSERT:45, LEFT:37, MENU:93, NUMPAD_ADD:107, NUMPAD_DECIMAL:110, NUMPAD_DIVIDE:111, NUMPAD_ENTER:108, NUMPAD_MULTIPLY:106, NUMPAD_SUBTRACT:109, PAGE_DOWN:34, PAGE_UP:33, PERIOD:190, RIGHT:39, SHIFT:16, SPACE:32, TAB:9, UP:38, WINDOWS:91}});
        f.fn.extend({_focus:f.fn.focus, focus:function (g, c) {
            return typeof g === "number" ? this.each(function () {
                var h = this;
                setTimeout(function () {
                    f(h).focus();
                    c && c.call(h)
                }, g)
            }) : this._focus.apply(this, arguments)
        }, scrollParent:function () {
            var c;
            c = f.browser.msie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function () {
                return/(relative|absolute|fixed)/.test(f.curCSS(this, "position", 1)) && /(auto|scroll)/.test(f.curCSS(this, "overflow", 1) + f.curCSS(this, "overflow-y", 1) + f.curCSS(this, "overflow-x", 1))
            }).eq(0) : this.parents().filter(function () {
                return/(auto|scroll)/.test(f.curCSS(this, "overflow", 1) + f.curCSS(this, "overflow-y", 1) + f.curCSS(this, "overflow-x", 1))
            }).eq(0);
            return/fixed/.test(this.css("position")) || !c.length ? f(document) : c
        }, zIndex:function (g) {
            if (g !== e) {
                return this.css("zIndex", g)
            }
            if (this.length) {
                g = f(this[0]);
                for (var c; g.length && g[0] !== document;) {
                    c = g.css("position");
                    if (c === "absolute" || c === "relative" || c === "fixed") {
                        c = parseInt(g.css("zIndex"), 10);
                        if (!isNaN(c) && c !== 0) {
                            return c
                        }
                    }
                    g = g.parent()
                }
            }
            return 0
        }, disableSelection:function () {
            return this.bind((f.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function (c) {
                c.preventDefault()
            })
        }, enableSelection:function () {
            return this.unbind(".ui-disableSelection")
        }});
        f.each(["Width", "Height"], function (g, c) {
            function m(p, o, h, q) {
                f.each(l, function () {
                    o -= parseFloat(f.curCSS(p, "padding" + this, true)) || 0;
                    if (h) {
                        o -= parseFloat(f.curCSS(p, "border" + this + "Width", true)) || 0
                    }
                    if (q) {
                        o -= parseFloat(f.curCSS(p, "margin" + this, true)) || 0
                    }
                });
                return o
            }

            var l = c === "Width" ? ["Left", "Right"] : ["Top", "Bottom"], k = c.toLowerCase(), j = {innerWidth:f.fn.innerWidth, innerHeight:f.fn.innerHeight, outerWidth:f.fn.outerWidth, outerHeight:f.fn.outerHeight};
            f.fn["inner" + c] = function (h) {
                if (h === e) {
                    return j["inner" + c].call(this)
                }
                return this.each(function () {
                    f(this).css(k, m(this, h) + "px")
                })
            };
            f.fn["outer" + c] = function (n, h) {
                if (typeof n !== "number") {
                    return j["outer" + c].call(this, n)
                }
                return this.each(function () {
                    f(this).css(k, m(this, n, true, h) + "px")
                })
            }
        });
        f.extend(f.expr[":"], {data:function (g, c, h) {
            return !!f.data(g, h[3])
        }, focusable:function (c) {
            return b(c, !isNaN(f.attr(c, "tabindex")))
        }, tabbable:function (g) {
            var c = f.attr(g, "tabindex"), h = isNaN(c);
            return(h || c >= 0) && b(g, !h)
        }});
        f(function () {
            var g = document.body, c = g.appendChild(c = document.createElement("div"));
            f.extend(c.style, {minHeight:"100px", height:"auto", padding:0, borderWidth:0});
            f.support.minHeight = c.offsetHeight === 100;
            f.support.selectstart = "onselectstart" in c;
            g.removeChild(c).style.display = "none"
        });
        f.extend(f.ui, {plugin:{add:function (g, c, j) {
            g = f.ui[g].prototype;
            for (var h in j) {
                g.plugins[h] = g.plugins[h] || [];
                g.plugins[h].push([c, j[h]])
            }
        }, call:function (g, c, j) {
            if ((c = g.plugins[c]) && g.element[0].parentNode) {
                for (var h = 0; h < c.length; h++) {
                    g.options[c[h][0]] && c[h][1].apply(g.element, j)
                }
            }
        }}, contains:function (g, c) {
            return document.compareDocumentPosition ? g.compareDocumentPosition(c) & 16 : g !== c && g.contains(c)
        }, hasScroll:function (g, c) {
            if (f(g).css("overflow") === "hidden") {
                return false
            }
            c = c && c === "left" ? "scrollLeft" : "scrollTop";
            var h = false;
            if (g[c] > 0) {
                return true
            }
            g[c] = 1;
            h = g[c] > 0;
            g[c] = 0;
            return h
        }, isOverAxis:function (g, c, h) {
            return g > c && g < c + h
        }, isOver:function (g, c, m, l, k, j) {
            return f.ui.isOverAxis(g, m, k) && f.ui.isOverAxis(c, l, j)
        }})
    }
})(jQuery);
(function (a, f) {
    if (a.cleanData) {
        var e = a.cleanData;
        a.cleanData = function (b) {
            for (var h = 0, g; (g = b[h]) != null; h++) {
                a(g).triggerHandler("remove")
            }
            e(b)
        }
    } else {
        var c = a.fn.remove;
        a.fn.remove = function (b, g) {
            return this.each(function () {
                if (!g) {
                    if (!b || a.filter(b, [this]).length) {
                        a("*", this).add([this]).each(function () {
                            a(this).triggerHandler("remove")
                        })
                    }
                }
                return c.call(a(this), b, g)
            })
        }
    }
    a.widget = function (b, k, j) {
        var h = b.split(".")[0], g;
        b = b.split(".")[1];
        g = h + "-" + b;
        if (!j) {
            j = k;
            k = a.Widget
        }
        a.expr[":"][g] = function (l) {
            return !!a.data(l, b)
        };
        a[h] = a[h] || {};
        a[h][b] = function (l, m) {
            arguments.length && this._createWidget(l, m)
        };
        k = new k;
        k.options = a.extend(true, {}, k.options);
        a[h][b].prototype = a.extend(true, k, {namespace:h, widgetName:b, widgetEventPrefix:a[h][b].prototype.widgetEventPrefix || b, widgetBaseClass:g}, j);
        a.widget.bridge(b, a[h][b])
    };
    a.widget.bridge = function (b, g) {
        a.fn[b] = function (m) {
            var l = typeof m === "string", k = Array.prototype.slice.call(arguments, 1), j = this;
            m = !l && k.length ? a.extend.apply(null, [true, m].concat(k)) : m;
            if (l && m.charAt(0) === "_") {
                return j
            }
            l ? this.each(function () {
                var n = a.data(this, b), h = n && a.isFunction(n[m]) ? n[m].apply(n, k) : n;
                if (h !== n && h !== f) {
                    j = h;
                    return false
                }
            }) : this.each(function () {
                var h = a.data(this, b);
                h ? h.option(m || {})._init() : a.data(this, b, new g(m, this))
            });
            return j
        }
    };
    a.Widget = function (b, g) {
        arguments.length && this._createWidget(b, g)
    };
    a.Widget.prototype = {widgetName:"widget", widgetEventPrefix:"", options:{disabled:false}, _createWidget:function (b, h) {
        a.data(h, this.widgetName, this);
        this.element = a(h);
        this.options = a.extend(true, {}, this.options, this._getCreateOptions(), b);
        var g = this;
        this.element.bind("remove." + this.widgetName, function () {
            g.destroy()
        });
        this._create();
        this._trigger("create");
        this._init()
    }, _getCreateOptions:function () {
        return a.metadata && a.metadata.get(this.element[0])[this.widgetName]
    }, _create:function () {
    }, _init:function () {
    }, destroy:function () {
        this.element.unbind("." + this.widgetName).removeData(this.widgetName);
        this.widget().unbind("." + this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass + "-disabled ui-state-disabled")
    }, widget:function () {
        return this.element
    }, option:function (b, h) {
        var g = b;
        if (arguments.length === 0) {
            return a.extend({}, this.options)
        }
        if (typeof b === "string") {
            if (h === f) {
                return this.options[b]
            }
            g = {};
            g[b] = h
        }
        this._setOptions(g);
        return this
    }, _setOptions:function (b) {
        var g = this;
        a.each(b, function (j, h) {
            g._setOption(j, h)
        });
        return this
    }, _setOption:function (b, g) {
        this.options[b] = g;
        if (b === "disabled") {
            this.widget()[g ? "addClass" : "removeClass"](this.widgetBaseClass + "-disabled ui-state-disabled").attr("aria-disabled", g)
        }
        return this
    }, enable:function () {
        return this._setOption("disabled", false)
    }, disable:function () {
        return this._setOption("disabled", true)
    }, _trigger:function (b, k, j) {
        var h = this.options[b];
        k = a.Event(k);
        k.type = (b === this.widgetEventPrefix ? b : this.widgetEventPrefix + b).toLowerCase();
        j = j || {};
        if (k.originalEvent) {
            b = a.event.props.length;
            for (var g; b;) {
                g = a.event.props[--b];
                k[g] = k.originalEvent[g]
            }
        }
        this.element.trigger(k, j);
        return !(a.isFunction(h) && h.call(this.element[0], k, j) === false || k.isDefaultPrevented())
    }}
})(jQuery);
(function (a) {
    var c = false;
    a(document).mousedown(function () {
        c = false
    });
    a.widget("ui.mouse", {options:{cancel:":input,option", distance:1, delay:0}, _mouseInit:function () {
        var b = this;
        this.element.bind("mousedown." + this.widgetName,function (e) {
            return b._mouseDown(e)
        }).bind("click." + this.widgetName, function (e) {
            if (true === a.data(e.target, b.widgetName + ".preventClickEvent")) {
                a.removeData(e.target, b.widgetName + ".preventClickEvent");
                e.stopImmediatePropagation();
                return false
            }
        });
        this.started = false
    }, _mouseDestroy:function () {
        this.element.unbind("." + this.widgetName)
    }, _mouseDown:function (b) {
        if (!c) {
            this._mouseStarted && this._mouseUp(b);
            this._mouseDownEvent = b;
            var j = this, h = b.which == 1, e = typeof this.options.cancel == "string" ? a(b.target).parents().add(b.target).filter(this.options.cancel).length : false;
            if (!h || e || !this._mouseCapture(b)) {
                return true
            }
            this.mouseDelayMet = !this.options.delay;
            if (!this.mouseDelayMet) {
                this._mouseDelayTimer = setTimeout(function () {
                    j.mouseDelayMet = true
                }, this.options.delay)
            }
            if (this._mouseDistanceMet(b) && this._mouseDelayMet(b)) {
                this._mouseStarted = this._mouseStart(b) !== false;
                if (!this._mouseStarted) {
                    b.preventDefault();
                    return true
                }
            }
            true === a.data(b.target, this.widgetName + ".preventClickEvent") && a.removeData(b.target, this.widgetName + ".preventClickEvent");
            this._mouseMoveDelegate = function (f) {
                return j._mouseMove(f)
            };
            this._mouseUpDelegate = function (f) {
                return j._mouseUp(f)
            };
            a(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
            b.preventDefault();
            return c = true
        }
    }, _mouseMove:function (b) {
        if (a.browser.msie && !(document.documentMode >= 9) && !b.button) {
            return this._mouseUp(b)
        }
        if (this._mouseStarted) {
            this._mouseDrag(b);
            return b.preventDefault()
        }
        if (this._mouseDistanceMet(b) && this._mouseDelayMet(b)) {
            (this._mouseStarted = this._mouseStart(this._mouseDownEvent, b) !== false) ? this._mouseDrag(b) : this._mouseUp(b)
        }
        return !this._mouseStarted
    }, _mouseUp:function (b) {
        a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
        if (this._mouseStarted) {
            this._mouseStarted = false;
            b.target == this._mouseDownEvent.target && a.data(b.target, this.widgetName + ".preventClickEvent", true);
            this._mouseStop(b)
        }
        return false
    }, _mouseDistanceMet:function (b) {
        return Math.max(Math.abs(this._mouseDownEvent.pageX - b.pageX), Math.abs(this._mouseDownEvent.pageY - b.pageY)) >= this.options.distance
    }, _mouseDelayMet:function () {
        return this.mouseDelayMet
    }, _mouseStart:function () {
    }, _mouseDrag:function () {
    }, _mouseStop:function () {
    }, _mouseCapture:function () {
        return true
    }})
})(jQuery);
(function (g) {
    g.ui = g.ui || {};
    var f = /left|center|right/, e = /top|center|bottom/, b = g.fn.position, a = g.fn.offset;
    g.fn.position = function (c) {
        if (!c || !c.of) {
            return b.apply(this, arguments)
        }
        c = g.extend({}, c);
        var l = g(c.of), r = l[0], p = (c.collision || "flip").split(" "), q = c.offset ? c.offset.split(" ") : [0, 0], o, m, n;
        if (r.nodeType === 9) {
            o = l.width();
            m = l.height();
            n = {top:0, left:0}
        } else {
            if (r.setTimeout) {
                o = l.width();
                m = l.height();
                n = {top:l.scrollTop(), left:l.scrollLeft()}
            } else {
                if (r.preventDefault) {
                    c.at = "left top";
                    o = m = 0;
                    n = {top:c.of.pageY, left:c.of.pageX}
                } else {
                    o = l.outerWidth();
                    m = l.outerHeight();
                    n = l.offset()
                }
            }
        }
        g.each(["my", "at"], function () {
            var h = (c[this] || "").split(" ");
            if (h.length === 1) {
                h = f.test(h[0]) ? h.concat(["center"]) : e.test(h[0]) ? ["center"].concat(h) : ["center", "center"]
            }
            h[0] = f.test(h[0]) ? h[0] : "center";
            h[1] = e.test(h[1]) ? h[1] : "center";
            c[this] = h
        });
        if (p.length === 1) {
            p[1] = p[0]
        }
        q[0] = parseInt(q[0], 10) || 0;
        if (q.length === 1) {
            q[1] = q[0]
        }
        q[1] = parseInt(q[1], 10) || 0;
        if (c.at[0] === "right") {
            n.left += o
        } else {
            if (c.at[0] === "center") {
                n.left += o / 2
            }
        }
        if (c.at[1] === "bottom") {
            n.top += m
        } else {
            if (c.at[1] === "center") {
                n.top += m / 2
            }
        }
        n.left += q[0];
        n.top += q[1];
        return this.each(function () {
            var x = g(this), t = x.outerWidth(), s = x.outerHeight(), k = parseInt(g.curCSS(this, "marginLeft", true)) || 0, j = parseInt(g.curCSS(this, "marginTop", true)) || 0, z = t + k + (parseInt(g.curCSS(this, "marginRight", true)) || 0), y = s + j + (parseInt(g.curCSS(this, "marginBottom", true)) || 0), u = g.extend({}, n), h;
            if (c.my[0] === "right") {
                u.left -= t
            } else {
                if (c.my[0] === "center") {
                    u.left -= t / 2
                }
            }
            if (c.my[1] === "bottom") {
                u.top -= s
            } else {
                if (c.my[1] === "center") {
                    u.top -= s / 2
                }
            }
            u.left = Math.round(u.left);
            u.top = Math.round(u.top);
            h = {left:u.left - k, top:u.top - j};
            g.each(["left", "top"], function (w, v) {
                g.ui.position[p[w]] && g.ui.position[p[w]][v](u, {targetWidth:o, targetHeight:m, elemWidth:t, elemHeight:s, collisionPosition:h, collisionWidth:z, collisionHeight:y, offset:q, my:c.my, at:c.at})
            });
            g.fn.bgiframe && x.bgiframe();
            x.offset(g.extend(u, {using:c.using}))
        })
    };
    g.ui.position = {fit:{left:function (c, h) {
        var j = g(window);
        j = h.collisionPosition.left + h.collisionWidth - j.width() - j.scrollLeft();
        c.left = j > 0 ? c.left - j : Math.max(c.left - h.collisionPosition.left, c.left)
    }, top:function (c, h) {
        var j = g(window);
        j = h.collisionPosition.top + h.collisionHeight - j.height() - j.scrollTop();
        c.top = j > 0 ? c.top - j : Math.max(c.top - h.collisionPosition.top, c.top)
    }}, flip:{left:function (c, j) {
        if (j.at[0] !== "center") {
            var n = g(window);
            n = j.collisionPosition.left + j.collisionWidth - n.width() - n.scrollLeft();
            var l = j.my[0] === "left" ? -j.elemWidth : j.my[0] === "right" ? j.elemWidth : 0, m = j.at[0] === "left" ? j.targetWidth : -j.targetWidth, k = -2 * j.offset[0];
            c.left += j.collisionPosition.left < 0 ? l + m + k : n > 0 ? l + m + k : 0
        }
    }, top:function (c, j) {
        if (j.at[1] !== "center") {
            var n = g(window);
            n = j.collisionPosition.top + j.collisionHeight - n.height() - n.scrollTop();
            var l = j.my[1] === "top" ? -j.elemHeight : j.my[1] === "bottom" ? j.elemHeight : 0, m = j.at[1] === "top" ? j.targetHeight : -j.targetHeight, k = -2 * j.offset[1];
            c.top += j.collisionPosition.top < 0 ? l + m + k : n > 0 ? l + m + k : 0
        }
    }}};
    if (!g.offset.setOffset) {
        g.offset.setOffset = function (c, j) {
            if (/static/.test(g.curCSS(c, "position"))) {
                c.style.position = "relative"
            }
            var n = g(c), l = n.offset(), m = parseInt(g.curCSS(c, "top", true), 10) || 0, k = parseInt(g.curCSS(c, "left", true), 10) || 0;
            l = {top:j.top - l.top + m, left:j.left - l.left + k};
            "using" in j ? j.using.call(c, l) : n.css(l)
        };
        g.fn.offset = function (c) {
            var h = this[0];
            if (!h || !h.ownerDocument) {
                return null
            }
            if (c) {
                return this.each(function () {
                    g.offset.setOffset(this, c)
                })
            }
            return a.call(this)
        }
    }
})(jQuery);
(function (a) {
    a.widget("ui.draggable", a.ui.mouse, {widgetEventPrefix:"drag", options:{addClasses:true, appendTo:"parent", axis:false, connectToSortable:false, containment:false, cursor:"auto", cursorAt:false, grid:false, handle:false, helper:"original", iframeFix:false, opacity:false, refreshPositions:false, revert:false, revertDuration:500, scope:"default", scroll:true, scrollSensitivity:20, scrollSpeed:20, snap:false, snapMode:"both", snapTolerance:20, stack:false, zIndex:false}, _create:function () {
        if (this.options.helper == "original" && !/^(?:r|a|f)/.test(this.element.css("position"))) {
            this.element[0].style.position = "relative"
        }
        this.options.addClasses && this.element.addClass("ui-draggable");
        this.options.disabled && this.element.addClass("ui-draggable-disabled");
        this._mouseInit()
    }, destroy:function () {
        if (this.element.data("draggable")) {
            this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
            this._mouseDestroy();
            return this
        }
    }, _mouseCapture:function (e) {
        var c = this.options;
        if (this.helper || c.disabled || a(e.target).is(".ui-resizable-handle")) {
            return false
        }
        this.handle = this._getHandle(e);
        if (!this.handle) {
            return false
        }
        a(c.iframeFix === true ? "iframe" : c.iframeFix).each(function () {
            a('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({width:this.offsetWidth + "px", height:this.offsetHeight + "px", position:"absolute", opacity:"0.001.htm"/*tpa=http://192.168.119.101:8888/0.001*/, zIndex:1000}).css(a(this).offset()).appendTo("body")
        });
        return true
    }, _mouseStart:function (e) {
        var c = this.options;
        this.helper = this._createHelper(e);
        this._cacheHelperProportions();
        if (a.ui.ddmanager) {
            a.ui.ddmanager.current = this
        }
        this._cacheMargins();
        this.cssPosition = this.helper.css("position");
        this.scrollParent = this.helper.scrollParent();
        this.offset = this.positionAbs = this.element.offset();
        this.offset = {top:this.offset.top - this.margins.top, left:this.offset.left - this.margins.left};
        a.extend(this.offset, {click:{left:e.pageX - this.offset.left, top:e.pageY - this.offset.top}, parent:this._getParentOffset(), relative:this._getRelativeOffset()});
        this.originalPosition = this.position = this._generatePosition(e);
        this.originalPageX = e.pageX;
        this.originalPageY = e.pageY;
        c.cursorAt && this._adjustOffsetFromHelper(c.cursorAt);
        c.containment && this._setContainment();
        if (this._trigger("start", e) === false) {
            this._clear();
            return false
        }
        this._cacheHelperProportions();
        a.ui.ddmanager && !c.dropBehaviour && a.ui.ddmanager.prepareOffsets(this, e);
        this.helper.addClass("ui-draggable-dragging");
        this._mouseDrag(e, true);
        return true
    }, _mouseDrag:function (e, c) {
        this.position = this._generatePosition(e);
        this.positionAbs = this._convertPositionTo("absolute");
        if (!c) {
            c = this._uiHash();
            if (this._trigger("drag", e, c) === false) {
                this._mouseUp({});
                return false
            }
            this.position = c.position
        }
        if (!this.options.axis || this.options.axis != "y") {
            this.helper[0].style.left = this.position.left + "px"
        }
        if (!this.options.axis || this.options.axis != "x") {
            this.helper[0].style.top = this.position.top + "px"
        }
        a.ui.ddmanager && a.ui.ddmanager.drag(this, e);
        return false
    }, _mouseStop:function (f) {
        var e = false;
        if (a.ui.ddmanager && !this.options.dropBehaviour) {
            e = a.ui.ddmanager.drop(this, f)
        }
        if (this.dropped) {
            e = this.dropped;
            this.dropped = false
        }
        if ((!this.element[0] || !this.element[0].parentNode) && this.options.helper == "original") {
            return false
        }
        if (this.options.revert == "invalid" && !e || this.options.revert == "valid" && e || this.options.revert === true || a.isFunction(this.options.revert) && this.options.revert.call(this.element, e)) {
            var g = this;
            a(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {
                g._trigger("stop", f) !== false && g._clear()
            })
        } else {
            this._trigger("stop", f) !== false && this._clear()
        }
        return false
    }, _mouseUp:function (b) {
        this.options.iframeFix === true && a("div.ui-draggable-iframeFix").each(function () {
            this.parentNode.removeChild(this)
        });
        return a.ui.mouse.prototype._mouseUp.call(this, b)
    }, cancel:function () {
        this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear();
        return this
    }, _getHandle:function (e) {
        var c = !this.options.handle || !a(this.options.handle, this.element).length ? true : false;
        a(this.options.handle, this.element).find("*").andSelf().each(function () {
            if (this == e.target) {
                c = true
            }
        });
        return c
    }, _createHelper:function (e) {
        var c = this.options;
        e = a.isFunction(c.helper) ? a(c.helper.apply(this.element[0], [e])) : c.helper == "clone" ? this.element.clone().removeAttr("id") : this.element;
        e.parents("body").length || e.appendTo(c.appendTo == "parent" ? this.element[0].parentNode : c.appendTo);
        e[0] != this.element[0] && !/(fixed|absolute)/.test(e.css("position")) && e.css("position", "absolute");
        return e
    }, _adjustOffsetFromHelper:function (b) {
        if (typeof b == "string") {
            b = b.split(" ")
        }
        if (a.isArray(b)) {
            b = {left:+b[0], top:+b[1] || 0}
        }
        if ("left" in b) {
            this.offset.click.left = b.left + this.margins.left
        }
        if ("right" in b) {
            this.offset.click.left = this.helperProportions.width - b.right + this.margins.left
        }
        if ("top" in b) {
            this.offset.click.top = b.top + this.margins.top
        }
        if ("bottom" in b) {
            this.offset.click.top = this.helperProportions.height - b.bottom + this.margins.top
        }
    }, _getParentOffset:function () {
        this.offsetParent = this.helper.offsetParent();
        var b = this.offsetParent.offset();
        if (this.cssPosition == "absolute" && this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) {
            b.left += this.scrollParent.scrollLeft();
            b.top += this.scrollParent.scrollTop()
        }
        if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && a.browser.msie) {
            b = {top:0, left:0}
        }
        return{top:b.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left:b.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)}
    }, _getRelativeOffset:function () {
        if (this.cssPosition == "relative") {
            var b = this.element.position();
            return{top:b.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(), left:b.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()}
        } else {
            return{top:0, left:0}
        }
    }, _cacheMargins:function () {
        this.margins = {left:parseInt(this.element.css("marginLeft"), 10) || 0, top:parseInt(this.element.css("marginTop"), 10) || 0, right:parseInt(this.element.css("marginRight"), 10) || 0, bottom:parseInt(this.element.css("marginBottom"), 10) || 0}
    }, _cacheHelperProportions:function () {
        this.helperProportions = {width:this.helper.outerWidth(), height:this.helper.outerHeight()}
    }, _setContainment:function () {
        var f = this.options;
        if (f.containment == "parent") {
            f.containment = this.helper[0].parentNode
        }
        if (f.containment == "document" || f.containment == "window") {
            this.containment = [(f.containment == "document" ? 0 : a(window).scrollLeft()) - this.offset.relative.left - this.offset.parent.left, (f.containment == "document" ? 0 : a(window).scrollTop()) - this.offset.relative.top - this.offset.parent.top, (f.containment == "document" ? 0 : a(window).scrollLeft()) + a(f.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (f.containment == "document" ? 0 : a(window).scrollTop()) + (a(f.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
        }
        if (!/^(document|window|parent)$/.test(f.containment) && f.containment.constructor != Array) {
            f = a(f.containment);
            var e = f[0];
            if (e) {
                f.offset();
                var g = a(e).css("overflow") != "hidden";
                this.containment = [(parseInt(a(e).css("borderLeftWidth"), 10) || 0) + (parseInt(a(e).css("paddingLeft"), 10) || 0), (parseInt(a(e).css("borderTopWidth"), 10) || 0) + (parseInt(a(e).css("paddingTop"), 10) || 0), (g ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) - (parseInt(a(e).css("borderLeftWidth"), 10) || 0) - (parseInt(a(e).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (g ? Math.max(e.scrollHeight, e.offsetHeight) : e.offsetHeight) - (parseInt(a(e).css("borderTopWidth"), 10) || 0) - (parseInt(a(e).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom];
                this.relative_container = f
            }
        } else {
            if (f.containment.constructor == Array) {
                this.containment = f.containment
            }
        }
    }, _convertPositionTo:function (g, e) {
        if (!e) {
            e = this.position
        }
        g = g == "absolute" ? 1 : -1;
        var j = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, h = /(html|body)/i.test(j[0].tagName);
        return{top:e.top + this.offset.relative.top * g + this.offset.parent.top * g - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : h ? 0 : j.scrollTop()) * g), left:e.left + this.offset.relative.left * g + this.offset.parent.left * g - (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : h ? 0 : j.scrollLeft()) * g)}
    }, _generatePosition:function (k) {
        var j = this.options, p = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && a.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, n = /(html|body)/i.test(p[0].tagName), o = k.pageX, l = k.pageY;
        if (this.originalPosition) {
            var m;
            if (this.containment) {
                if (this.relative_container) {
                    m = this.relative_container.offset();
                    m = [this.containment[0] + m.left, this.containment[1] + m.top, this.containment[2] + m.left, this.containment[3] + m.top]
                } else {
                    m = this.containment
                }
                if (k.pageX - this.offset.click.left < m[0]) {
                    o = m[0] + this.offset.click.left
                }
                if (k.pageY - this.offset.click.top < m[1]) {
                    l = m[1] + this.offset.click.top
                }
                if (k.pageX - this.offset.click.left > m[2]) {
                    o = m[2] + this.offset.click.left
                }
                if (k.pageY - this.offset.click.top > m[3]) {
                    l = m[3] + this.offset.click.top
                }
            }
            if (j.grid) {
                l = this.originalPageY + Math.round((l - this.originalPageY) / j.grid[1]) * j.grid[1];
                l = m ? !(l - this.offset.click.top < m[1] || l - this.offset.click.top > m[3]) ? l : !(l - this.offset.click.top < m[1]) ? l - j.grid[1] : l + j.grid[1] : l;
                o = this.originalPageX + Math.round((o - this.originalPageX) / j.grid[0]) * j.grid[0];
                o = m ? !(o - this.offset.click.left < m[0] || o - this.offset.click.left > m[2]) ? o : !(o - this.offset.click.left < m[0]) ? o - j.grid[0] : o + j.grid[0] : o
            }
        }
        return{top:l - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : n ? 0 : p.scrollTop()), left:o - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (a.browser.safari && a.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : n ? 0 : p.scrollLeft())}
    }, _clear:function () {
        this.helper.removeClass("ui-draggable-dragging");
        this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove();
        this.helper = null;
        this.cancelHelperRemoval = false
    }, _trigger:function (f, e, g) {
        g = g || this._uiHash();
        a.ui.plugin.call(this, f, [e, g]);
        if (f == "drag") {
            this.positionAbs = this._convertPositionTo("absolute")
        }
        return a.Widget.prototype._trigger.call(this, f, e, g)
    }, plugins:{}, _uiHash:function () {
        return{helper:this.helper, position:this.position, originalPosition:this.originalPosition, offset:this.positionAbs}
    }});
    a.extend(a.ui.draggable, {version:"1.8.13.htm"/*tpa=http://192.168.119.101:8888/1.8.13*/});
    a.ui.plugin.add("draggable", "connectToSortable", {start:function (h, g) {
        var l = a(this).data("draggable"), j = l.options, k = a.extend({}, g, {item:l.element});
        l.sortables = [];
        a(j.connectToSortable).each(function () {
            var b = a.data(this, "sortable");
            if (b && !b.options.disabled) {
                l.sortables.push({instance:b, shouldRevert:b.options.revert});
                b.refreshPositions();
                b._trigger("activate", h, k)
            }
        })
    }, stop:function (g, e) {
        var j = a(this).data("draggable"), h = a.extend({}, e, {item:j.element});
        a.each(j.sortables, function () {
            if (this.instance.isOver) {
                this.instance.isOver = 0;
                j.cancelHelperRemoval = true;
                this.instance.cancelHelperRemoval = false;
                if (this.shouldRevert) {
                    this.instance.options.revert = true
                }
                this.instance._mouseStop(g);
                this.instance.options.helper = this.instance.options._helper;
                j.options.helper == "original" && this.instance.currentItem.css({top:"auto", left:"auto"})
            } else {
                this.instance.cancelHelperRemoval = false;
                this.instance._trigger("deactivate", g, h)
            }
        })
    }, drag:function (g, e) {
        var j = a(this).data("draggable"), h = this;
        a.each(j.sortables, function () {
            this.instance.positionAbs = j.positionAbs;
            this.instance.helperProportions = j.helperProportions;
            this.instance.offset.click = j.offset.click;
            if (this.instance._intersectsWith(this.instance.containerCache)) {
                if (!this.instance.isOver) {
                    this.instance.isOver = 1;
                    this.instance.currentItem = a(h).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item", true);
                    this.instance.options._helper = this.instance.options.helper;
                    this.instance.options.helper = function () {
                        return e.helper[0]
                    };
                    g.target = this.instance.currentItem[0];
                    this.instance._mouseCapture(g, true);
                    this.instance._mouseStart(g, true, true);
                    this.instance.offset.click.top = j.offset.click.top;
                    this.instance.offset.click.left = j.offset.click.left;
                    this.instance.offset.parent.left -= j.offset.parent.left - this.instance.offset.parent.left;
                    this.instance.offset.parent.top -= j.offset.parent.top - this.instance.offset.parent.top;
                    j._trigger("toSortable", g);
                    j.dropped = this.instance.element;
                    j.currentItem = j.element;
                    this.instance.fromOutside = j
                }
                this.instance.currentItem && this.instance._mouseDrag(g)
            } else {
                if (this.instance.isOver) {
                    this.instance.isOver = 0;
                    this.instance.cancelHelperRemoval = true;
                    this.instance.options.revert = false;
                    this.instance._trigger("out", g, this.instance._uiHash(this.instance));
                    this.instance._mouseStop(g, true);
                    this.instance.options.helper = this.instance.options._helper;
                    this.instance.currentItem.remove();
                    this.instance.placeholder && this.instance.placeholder.remove();
                    j._trigger("fromSortable", g);
                    j.dropped = false
                }
            }
        })
    }});
    a.ui.plugin.add("draggable", "cursor", {start:function () {
        var e = a("body"), c = a(this).data("draggable").options;
        if (e.css("cursor")) {
            c._cursor = e.css("cursor")
        }
        e.css("cursor", c.cursor)
    }, stop:function () {
        var b = a(this).data("draggable").options;
        b._cursor && a("body").css("cursor", b._cursor)
    }});
    a.ui.plugin.add("draggable", "opacity", {start:function (e, c) {
        e = a(c.helper);
        c = a(this).data("draggable").options;
        if (e.css("opacity")) {
            c._opacity = e.css("opacity")
        }
        e.css("opacity", c.opacity)
    }, stop:function (e, c) {
        e = a(this).data("draggable").options;
        e._opacity && a(c.helper).css("opacity", e._opacity)
    }});
    a.ui.plugin.add("draggable", "scroll", {start:function () {
        var b = a(this).data("draggable");
        if (b.scrollParent[0] != document && b.scrollParent[0].tagName != "HTML") {
            b.overflowOffset = b.scrollParent.offset()
        }
    }, drag:function (g) {
        var e = a(this).data("draggable"), j = e.options, h = false;
        if (e.scrollParent[0] != document && e.scrollParent[0].tagName != "HTML") {
            if (!j.axis || j.axis != "x") {
                if (e.overflowOffset.top + e.scrollParent[0].offsetHeight - g.pageY < j.scrollSensitivity) {
                    e.scrollParent[0].scrollTop = h = e.scrollParent[0].scrollTop + j.scrollSpeed
                } else {
                    if (g.pageY - e.overflowOffset.top < j.scrollSensitivity) {
                        e.scrollParent[0].scrollTop = h = e.scrollParent[0].scrollTop - j.scrollSpeed
                    }
                }
            }
            if (!j.axis || j.axis != "y") {
                if (e.overflowOffset.left + e.scrollParent[0].offsetWidth - g.pageX < j.scrollSensitivity) {
                    e.scrollParent[0].scrollLeft = h = e.scrollParent[0].scrollLeft + j.scrollSpeed
                } else {
                    if (g.pageX - e.overflowOffset.left < j.scrollSensitivity) {
                        e.scrollParent[0].scrollLeft = h = e.scrollParent[0].scrollLeft - j.scrollSpeed
                    }
                }
            }
        } else {
            if (!j.axis || j.axis != "x") {
                if (g.pageY - a(document).scrollTop() < j.scrollSensitivity) {
                    h = a(document).scrollTop(a(document).scrollTop() - j.scrollSpeed)
                } else {
                    if (a(window).height() - (g.pageY - a(document).scrollTop()) < j.scrollSensitivity) {
                        h = a(document).scrollTop(a(document).scrollTop() + j.scrollSpeed)
                    }
                }
            }
            if (!j.axis || j.axis != "y") {
                if (g.pageX - a(document).scrollLeft() < j.scrollSensitivity) {
                    h = a(document).scrollLeft(a(document).scrollLeft() - j.scrollSpeed)
                } else {
                    if (a(window).width() - (g.pageX - a(document).scrollLeft()) < j.scrollSensitivity) {
                        h = a(document).scrollLeft(a(document).scrollLeft() + j.scrollSpeed)
                    }
                }
            }
        }
        h !== false && a.ui.ddmanager && !j.dropBehaviour && a.ui.ddmanager.prepareOffsets(e, g)
    }});
    a.ui.plugin.add("draggable", "snap", {start:function () {
        var e = a(this).data("draggable"), c = e.options;
        e.snapElements = [];
        a(c.snap.constructor != String ? c.snap.items || ":data(draggable)" : c.snap).each(function () {
            var g = a(this), b = g.offset();
            this != e.element[0] && e.snapElements.push({item:this, width:g.outerWidth(), height:g.outerHeight(), top:b.top, left:b.left})
        })
    }, drag:function (M, L) {
        for (var K = a(this).data("draggable"), I = K.options, J = I.snapTolerance, G = L.offset.left, H = G + K.helperProportions.width, A = L.offset.top, z = A + K.helperProportions.height, F = K.snapElements.length - 1; F >= 0; F--) {
            var E = K.snapElements[F].left, C = E + K.snapElements[F].width, D = K.snapElements[F].top, B = D + K.snapElements[F].height;
            if (E - J < G && G < C + J && D - J < A && A < B + J || E - J < G && G < C + J && D - J < z && z < B + J || E - J < H && H < C + J && D - J < A && A < B + J || E - J < H && H < C + J && D - J < z && z < B + J) {
                if (I.snapMode != "inner") {
                    var y = Math.abs(D - z) <= J, x = Math.abs(B - A) <= J, w = Math.abs(E - H) <= J, v = Math.abs(C - G) <= J;
                    if (y) {
                        L.position.top = K._convertPositionTo("relative", {top:D - K.helperProportions.height, left:0}).top - K.margins.top
                    }
                    if (x) {
                        L.position.top = K._convertPositionTo("relative", {top:B, left:0}).top - K.margins.top
                    }
                    if (w) {
                        L.position.left = K._convertPositionTo("relative", {top:0, left:E - K.helperProportions.width}).left - K.margins.left
                    }
                    if (v) {
                        L.position.left = K._convertPositionTo("relative", {top:0, left:C}).left - K.margins.left
                    }
                }
                var u = y || x || w || v;
                if (I.snapMode != "outer") {
                    y = Math.abs(D - A) <= J;
                    x = Math.abs(B - z) <= J;
                    w = Math.abs(E - G) <= J;
                    v = Math.abs(C - H) <= J;
                    if (y) {
                        L.position.top = K._convertPositionTo("relative", {top:D, left:0}).top - K.margins.top
                    }
                    if (x) {
                        L.position.top = K._convertPositionTo("relative", {top:B - K.helperProportions.height, left:0}).top - K.margins.top
                    }
                    if (w) {
                        L.position.left = K._convertPositionTo("relative", {top:0, left:E}).left - K.margins.left
                    }
                    if (v) {
                        L.position.left = K._convertPositionTo("relative", {top:0, left:C - K.helperProportions.width}).left - K.margins.left
                    }
                }
                if (!K.snapElements[F].snapping && (y || x || w || v || u)) {
                    K.options.snap.snap && K.options.snap.snap.call(K.element, M, a.extend(K._uiHash(), {snapItem:K.snapElements[F].item}))
                }
                K.snapElements[F].snapping = y || x || w || v || u
            } else {
                K.snapElements[F].snapping && K.options.snap.release && K.options.snap.release.call(K.element, M, a.extend(K._uiHash(), {snapItem:K.snapElements[F].item}));
                K.snapElements[F].snapping = false
            }
        }
    }});
    a.ui.plugin.add("draggable", "stack", {start:function () {
        var e = a(this).data("draggable").options;
        e = a.makeArray(a(e.stack)).sort(function (g, b) {
            return(parseInt(a(g).css("zIndex"), 10) || 0) - (parseInt(a(b).css("zIndex"), 10) || 0)
        });
        if (e.length) {
            var c = parseInt(e[0].style.zIndex) || 0;
            a(e).each(function (b) {
                this.style.zIndex = c + b
            });
            this[0].style.zIndex = c + e.length
        }
    }});
    a.ui.plugin.add("draggable", "zIndex", {start:function (e, c) {
        e = a(c.helper);
        c = a(this).data("draggable").options;
        if (e.css("zIndex")) {
            c._zIndex = e.css("zIndex")
        }
        e.css("zIndex", c.zIndex)
    }, stop:function (e, c) {
        e = a(this).data("draggable").options;
        e._zIndex && a(c.helper).css("zIndex", e._zIndex)
    }})
})(jQuery);
(function (a) {
    a.widget("ui.droppable", {widgetEventPrefix:"drop", options:{accept:"*", activeClass:false, addClasses:true, greedy:false, hoverClass:false, scope:"default", tolerance:"intersect"}, _create:function () {
        var e = this.options, c = e.accept;
        this.isover = 0;
        this.isout = 1;
        this.accept = a.isFunction(c) ? c : function (b) {
            return b.is(c)
        };
        this.proportions = {width:this.element[0].offsetWidth, height:this.element[0].offsetHeight};
        a.ui.ddmanager.droppables[e.scope] = a.ui.ddmanager.droppables[e.scope] || [];
        a.ui.ddmanager.droppables[e.scope].push(this);
        e.addClasses && this.element.addClass("ui-droppable")
    }, destroy:function () {
        for (var e = a.ui.ddmanager.droppables[this.options.scope], c = 0; c < e.length; c++) {
            e[c] == this && e.splice(c, 1)
        }
        this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable");
        return this
    }, _setOption:function (e, c) {
        if (e == "accept") {
            this.accept = a.isFunction(c) ? c : function (b) {
                return b.is(c)
            }
        }
        a.Widget.prototype._setOption.apply(this, arguments)
    }, _activate:function (e) {
        var c = a.ui.ddmanager.current;
        this.options.activeClass && this.element.addClass(this.options.activeClass);
        c && this._trigger("activate", e, this.ui(c))
    }, _deactivate:function (e) {
        var c = a.ui.ddmanager.current;
        this.options.activeClass && this.element.removeClass(this.options.activeClass);
        c && this._trigger("deactivate", e, this.ui(c))
    }, _over:function (e) {
        var c = a.ui.ddmanager.current;
        if (!(!c || (c.currentItem || c.element)[0] == this.element[0])) {
            if (this.accept.call(this.element[0], c.currentItem || c.element)) {
                this.options.hoverClass && this.element.addClass(this.options.hoverClass);
                this._trigger("over", e, this.ui(c))
            }
        }
    }, _out:function (e) {
        var c = a.ui.ddmanager.current;
        if (!(!c || (c.currentItem || c.element)[0] == this.element[0])) {
            if (this.accept.call(this.element[0], c.currentItem || c.element)) {
                this.options.hoverClass && this.element.removeClass(this.options.hoverClass);
                this._trigger("out", e, this.ui(c))
            }
        }
    }, _drop:function (g, f) {
        var j = f || a.ui.ddmanager.current;
        if (!j || (j.currentItem || j.element)[0] == this.element[0]) {
            return false
        }
        var h = false;
        this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function () {
            var b = a.data(this, "droppable");
            if (b.options.greedy && !b.options.disabled && b.options.scope == j.options.scope && b.accept.call(b.element[0], j.currentItem || j.element) && a.ui.intersect(j, a.extend(b, {offset:b.element.offset()}), b.options.tolerance)) {
                h = true;
                return false
            }
        });
        if (h) {
            return false
        }
        if (this.accept.call(this.element[0], j.currentItem || j.element)) {
            this.options.activeClass && this.element.removeClass(this.options.activeClass);
            this.options.hoverClass && this.element.removeClass(this.options.hoverClass);
            this._trigger("drop", g, this.ui(j));
            return this.element
        }
        return false
    }, ui:function (b) {
        return{draggable:b.currentItem || b.element, helper:b.helper, position:b.position, offset:b.positionAbs}
    }});
    a.extend(a.ui.droppable, {version:"1.8.13.htm"/*tpa=http://192.168.119.101:8888/1.8.13*/});
    a.ui.intersect = function (w, v, u) {
        if (!v.offset) {
            return false
        }
        var t = (w.positionAbs || w.position.absolute).left, r = t + w.helperProportions.width, s = (w.positionAbs || w.position.absolute).top, q = s + w.helperProportions.height, p = v.offset.left, n = p + v.proportions.width, o = v.offset.top, m = o + v.proportions.height;
        switch (u) {
            case"fit":
                return p <= t && r <= n && o <= s && q <= m;
            case"intersect":
                return p < t + w.helperProportions.width / 2 && r - w.helperProportions.width / 2 < n && o < s + w.helperProportions.height / 2 && q - w.helperProportions.height / 2 < m;
            case"pointer":
                return a.ui.isOver((w.positionAbs || w.position.absolute).top + (w.clickOffset || w.offset.click).top, (w.positionAbs || w.position.absolute).left + (w.clickOffset || w.offset.click).left, o, p, v.proportions.height, v.proportions.width);
            case"touch":
                return(s >= o && s <= m || q >= o && q <= m || s < o && q > m) && (t >= p && t <= n || r >= p && r <= n || t < p && r > n);
            default:
                return false
        }
    };
    a.ui.ddmanager = {current:null, droppables:{"default":[]}, prepareOffsets:function (k, j) {
        var p = a.ui.ddmanager.droppables[k.options.scope] || [], o = j ? j.type : null, m = (k.currentItem || k.element).find(":data(droppable)").andSelf(), n = 0;
        k:for (; n < p.length; n++) {
            if (!(p[n].options.disabled || k && !p[n].accept.call(p[n].element[0], k.currentItem || k.element))) {
                for (var l = 0; l < m.length; l++) {
                    if (m[l] == p[n].element[0]) {
                        p[n].proportions.height = 0;
                        continue k
                    }
                }
                p[n].visible = p[n].element.css("display") != "none";
                if (p[n].visible) {
                    o == "mousedown" && p[n]._activate.call(p[n], j);
                    p[n].offset = p[n].element.offset();
                    p[n].proportions = {width:p[n].element[0].offsetWidth, height:p[n].element[0].offsetHeight}
                }
            }
        }
    }, drop:function (f, e) {
        var g = false;
        a.each(a.ui.ddmanager.droppables[f.options.scope] || [], function () {
            if (this.options) {
                if (!this.options.disabled && this.visible && a.ui.intersect(f, this, this.options.tolerance)) {
                    g = g || this._drop.call(this, e)
                }
                if (!this.options.disabled && this.visible && this.accept.call(this.element[0], f.currentItem || f.element)) {
                    this.isout = 1;
                    this.isover = 0;
                    this._deactivate.call(this, e)
                }
            }
        });
        return g
    }, drag:function (e, c) {
        e.options.refreshPositions && a.ui.ddmanager.prepareOffsets(e, c);
        a.each(a.ui.ddmanager.droppables[e.options.scope] || [], function () {
            if (!(this.options.disabled || this.greedyChild || !this.visible)) {
                var h = a.ui.intersect(e, this, this.options.tolerance);
                if (h = !h && this.isover == 1 ? "isout" : h && this.isover == 0 ? "isover" : null) {
                    var f;
                    if (this.options.greedy) {
                        var b = this.element.parents(":data(droppable):eq(0)");
                        if (b.length) {
                            f = a.data(b[0], "droppable");
                            f.greedyChild = h == "isover" ? 1 : 0
                        }
                    }
                    if (f && h == "isover") {
                        f.isover = 0;
                        f.isout = 1;
                        f._out.call(f, c)
                    }
                    this[h] = 1;
                    this[h == "isout" ? "isover" : "isout"] = 0;
                    this[h == "isover" ? "_over" : "_out"].call(this, c);
                    if (f && h == "isout") {
                        f.isout = 0;
                        f.isover = 1;
                        f._over.call(f, c)
                    }
                }
            }
        })
    }}
})(jQuery);
(function (c) {
    c.widget("ui.resizable", c.ui.mouse, {widgetEventPrefix:"resize", options:{alsoResize:false, animate:false, animateDuration:"slow", animateEasing:"swing", aspectRatio:false, autoHide:false, containment:false, ghost:false, grid:false, handles:"e,s,se", helper:false, maxHeight:null, maxWidth:null, minHeight:10, minWidth:10, zIndex:1000}, _create:function () {
        var e = this, h = this.options;
        this.element.addClass("ui-resizable");
        c.extend(this, {_aspectRatio:!!h.aspectRatio, aspectRatio:h.aspectRatio, originalElement:this.element, _proportionallyResizeElements:[], _helper:h.helper || h.ghost || h.animate ? h.helper || "ui-resizable-helper" : null});
        if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {
            /relative/.test(this.element.css("position")) && c.browser.opera && this.element.css({position:"relative", top:"auto", left:"auto"});
            this.element.wrap(c('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({position:this.element.css("position"), width:this.element.outerWidth(), height:this.element.outerHeight(), top:this.element.css("top"), left:this.element.css("left")}));
            this.element = this.element.parent().data("resizable", this.element.data("resizable"));
            this.elementIsWrapper = true;
            this.element.css({marginLeft:this.originalElement.css("marginLeft"), marginTop:this.originalElement.css("marginTop"), marginRight:this.originalElement.css("marginRight"), marginBottom:this.originalElement.css("marginBottom")});
            this.originalElement.css({marginLeft:0, marginTop:0, marginRight:0, marginBottom:0});
            this.originalResizeStyle = this.originalElement.css("resize");
            this.originalElement.css("resize", "none");
            this._proportionallyResizeElements.push(this.originalElement.css({position:"static", zoom:1, display:"block"}));
            this.originalElement.css({margin:this.originalElement.css("margin")});
            this._proportionallyResize()
        }
        this.handles = h.handles || (!c(".ui-resizable-handle", this.element).length ? "e,s,se" : {n:".ui-resizable-n", e:".ui-resizable-e", s:".ui-resizable-s", w:".ui-resizable-w", se:".ui-resizable-se", sw:".ui-resizable-sw", ne:".ui-resizable-ne", nw:".ui-resizable-nw"});
        if (this.handles.constructor == String) {
            if (this.handles == "all") {
                this.handles = "n,e,s,w,se,sw,ne,nw"
            }
            var m = this.handles.split(",");
            this.handles = {};
            for (var l = 0; l < m.length; l++) {
                var k = c.trim(m[l]), j = c('<div class="ui-resizable-handle ' + ("ui-resizable-" + k) + '"></div>');
                /sw|se|ne|nw/.test(k) && j.css({zIndex:++h.zIndex});
                "se" == k && j.addClass("ui-icon ui-icon-gripsmall-diagonal-se");
                this.handles[k] = ".ui-resizable-" + k;
                this.element.append(j)
            }
        }
        this._renderAxis = function (o) {
            o = o || this.element;
            for (var n in this.handles) {
                if (this.handles[n].constructor == String) {
                    this.handles[n] = c(this.handles[n], this.element).show()
                }
                if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
                    var g = c(this.handles[n], this.element), f = 0;
                    f = /sw|ne|nw|se|n|s/.test(n) ? g.outerHeight() : g.outerWidth();
                    g = ["padding", /ne|nw|n/.test(n) ? "Top" : /se|sw|s/.test(n) ? "Bottom" : /^e$/.test(n) ? "Right" : "Left"].join("");
                    o.css(g, f);
                    this._proportionallyResize()
                }
                c(this.handles[n])
            }
        };
        this._renderAxis(this.element);
        this._handles = c(".ui-resizable-handle", this.element).disableSelection();
        this._handles.mouseover(function () {
            if (!e.resizing) {
                if (this.className) {
                    var f = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)
                }
                e.axis = f && f[1] ? f[1] : "se"
            }
        });
        if (h.autoHide) {
            this._handles.hide();
            c(this.element).addClass("ui-resizable-autohide").hover(function () {
                if (!h.disabled) {
                    c(this).removeClass("ui-resizable-autohide");
                    e._handles.show()
                }
            }, function () {
                if (!h.disabled) {
                    if (!e.resizing) {
                        c(this).addClass("ui-resizable-autohide");
                        e._handles.hide()
                    }
                }
            })
        }
        this._mouseInit()
    }, destroy:function () {
        this._mouseDestroy();
        var e = function (g) {
            c(g).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
        };
        if (this.elementIsWrapper) {
            e(this.element);
            var f = this.element;
            f.after(this.originalElement.css({position:f.css("position"), width:f.outerWidth(), height:f.outerHeight(), top:f.css("top"), left:f.css("left")})).remove()
        }
        this.originalElement.css("resize", this.originalResizeStyle);
        e(this.originalElement);
        return this
    }, _mouseCapture:function (e) {
        var f = false;
        for (var g in this.handles) {
            if (c(this.handles[g])[0] == e.target) {
                f = true
            }
        }
        return !this.options.disabled && f
    }, _mouseStart:function (e) {
        var g = this.options, k = this.element.position(), j = this.element;
        this.resizing = true;
        this.documentScroll = {top:c(document).scrollTop(), left:c(document).scrollLeft()};
        if (j.is(".ui-draggable") || /absolute/.test(j.css("position"))) {
            j.css({position:"absolute", top:k.top, left:k.left})
        }
        c.browser.opera && /relative/.test(j.css("position")) && j.css({position:"relative", top:"auto", left:"auto"});
        this._renderProxy();
        k = a(this.helper.css("left"));
        var h = a(this.helper.css("top"));
        if (g.containment) {
            k += c(g.containment).scrollLeft() || 0;
            h += c(g.containment).scrollTop() || 0
        }
        this.offset = this.helper.offset();
        this.position = {left:k, top:h};
        this.size = this._helper ? {width:j.outerWidth(), height:j.outerHeight()} : {width:j.width(), height:j.height()};
        this.originalSize = this._helper ? {width:j.outerWidth(), height:j.outerHeight()} : {width:j.width(), height:j.height()};
        this.originalPosition = {left:k, top:h};
        this.sizeDiff = {width:j.outerWidth() - j.width(), height:j.outerHeight() - j.height()};
        this.originalMousePosition = {left:e.pageX, top:e.pageY};
        this.aspectRatio = typeof g.aspectRatio == "number" ? g.aspectRatio : this.originalSize.width / this.originalSize.height || 1;
        g = c(".ui-resizable-" + this.axis).css("cursor");
        c("body").css("cursor", g == "auto" ? this.axis + "-resize" : g);
        j.addClass("ui-resizable-resizing");
        this._propagate("start", e);
        return true
    }, _mouseDrag:function (e) {
        var f = this.helper, h = this.originalMousePosition, g = this._change[this.axis];
        if (!g) {
            return false
        }
        h = g.apply(this, [e, e.pageX - h.left || 0, e.pageY - h.top || 0]);
        if (this._aspectRatio || e.shiftKey) {
            h = this._updateRatio(h, e)
        }
        h = this._respectSize(h, e);
        this._propagate("resize", e);
        f.css({top:this.position.top + "px", left:this.position.left + "px", width:this.size.width + "px", height:this.size.height + "px"});
        !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize();
        this._updateCache(h);
        this._trigger("resize", e, this.ui());
        return false
    }, _mouseStop:function (e) {
        this.resizing = false;
        var h = this.options, m = this;
        if (this._helper) {
            var l = this._proportionallyResizeElements, k = l.length && /textarea/i.test(l[0].nodeName);
            l = k && c.ui.hasScroll(l[0], "left") ? 0 : m.sizeDiff.height;
            k = k ? 0 : m.sizeDiff.width;
            k = {width:m.helper.width() - k, height:m.helper.height() - l};
            l = parseInt(m.element.css("left"), 10) + (m.position.left - m.originalPosition.left) || null;
            var j = parseInt(m.element.css("top"), 10) + (m.position.top - m.originalPosition.top) || null;
            h.animate || this.element.css(c.extend(k, {top:j, left:l}));
            m.helper.height(m.size.height);
            m.helper.width(m.size.width);
            this._helper && !h.animate && this._proportionallyResize()
        }
        c("body").css("cursor", "auto");
        this.element.removeClass("ui-resizable-resizing");
        this._propagate("stop", e);
        this._helper && this.helper.remove();
        return false
    }, _updateCache:function (e) {
        this.offset = this.helper.offset();
        if (b(e.left)) {
            this.position.left = e.left
        }
        if (b(e.top)) {
            this.position.top = e.top
        }
        if (b(e.height)) {
            this.size.height = e.height
        }
        if (b(e.width)) {
            this.size.width = e.width
        }
    }, _updateRatio:function (e) {
        var f = this.position, h = this.size, g = this.axis;
        if (e.height) {
            e.width = h.height * this.aspectRatio
        } else {
            if (e.width) {
                e.height = h.width / this.aspectRatio
            }
        }
        if (g == "sw") {
            e.left = f.left + (h.width - e.width);
            e.top = null
        }
        if (g == "nw") {
            e.top = f.top + (h.height - e.height);
            e.left = f.left + (h.width - e.width)
        }
        return e
    }, _respectSize:function (s) {
        var t = this.options, r = this.axis, q = b(s.width) && t.maxWidth && t.maxWidth < s.width, p = b(s.height) && t.maxHeight && t.maxHeight < s.height, o = b(s.width) && t.minWidth && t.minWidth > s.width, n = b(s.height) && t.minHeight && t.minHeight > s.height;
        if (o) {
            s.width = t.minWidth
        }
        if (n) {
            s.height = t.minHeight
        }
        if (q) {
            s.width = t.maxWidth
        }
        if (p) {
            s.height = t.maxHeight
        }
        var m = this.originalPosition.left + this.originalSize.width, l = this.position.top + this.size.height, e = /sw|nw|w/.test(r);
        r = /nw|ne|n/.test(r);
        if (o && e) {
            s.left = m - t.minWidth
        }
        if (q && e) {
            s.left = m - t.maxWidth
        }
        if (n && r) {
            s.top = l - t.minHeight
        }
        if (p && r) {
            s.top = l - t.maxHeight
        }
        if ((t = !s.width && !s.height) && !s.left && s.top) {
            s.top = null
        } else {
            if (t && !s.top && s.left) {
                s.left = null
            }
        }
        return s
    }, _proportionallyResize:function () {
        if (this._proportionallyResizeElements.length) {
            for (var e = this.helper || this.element, g = 0; g < this._proportionallyResizeElements.length; g++) {
                var k = this._proportionallyResizeElements[g];
                if (!this.borderDif) {
                    var j = [k.css("borderTopWidth"), k.css("borderRightWidth"), k.css("borderBottomWidth"), k.css("borderLeftWidth")], h = [k.css("paddingTop"), k.css("paddingRight"), k.css("paddingBottom"), k.css("paddingLeft")];
                    this.borderDif = c.map(j, function (l, f) {
                        l = parseInt(l, 10) || 0;
                        f = parseInt(h[f], 10) || 0;
                        return l + f
                    })
                }
                c.browser.msie && (c(e).is(":hidden") || c(e).parents(":hidden").length) || k.css({height:e.height() - this.borderDif[0] - this.borderDif[2] || 0, width:e.width() - this.borderDif[1] - this.borderDif[3] || 0})
            }
        }
    }, _renderProxy:function () {
        var e = this.options;
        this.elementOffset = this.element.offset();
        if (this._helper) {
            this.helper = this.helper || c('<div style="overflow:hidden;"></div>');
            var f = c.browser.msie && c.browser.version < 7, g = f ? 1 : 0;
            f = f ? 2 : -1;
            this.helper.addClass(this._helper).css({width:this.element.outerWidth() + f, height:this.element.outerHeight() + f, position:"absolute", left:this.elementOffset.left - g + "px", top:this.elementOffset.top - g + "px", zIndex:++e.zIndex});
            this.helper.appendTo("body").disableSelection()
        } else {
            this.helper = this.element
        }
    }, _change:{e:function (e, f) {
        return{width:this.originalSize.width + f}
    }, w:function (e, f) {
        return{left:this.originalPosition.left + f, width:this.originalSize.width - f}
    }, n:function (e, f, g) {
        return{top:this.originalPosition.top + g, height:this.originalSize.height - g}
    }, s:function (e, f, g) {
        return{height:this.originalSize.height + g}
    }, se:function (e, f, g) {
        return c.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [e, f, g]))
    }, sw:function (e, f, g) {
        return c.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [e, f, g]))
    }, ne:function (e, f, g) {
        return c.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [e, f, g]))
    }, nw:function (e, f, g) {
        return c.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [e, f, g]))
    }}, _propagate:function (e, f) {
        c.ui.plugin.call(this, e, [f, this.ui()]);
        e != "resize" && this._trigger(e, f, this.ui())
    }, plugins:{}, ui:function () {
        return{originalElement:this.originalElement, element:this.element, helper:this.helper, position:this.position, size:this.size, originalSize:this.originalSize, originalPosition:this.originalPosition}
    }});
    c.extend(c.ui.resizable, {version:"1.8.13.htm"/*tpa=http://192.168.119.101:8888/1.8.13*/});
    c.ui.plugin.add("resizable", "alsoResize", {start:function () {
        var e = c(this).data("resizable").options, f = function (g) {
            c(g).each(function () {
                var h = c(this);
                h.data("resizable-alsoresize", {width:parseInt(h.width(), 10), height:parseInt(h.height(), 10), left:parseInt(h.css("left"), 10), top:parseInt(h.css("top"), 10), position:h.css("position")})
            })
        };
        if (typeof e.alsoResize == "object" && !e.alsoResize.parentNode) {
            if (e.alsoResize.length) {
                e.alsoResize = e.alsoResize[0];
                f(e.alsoResize)
            } else {
                c.each(e.alsoResize, function (g) {
                    f(g)
                })
            }
        } else {
            f(e.alsoResize)
        }
    }, resize:function (e, j) {
        var o = c(this).data("resizable");
        e = o.options;
        var n = o.originalSize, m = o.originalPosition, l = {height:o.size.height - n.height || 0, width:o.size.width - n.width || 0, top:o.position.top - m.top || 0, left:o.position.left - m.left || 0}, k = function (g, f) {
            c(g).each(function () {
                var h = c(this), t = c(this).data("resizable-alsoresize"), u = {}, s = f && f.length ? f : h.parents(j.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                c.each(s, function (q, p) {
                    if ((q = (t[p] || 0) + (l[p] || 0)) && q >= 0) {
                        u[p] = q || null
                    }
                });
                if (c.browser.opera && /relative/.test(h.css("position"))) {
                    o._revertToRelativePosition = true;
                    h.css({position:"absolute", top:"auto", left:"auto"})
                }
                h.css(u)
            })
        };
        typeof e.alsoResize == "object" && !e.alsoResize.nodeType ? c.each(e.alsoResize, function (g, f) {
            k(g, f)
        }) : k(e.alsoResize)
    }, stop:function () {
        var e = c(this).data("resizable"), f = e.options, g = function (h) {
            c(h).each(function () {
                var j = c(this);
                j.css({position:j.data("resizable-alsoresize").position})
            })
        };
        if (e._revertToRelativePosition) {
            e._revertToRelativePosition = false;
            typeof f.alsoResize == "object" && !f.alsoResize.nodeType ? c.each(f.alsoResize, function (h) {
                g(h)
            }) : g(f.alsoResize)
        }
        c(this).removeData("resizable-alsoresize")
    }});
    c.ui.plugin.add("resizable", "animate", {stop:function (e) {
        var j = c(this).data("resizable"), o = j.options, n = j._proportionallyResizeElements, m = n.length && /textarea/i.test(n[0].nodeName), l = m && c.ui.hasScroll(n[0], "left") ? 0 : j.sizeDiff.height;
        m = {width:j.size.width - (m ? 0 : j.sizeDiff.width), height:j.size.height - l};
        l = parseInt(j.element.css("left"), 10) + (j.position.left - j.originalPosition.left) || null;
        var k = parseInt(j.element.css("top"), 10) + (j.position.top - j.originalPosition.top) || null;
        j.element.animate(c.extend(m, k && l ? {top:k, left:l} : {}), {duration:o.animateDuration, easing:o.animateEasing, step:function () {
            var f = {width:parseInt(j.element.css("width"), 10), height:parseInt(j.element.css("height"), 10), top:parseInt(j.element.css("top"), 10), left:parseInt(j.element.css("left"), 10)};
            n && n.length && c(n[0]).css({width:f.width, height:f.height});
            j._updateCache(f);
            j._propagate("resize", e)
        }})
    }});
    c.ui.plugin.add("resizable", "containment", {start:function () {
        var e = c(this).data("resizable"), j = e.element, o = e.options.containment;
        if (j = o instanceof c ? o.get(0) : /parent/.test(o) ? j.parent().get(0) : o) {
            e.containerElement = c(j);
            if (/document/.test(o) || o == document) {
                e.containerOffset = {left:0, top:0};
                e.containerPosition = {left:0, top:0};
                e.parentData = {element:c(document), left:0, top:0, width:c(document).width(), height:c(document).height() || document.body.parentNode.scrollHeight}
            } else {
                var n = c(j), m = [];
                c(["Top", "Right", "Left", "Bottom"]).each(function (g, f) {
                    m[g] = a(n.css("padding" + f))
                });
                e.containerOffset = n.offset();
                e.containerPosition = n.position();
                e.containerSize = {height:n.innerHeight() - m[3], width:n.innerWidth() - m[1]};
                o = e.containerOffset;
                var l = e.containerSize.height, k = e.containerSize.width;
                k = c.ui.hasScroll(j, "left") ? j.scrollWidth : k;
                l = c.ui.hasScroll(j) ? j.scrollHeight : l;
                e.parentData = {element:j, left:o.left, top:o.top, width:k, height:l}
            }
        }
    }, resize:function (e) {
        var j = c(this).data("resizable"), o = j.options, n = j.containerOffset, m = j.position;
        e = j._aspectRatio || e.shiftKey;
        var l = {top:0, left:0}, k = j.containerElement;
        if (k[0] != document && /static/.test(k.css("position"))) {
            l = n
        }
        if (m.left < (j._helper ? n.left : 0)) {
            j.size.width += j._helper ? j.position.left - n.left : j.position.left - l.left;
            if (e) {
                j.size.height = j.size.width / o.aspectRatio
            }
            j.position.left = o.helper ? n.left : 0
        }
        if (m.top < (j._helper ? n.top : 0)) {
            j.size.height += j._helper ? j.position.top - n.top : j.position.top;
            if (e) {
                j.size.width = j.size.height * o.aspectRatio
            }
            j.position.top = j._helper ? n.top : 0
        }
        j.offset.left = j.parentData.left + j.position.left;
        j.offset.top = j.parentData.top + j.position.top;
        o = Math.abs((j._helper ? j.offset.left - l.left : j.offset.left - l.left) + j.sizeDiff.width);
        n = Math.abs((j._helper ? j.offset.top - l.top : j.offset.top - n.top) + j.sizeDiff.height);
        m = j.containerElement.get(0) == j.element.parent().get(0);
        l = /relative|absolute/.test(j.containerElement.css("position"));
        if (m && l) {
            o -= j.parentData.left
        }
        if (o + j.size.width >= j.parentData.width) {
            j.size.width = j.parentData.width - o;
            if (e) {
                j.size.height = j.size.width / j.aspectRatio
            }
        }
        if (n + j.size.height >= j.parentData.height) {
            j.size.height = j.parentData.height - n;
            if (e) {
                j.size.width = j.size.height * j.aspectRatio
            }
        }
    }, stop:function () {
        var e = c(this).data("resizable"), j = e.options, p = e.containerOffset, o = e.containerPosition, n = e.containerElement, m = c(e.helper), l = m.offset(), k = m.outerWidth() - e.sizeDiff.width;
        m = m.outerHeight() - e.sizeDiff.height;
        e._helper && !j.animate && /relative/.test(n.css("position")) && c(this).css({left:l.left - o.left - p.left, width:k, height:m});
        e._helper && !j.animate && /static/.test(n.css("position")) && c(this).css({left:l.left - o.left - p.left, width:k, height:m})
    }});
    c.ui.plugin.add("resizable", "ghost", {start:function () {
        var e = c(this).data("resizable"), f = e.options, g = e.size;
        e.ghost = e.originalElement.clone();
        e.ghost.css({opacity:0.25, display:"block", position:"relative", height:g.height, width:g.width, margin:0, left:0, top:0}).addClass("ui-resizable-ghost").addClass(typeof f.ghost == "string" ? f.ghost : "");
        e.ghost.appendTo(e.helper)
    }, resize:function () {
        var e = c(this).data("resizable");
        e.ghost && e.ghost.css({position:"relative", height:e.size.height, width:e.size.width})
    }, stop:function () {
        var e = c(this).data("resizable");
        e.ghost && e.helper && e.helper.get(0).removeChild(e.ghost.get(0))
    }});
    c.ui.plugin.add("resizable", "grid", {resize:function () {
        var e = c(this).data("resizable"), j = e.options, o = e.size, n = e.originalSize, m = e.originalPosition, l = e.axis;
        j.grid = typeof j.grid == "number" ? [j.grid, j.grid] : j.grid;
        var k = Math.round((o.width - n.width) / (j.grid[0] || 1)) * (j.grid[0] || 1);
        j = Math.round((o.height - n.height) / (j.grid[1] || 1)) * (j.grid[1] || 1);
        if (/^(se|s|e)$/.test(l)) {
            e.size.width = n.width + k;
            e.size.height = n.height + j
        } else {
            if (/^(ne)$/.test(l)) {
                e.size.width = n.width + k;
                e.size.height = n.height + j;
                e.position.top = m.top - j
            } else {
                if (/^(sw)$/.test(l)) {
                    e.size.width = n.width + k;
                    e.size.height = n.height + j
                } else {
                    e.size.width = n.width + k;
                    e.size.height = n.height + j;
                    e.position.top = m.top - j
                }
                e.position.left = m.left - k
            }
        }
    }});
    var a = function (e) {
        return parseInt(e, 10) || 0
    }, b = function (e) {
        return !isNaN(parseInt(e, 10))
    }
})(jQuery);
(function (a) {
    a.widget("ui.selectable", a.ui.mouse, {options:{appendTo:"body", autoRefresh:true, distance:0, filter:"*", tolerance:"touch"}, _create:function () {
        var e = this;
        this.element.addClass("ui-selectable");
        this.dragged = false;
        var b;
        this.refresh = function () {
            b = a(e.options.filter, e.element[0]);
            b.each(function () {
                var f = a(this), c = f.offset();
                a.data(this, "selectable-item", {element:this, $element:f, left:c.left, top:c.top, right:c.left + f.outerWidth(), bottom:c.top + f.outerHeight(), startselected:false, selected:f.hasClass("ui-selected"), selecting:f.hasClass("ui-selecting"), unselecting:f.hasClass("ui-unselecting")})
            })
        };
        this.refresh();
        this.selectees = b.addClass("ui-selectee");
        this._mouseInit();
        this.helper = a("<div class='ui-selectable-helper'></div>")
    }, destroy:function () {
        this.selectees.removeClass("ui-selectee").removeData("selectable-item");
        this.element.removeClass("ui-selectable ui-selectable-disabled").removeData("selectable").unbind(".selectable");
        this._mouseDestroy();
        return this
    }, _mouseStart:function (g) {
        var b = this;
        this.opos = [g.pageX, g.pageY];
        if (!this.options.disabled) {
            var e = this.options;
            this.selectees = a(e.filter, this.element[0]);
            this._trigger("start", g);
            a(e.appendTo).append(this.helper);
            this.helper.css({left:g.clientX, top:g.clientY, width:0, height:0});
            e.autoRefresh && this.refresh();
            this.selectees.filter(".ui-selected").each(function () {
                var c = a.data(this, "selectable-item");
                c.startselected = true;
                if (!g.metaKey) {
                    c.$element.removeClass("ui-selected");
                    c.selected = false;
                    c.$element.addClass("ui-unselecting");
                    c.unselecting = true;
                    b._trigger("unselecting", g, {unselecting:c.element})
                }
            });
            a(g.target).parents().andSelf().each(function () {
                var c = a.data(this, "selectable-item");
                if (c) {
                    var f = !g.metaKey || !c.$element.hasClass("ui-selected");
                    c.$element.removeClass(f ? "ui-unselecting" : "ui-selected").addClass(f ? "ui-selecting" : "ui-unselecting");
                    c.unselecting = !f;
                    c.selecting = f;
                    (c.selected = f) ? b._trigger("selecting", g, {selecting:c.element}) : b._trigger("unselecting", g, {unselecting:c.element});
                    return false
                }
            })
        }
    }, _mouseDrag:function (q) {
        var o = this;
        this.dragged = true;
        if (!this.options.disabled) {
            var p = this.options, e = this.opos[0], n = this.opos[1], m = q.pageX, l = q.pageY;
            if (e > m) {
                var k = m;
                m = e;
                e = k
            }
            if (n > l) {
                k = l;
                l = n;
                n = k
            }
            this.helper.css({left:e, top:n, width:m - e, height:l - n});
            this.selectees.each(function () {
                var b = a.data(this, "selectable-item");
                if (!(!b || b.element == o.element[0])) {
                    var c = false;
                    if (p.tolerance == "touch") {
                        c = !(b.left > m || b.right < e || b.top > l || b.bottom < n)
                    } else {
                        if (p.tolerance == "fit") {
                            c = b.left > e && b.right < m && b.top > n && b.bottom < l
                        }
                    }
                    if (c) {
                        if (b.selected) {
                            b.$element.removeClass("ui-selected");
                            b.selected = false
                        }
                        if (b.unselecting) {
                            b.$element.removeClass("ui-unselecting");
                            b.unselecting = false
                        }
                        if (!b.selecting) {
                            b.$element.addClass("ui-selecting");
                            b.selecting = true;
                            o._trigger("selecting", q, {selecting:b.element})
                        }
                    } else {
                        if (b.selecting) {
                            if (q.metaKey && b.startselected) {
                                b.$element.removeClass("ui-selecting");
                                b.selecting = false;
                                b.$element.addClass("ui-selected");
                                b.selected = true
                            } else {
                                b.$element.removeClass("ui-selecting");
                                b.selecting = false;
                                if (b.startselected) {
                                    b.$element.addClass("ui-unselecting");
                                    b.unselecting = true
                                }
                                o._trigger("unselecting", q, {unselecting:b.element})
                            }
                        }
                        if (b.selected) {
                            if (!q.metaKey && !b.startselected) {
                                b.$element.removeClass("ui-selected");
                                b.selected = false;
                                b.$element.addClass("ui-unselecting");
                                b.unselecting = true;
                                o._trigger("unselecting", q, {unselecting:b.element})
                            }
                        }
                    }
                }
            });
            return false
        }
    }, _mouseStop:function (e) {
        var b = this;
        this.dragged = false;
        a(".ui-unselecting", this.element[0]).each(function () {
            var c = a.data(this, "selectable-item");
            c.$element.removeClass("ui-unselecting");
            c.unselecting = false;
            c.startselected = false;
            b._trigger("unselected", e, {unselected:c.element})
        });
        a(".ui-selecting", this.element[0]).each(function () {
            var c = a.data(this, "selectable-item");
            c.$element.removeClass("ui-selecting").addClass("ui-selected");
            c.selecting = false;
            c.selected = true;
            c.startselected = true;
            b._trigger("selected", e, {selected:c.element})
        });
        this._trigger("stop", e);
        this.helper.remove();
        return false
    }});
    a.extend(a.ui.selectable, {version:"1.8.13.htm"/*tpa=http://192.168.119.101:8888/1.8.13*/})
})(jQuery);
(function (b) {
    var f, c = function (a) {
        b(":ui-button", a.target.form).each(function () {
            var g = b(this).data("button");
            setTimeout(function () {
                g.refresh()
            }, 1)
        })
    }, e = function (a) {
        var j = a.name, h = a.form, g = b([]);
        if (j) {
            g = h ? b(h).find("[name='" + j + "']") : b("[name='" + j + "']", a.ownerDocument).filter(function () {
                return !this.form
            })
        }
        return g
    };
    b.widget("ui.button", {options:{disabled:null, text:true, label:null, icons:{primary:null, secondary:null}}, _create:function () {
        this.element.closest("form").unbind("reset.button").bind("reset.button", c);
        if (typeof this.options.disabled !== "boolean") {
            this.options.disabled = this.element.attr("disabled")
        }
        this._determineButtonType();
        this.hasTitle = !!this.buttonElement.attr("title");
        var a = this, j = this.options, h = this.type === "checkbox" || this.type === "radio", g = "ui-state-hover" + (!h ? " ui-state-active" : "");
        if (j.label === null) {
            j.label = this.buttonElement.html()
        }
        if (this.element.is(":disabled")) {
            j.disabled = true
        }
        this.buttonElement.addClass("ui-button ui-widget ui-state-default ui-corner-all").attr("role", "button").bind("mouseenter.button",function () {
            if (!j.disabled) {
                b(this).addClass("ui-state-hover");
                this === f && b(this).addClass("ui-state-active")
            }
        }).bind("mouseleave.button",function () {
            j.disabled || b(this).removeClass(g)
        }).bind("focus.button",function () {
            b(this).addClass("ui-state-focus")
        }).bind("blur.button",function () {
            b(this).removeClass("ui-state-focus")
        }).bind("click.button", function (k) {
            j.disabled && k.stopImmediatePropagation()
        });
        h && this.element.bind("change.button", function () {
            a.refresh()
        });
        if (this.type === "checkbox") {
            this.buttonElement.bind("click.button", function () {
                if (j.disabled) {
                    return false
                }
                b(this).toggleClass("ui-state-active");
                a.buttonElement.attr("aria-pressed", a.element[0].checked)
            })
        } else {
            if (this.type === "radio") {
                this.buttonElement.bind("click.button", function () {
                    if (j.disabled) {
                        return false
                    }
                    b(this).addClass("ui-state-active");
                    a.buttonElement.attr("aria-pressed", true);
                    var k = a.element[0];
                    e(k).not(k).map(function () {
                        return b(this).button("widget")[0]
                    }).removeClass("ui-state-active").attr("aria-pressed", false)
                })
            } else {
                this.buttonElement.bind("mousedown.button",function () {
                    if (j.disabled) {
                        return false
                    }
                    b(this).addClass("ui-state-active");
                    f = this;
                    b(document).one("mouseup", function () {
                        f = null
                    })
                }).bind("mouseup.button",function () {
                    if (j.disabled) {
                        return false
                    }
                    b(this).removeClass("ui-state-active")
                }).bind("keydown.button",function (k) {
                    if (j.disabled) {
                        return false
                    }
                    if (k.keyCode == b.ui.keyCode.SPACE || k.keyCode == b.ui.keyCode.ENTER) {
                        b(this).addClass("ui-state-active")
                    }
                }).bind("keyup.button", function () {
                    b(this).removeClass("ui-state-active")
                });
                this.buttonElement.is("a") && this.buttonElement.keyup(function (k) {
                    k.keyCode === b.ui.keyCode.SPACE && b(this).click()
                })
            }
        }
        this._setOption("disabled", j.disabled)
    }, _determineButtonType:function () {
        this.type = this.element.is(":checkbox") ? "checkbox" : this.element.is(":radio") ? "radio" : this.element.is("input") ? "input" : "button";
        if (this.type === "checkbox" || this.type === "radio") {
            var a = this.element.parents().filter(":last"), g = "label[for=" + this.element.attr("id") + "]";
            this.buttonElement = a.find(g);
            if (!this.buttonElement.length) {
                a = a.length ? a.siblings() : this.element.siblings();
                this.buttonElement = a.filter(g);
                if (!this.buttonElement.length) {
                    this.buttonElement = a.find(g)
                }
            }
            this.element.addClass("ui-helper-hidden-accessible");
            (a = this.element.is(":checked")) && this.buttonElement.addClass("ui-state-active");
            this.buttonElement.attr("aria-pressed", a)
        } else {
            this.buttonElement = this.element
        }
    }, widget:function () {
        return this.buttonElement
    }, destroy:function () {
        this.element.removeClass("ui-helper-hidden-accessible");
        this.buttonElement.removeClass("ui-button ui-widget ui-state-default ui-corner-all ui-state-hover ui-state-active  ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only").removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html());
        this.hasTitle || this.buttonElement.removeAttr("title");
        b.Widget.prototype.destroy.call(this)
    }, _setOption:function (a, g) {
        b.Widget.prototype._setOption.apply(this, arguments);
        if (a === "disabled") {
            g ? this.element.attr("disabled", true) : this.element.removeAttr("disabled")
        }
        this._resetButton()
    }, refresh:function () {
        var a = this.element.is(":disabled");
        a !== this.options.disabled && this._setOption("disabled", a);
        if (this.type === "radio") {
            e(this.element[0]).each(function () {
                b(this).is(":checked") ? b(this).button("widget").addClass("ui-state-active").attr("aria-pressed", true) : b(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", false)
            })
        } else {
            if (this.type === "checkbox") {
                this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", true) : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", false)
            }
        }
    }, _resetButton:function () {
        if (this.type === "input") {
            this.options.label && this.element.val(this.options.label)
        } else {
            var a = this.buttonElement.removeClass("ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only"), k = b("<span></span>").addClass("ui-button-text").html(this.options.label).appendTo(a.empty()).text(), j = this.options.icons, g = j.primary && j.secondary, h = [];
            if (j.primary || j.secondary) {
                if (this.options.text) {
                    h.push("ui-button-text-icon" + (g ? "s" : j.primary ? "-primary" : "-secondary"))
                }
                j.primary && a.prepend("<span class='ui-button-icon-primary ui-icon " + j.primary + "'></span>");
                j.secondary && a.append("<span class='ui-button-icon-secondary ui-icon " + j.secondary + "'></span>");
                if (!this.options.text) {
                    h.push(g ? "ui-button-icons-only" : "ui-button-icon-only");
                    this.hasTitle || a.attr("title", k)
                }
            } else {
                h.push("ui-button-text-only")
            }
            a.addClass(h.join(" "))
        }
    }});
    b.widget("ui.buttonset", {options:{items:":button, :submit, :reset, :checkbox, :radio, a, :data(button)"}, _create:function () {
        this.element.addClass("ui-buttonset")
    }, _init:function () {
        this.refresh()
    }, _setOption:function (a, g) {
        a === "disabled" && this.buttons.button("option", a, g);
        b.Widget.prototype._setOption.apply(this, arguments)
    }, refresh:function () {
        this.buttons = this.element.find(this.options.items).filter(":ui-button").button("refresh").end().not(":ui-button").button().end().map(function () {
            return b(this).button("widget")[0]
        }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass("ui-corner-left").end().filter(":last").addClass("ui-corner-right").end().end()
    }, destroy:function () {
        this.element.removeClass("ui-buttonset");
        this.buttons.map(function () {
            return b(this).button("widget")[0]
        }).removeClass("ui-corner-left ui-corner-right").end().button("destroy");
        b.Widget.prototype.destroy.call(this)
    }})
})(jQuery);
(function (g, b) {
    var a = {buttons:true, height:true, maxHeight:true, maxWidth:true, minHeight:true, minWidth:true, width:true}, f = {maxHeight:true, maxWidth:true, minHeight:true, minWidth:true}, e = g.attrFn || {val:true, css:true, html:true, text:true, data:true, width:true, height:true, offset:true, click:true};
    g.widget("ui.dialog", {options:{autoOpen:true, buttons:{}, closeOnEscape:true, closeText:"close", dialogClass:"", draggable:true, hide:null, height:"auto", maxHeight:false, maxWidth:false, minHeight:150, minWidth:150, modal:false, position:{my:"center", at:"center", collision:"fit", using:function (h) {
        var c = g(this).css(h).offset().top;
        c < 0 && g(this).css("top", h.top - c)
    }}, resizable:true, show:null, stack:true, title:"", width:300, zIndex:1000}, _create:function () {
        this.originalTitle = this.element.attr("title");
        if (typeof this.originalTitle !== "string") {
            this.originalTitle = ""
        }
        this.options.title = this.options.title || this.originalTitle;
        var j = this, c = j.options, o = c.title || "&#160;", n = g.ui.dialog.getTitleId(j.element), l = (j.uiDialog = g("<div></div>")).appendTo(document.body).hide().addClass("ui-dialog ui-widget ui-widget-content ui-corner-all " + c.dialogClass).css({zIndex:c.zIndex}).attr("tabIndex", -1).css("outline", 0).keydown(function (h) {
            if (c.closeOnEscape && h.keyCode && h.keyCode === g.ui.keyCode.ESCAPE) {
                j.close(h);
                h.preventDefault()
            }
        }).attr({role:"dialog", "aria-labelledby":n}).mousedown(function (h) {
            j.moveToTop(false, h)
        });
        j.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(l);
        var m = (j.uiDialogTitlebar = g("<div></div>")).addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(l), k = g('<a href="#"></a>').addClass("ui-dialog-titlebar-close ui-corner-all").attr("role", "button").hover(function () {
            k.addClass("ui-state-hover")
        },function () {
            k.removeClass("ui-state-hover")
        }).focus(function () {
            k.addClass("ui-state-focus")
        }).blur(function () {
            k.removeClass("ui-state-focus")
        }).click(function (h) {
            j.close(h);
            return false
        }).appendTo(m);
        (j.uiDialogTitlebarCloseText = g("<span></span>")).addClass("ui-icon ui-icon-closethick").text(c.closeText).appendTo(k);
        g("<span></span>").addClass("ui-dialog-title").attr("id", n).html(o).prependTo(m);
        if (g.isFunction(c.beforeclose) && !g.isFunction(c.beforeClose)) {
            c.beforeClose = c.beforeclose
        }
        m.find("*").add(m).disableSelection();
        c.draggable && g.fn.draggable && j._makeDraggable();
        c.resizable && g.fn.resizable && j._makeResizable();
        j._createButtons(c.buttons);
        j._isOpen = false;
        g.fn.bgiframe && l.bgiframe()
    }, _init:function () {
        this.options.autoOpen && this.open()
    }, destroy:function () {
        var c = this;
        c.overlay && c.overlay.destroy();
        c.uiDialog.hide();
        c.element.unbind(".dialog").removeData("dialog").removeClass("ui-dialog-content ui-widget-content").hide().appendTo("body");
        c.uiDialog.remove();
        c.originalTitle && c.element.attr("title", c.originalTitle);
        return c
    }, widget:function () {
        return this.uiDialog
    }, close:function (h) {
        var c = this, k, j;
        if (false !== c._trigger("beforeClose", h)) {
            c.overlay && c.overlay.destroy();
            c.uiDialog.unbind("keypress.ui-dialog");
            c._isOpen = false;
            if (c.options.hide) {
                c.uiDialog.hide(c.options.hide, function () {
                    c._trigger("close", h)
                })
            } else {
                c.uiDialog.hide();
                c._trigger("close", h)
            }
            g.ui.dialog.overlay.resize();
            if (c.options.modal) {
                k = 0;
                g(".ui-dialog").each(function () {
                    if (this !== c.uiDialog[0]) {
                        j = g(this).css("z-index");
                        isNaN(j) || (k = Math.max(k, j))
                    }
                });
                g.ui.dialog.maxZ = k
            }
            return c
        }
    }, isOpen:function () {
        return this._isOpen
    }, moveToTop:function (h, c) {
        var k = this, j = k.options;
        if (j.modal && !h || !j.stack && !j.modal) {
            return k._trigger("focus", c)
        }
        if (j.zIndex > g.ui.dialog.maxZ) {
            g.ui.dialog.maxZ = j.zIndex
        }
        if (k.overlay) {
            g.ui.dialog.maxZ += 1;
            k.overlay.$el.css("z-index", g.ui.dialog.overlay.maxZ = g.ui.dialog.maxZ)
        }
        h = {scrollTop:k.element.attr("scrollTop"), scrollLeft:k.element.attr("scrollLeft")};
        g.ui.dialog.maxZ += 1;
        k.uiDialog.css("z-index", g.ui.dialog.maxZ);
        k.element.attr(h);
        k._trigger("focus", c);
        return k
    }, open:function () {
        if (!this._isOpen) {
            var h = this, c = h.options, j = h.uiDialog;
            h.overlay = c.modal ? new g.ui.dialog.overlay(h) : null;
            h._size();
            h._position(c.position);
            j.show(c.show);
            h.moveToTop(true);
            c.modal && j.bind("keypress.ui-dialog", function (m) {
                if (m.keyCode === g.ui.keyCode.TAB) {
                    var k = g(":tabbable", this), l = k.filter(":first");
                    k = k.filter(":last");
                    if (m.target === k[0] && !m.shiftKey) {
                        l.focus(1);
                        return false
                    } else {
                        if (m.target === l[0] && m.shiftKey) {
                            k.focus(1);
                            return false
                        }
                    }
                }
            });
            g(h.element.find(":tabbable").get().concat(j.find(".ui-dialog-buttonpane :tabbable").get().concat(j.get()))).eq(0).focus();
            h._isOpen = true;
            h._trigger("open");
            return h
        }
    }, _createButtons:function (h) {
        var c = this, l = false, k = g("<div></div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"), j = g("<div></div>").addClass("ui-dialog-buttonset").appendTo(k);
        c.uiDialog.find(".ui-dialog-buttonpane").remove();
        typeof h === "object" && h !== null && g.each(h, function () {
            return !(l = true)
        });
        if (l) {
            g.each(h, function (o, n) {
                n = g.isFunction(n) ? {click:n, text:o} : n;
                var m = g('<button type="button"></button>').click(function () {
                    n.click.apply(c.element[0], arguments)
                }).appendTo(j);
                g.each(n, function (q, p) {
                    if (q !== "click") {
                        q in e ? m[q](p) : m.attr(q, p)
                    }
                });
                g.fn.button && m.button()
            });
            k.appendTo(c.uiDialog)
        }
    }, _makeDraggable:function () {
        function h(m) {
            return{position:m.position, offset:m.offset}
        }

        var c = this, l = c.options, k = g(document), j;
        c.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close", handle:".ui-dialog-titlebar", containment:"document", start:function (n, m) {
            j = l.height === "auto" ? "auto" : g(this).height();
            g(this).height(g(this).height()).addClass("ui-dialog-dragging");
            c._trigger("dragStart", n, h(m))
        }, drag:function (n, m) {
            c._trigger("drag", n, h(m))
        }, stop:function (n, m) {
            l.position = [m.position.left - k.scrollLeft(), m.position.top - k.scrollTop()];
            g(this).removeClass("ui-dialog-dragging").height(j);
            c._trigger("dragStop", n, h(m));
            g.ui.dialog.overlay.resize()
        }})
    }, _makeResizable:function (h) {
        function c(m) {
            return{originalPosition:m.originalPosition, originalSize:m.originalSize, position:m.position, size:m.size}
        }

        h = h === b ? this.options.resizable : h;
        var l = this, k = l.options, j = l.uiDialog.css("position");
        h = typeof h === "string" ? h : "n,e,s,w,se,sw,ne,nw";
        l.uiDialog.resizable({cancel:".ui-dialog-content", containment:"document", alsoResize:l.element, maxWidth:k.maxWidth, maxHeight:k.maxHeight, minWidth:k.minWidth, minHeight:l._minHeight(), handles:h, start:function (n, m) {
            g(this).addClass("ui-dialog-resizing");
            l._trigger("resizeStart", n, c(m))
        }, resize:function (n, m) {
            l._trigger("resize", n, c(m))
        }, stop:function (n, m) {
            g(this).removeClass("ui-dialog-resizing");
            k.height = g(this).height();
            k.width = g(this).width();
            l._trigger("resizeStop", n, c(m));
            g.ui.dialog.overlay.resize()
        }}).css("position", j).find(".ui-resizable-se").addClass("ui-icon ui-icon-grip-diagonal-se")
    }, _minHeight:function () {
        var c = this.options;
        return c.height === "auto" ? c.minHeight : Math.min(c.minHeight, c.height)
    }, _position:function (h) {
        var c = [], k = [0, 0], j;
        if (h) {
            if (typeof h === "string" || typeof h === "object" && "0" in h) {
                c = h.split ? h.split(" ") : [h[0], h[1]];
                if (c.length === 1) {
                    c[1] = c[0]
                }
                g.each(["left", "top"], function (l, m) {
                    if (+c[l] === c[l]) {
                        k[l] = c[l];
                        c[l] = m
                    }
                });
                h = {my:c.join(" "), at:c.join(" "), offset:k.join(" ")}
            }
            h = g.extend({}, g.ui.dialog.prototype.options.position, h)
        } else {
            h = g.ui.dialog.prototype.options.position
        }
        (j = this.uiDialog.is(":visible")) || this.uiDialog.show();
        this.uiDialog.css({top:0, left:0}).position(g.extend({of:window}, h));
        j || this.uiDialog.hide()
    }, _setOptions:function (h) {
        var c = this, k = {}, j = false;
        g.each(h, function (l, m) {
            c._setOption(l, m);
            if (l in a) {
                j = true
            }
            if (l in f) {
                k[l] = m
            }
        });
        j && this._size();
        this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", k)
    }, _setOption:function (h, c) {
        var l = this, k = l.uiDialog;
        switch (h) {
            case"beforeclose":
                h = "beforeClose";
                break;
            case"buttons":
                l._createButtons(c);
                break;
            case"closeText":
                l.uiDialogTitlebarCloseText.text("" + c);
                break;
            case"dialogClass":
                k.removeClass(l.options.dialogClass).addClass("ui-dialog ui-widget ui-widget-content ui-corner-all " + c);
                break;
            case"disabled":
                c ? k.addClass("ui-dialog-disabled") : k.removeClass("ui-dialog-disabled");
                break;
            case"draggable":
                var j = k.is(":data(draggable)");
                j && !c && k.draggable("destroy");
                !j && c && l._makeDraggable();
                break;
            case"position":
                l._position(c);
                break;
            case"resizable":
                (j = k.is(":data(resizable)")) && !c && k.resizable("destroy");
                j && typeof c === "string" && k.resizable("option", "handles", c);
                !j && c !== false && l._makeResizable(c);
                break;
            case"title":
                g(".ui-dialog-title", l.uiDialogTitlebar).html("" + (c || "&#160;"));
                break
        }
        g.Widget.prototype._setOption.apply(l, arguments)
    }, _size:function () {
        var h = this.options, c, k, j = this.uiDialog.is(":visible");
        this.element.show().css({width:"auto", minHeight:0, height:0});
        if (h.minWidth > h.width) {
            h.width = h.minWidth
        }
        c = this.uiDialog.css({height:"auto", width:h.width}).height();
        k = Math.max(0, h.minHeight - c);
        if (h.height === "auto") {
            if (g.support.minHeight) {
                this.element.css({minHeight:k, height:"auto"})
            } else {
                this.uiDialog.show();
                h = this.element.css("height", "auto").height();
                j || this.uiDialog.hide();
                this.element.height(Math.max(h, k))
            }
        } else {
            this.element.height(Math.max(h.height - c, 0))
        }
        this.uiDialog.is(":data(resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
    }});
    g.extend(g.ui.dialog, {version:"1.8.13.htm"/*tpa=http://192.168.119.101:8888/1.8.13*/, uuid:0, maxZ:0, getTitleId:function (c) {
        c = c.attr("id");
        if (!c) {
            this.uuid += 1;
            c = this.uuid
        }
        return"ui-dialog-title-" + c
    }, overlay:function (c) {
        this.$el = g.ui.dialog.overlay.create(c)
    }});
    g.extend(g.ui.dialog.overlay, {instances:[], oldInstances:[], maxZ:0, events:g.map("focus,mousedown,mouseup,keydown,keypress,click".split(","),function (c) {
        return c + ".dialog-overlay"
    }).join(" "), create:function (h) {
        if (this.instances.length === 0) {
            setTimeout(function () {
                g.ui.dialog.overlay.instances.length && g(document).bind(g.ui.dialog.overlay.events, function (j) {
                    if (g(j.target).zIndex() < g.ui.dialog.overlay.maxZ) {
                        return false
                    }
                })
            }, 1);
            g(document).bind("keydown.dialog-overlay", function (j) {
                if (h.options.closeOnEscape && j.keyCode && j.keyCode === g.ui.keyCode.ESCAPE) {
                    h.close(j);
                    j.preventDefault()
                }
            });
            g(window).bind("resize.dialog-overlay", g.ui.dialog.overlay.resize)
        }
        var c = (this.oldInstances.pop() || g("<div></div>").addClass("ui-widget-overlay")).appendTo(document.body).css({width:this.width(), height:this.height()});
        g.fn.bgiframe && c.bgiframe();
        this.instances.push(c);
        return c
    }, destroy:function (h) {
        var c = g.inArray(h, this.instances);
        c != -1 && this.oldInstances.push(this.instances.splice(c, 1)[0]);
        this.instances.length === 0 && g([document, window]).unbind(".dialog-overlay");
        h.remove();
        var j = 0;
        g.each(this.instances, function () {
            j = Math.max(j, this.css("z-index"))
        });
        this.maxZ = j
    }, height:function () {
        var h, c;
        if (g.browser.msie && g.browser.version < 7) {
            h = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);
            c = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight);
            return h < c ? g(window).height() + "px" : h + "px"
        } else {
            return g(document).height() + "px"
        }
    }, width:function () {
        var h, c;
        if (g.browser.msie && g.browser.version < 7) {
            h = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth);
            c = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth);
            return h < c ? g(window).width() + "px" : h + "px"
        } else {
            return g(document).width() + "px"
        }
    }, resize:function () {
        var c = g([]);
        g.each(g.ui.dialog.overlay.instances, function () {
            c = c.add(this)
        });
        c.css({width:0, height:0}).css({width:g.ui.dialog.overlay.width(), height:g.ui.dialog.overlay.height()})
    }});
    g.extend(g.ui.dialog.overlay.prototype, {destroy:function () {
        g.ui.dialog.overlay.destroy(this.$el)
    }})
})(jQuery);
(function (a, c) {
    a.widget("ui.progressbar", {options:{value:0, max:100}, min:0, _create:function () {
        this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar", "aria-valuemin":this.min, "aria-valuemax":this.options.max, "aria-valuenow":this._value()});
        this.valueDiv = a("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element);
        this.oldValue = this._value();
        this._refreshValue()
    }, destroy:function () {
        this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow");
        this.valueDiv.remove();
        a.Widget.prototype.destroy.apply(this, arguments)
    }, value:function (b) {
        if (b === c) {
            return this._value()
        }
        this._setOption("value", b);
        return this
    }, _setOption:function (b, e) {
        if (b === "value") {
            this.options.value = e;
            this._refreshValue();
            this._value() === this.options.max && this._trigger("complete")
        }
        a.Widget.prototype._setOption.apply(this, arguments)
    }, _value:function () {
        var b = this.options.value;
        if (typeof b !== "number") {
            b = 0
        }
        return Math.min(this.options.max, Math.max(this.min, b))
    }, _percentage:function () {
        return 100 * this._value() / this.options.max
    }, _refreshValue:function () {
        var b = this.value(), e = this._percentage();
        if (this.oldValue !== b) {
            this.oldValue = b;
            this._trigger("change")
        }
        this.valueDiv.toggle(b > this.min).toggleClass("ui-corner-right", b === this.options.max).width(e.toFixed(0) + "%");
        this.element.attr("aria-valuenow", b)
    }});
    a.extend(a.ui.progressbar, {version:"1.8.13.htm"/*tpa=http://192.168.119.101:8888/1.8.13*/})
})(jQuery);
(function (k) {
    if (/1\.(0|1|2)\.(0|1|2)/.test(k.fn.jquery) || /^1.1/.test(k.fn.jquery)) {
        alert("blockUI requires jQuery v1.2.3 or later!  You are using v" + k.fn.jquery);
        return
    }
    k.fn._fadeIn = k.fn.fadeIn;
    var c = function () {
    };
    var l = document.documentMode || 0;
    var f = k.browser.msie && ((k.browser.version < 8 && !l) || l < 8);
    var g = k.browser.msie && /MSIE 6.0/.test(navigator.userAgent) && !l;
    k.blockUI = function (r) {
        e(window, r)
    };
    k.unblockUI = function (r) {
        j(window, r)
    };
    k.growlUI = function (v, t, u, r) {
        var s = k('<div class="growlUI"></div>');
        if (v) {
            s.append("<h1>" + v + "</h1>")
        }
        if (t) {
            s.append("<h2>" + t + "</h2>")
        }
        if (u == undefined) {
            u = 3000
        }
        k.blockUI({message:s, fadeIn:700, fadeOut:1000, centerY:false, timeout:u, showOverlay:false, onUnblock:r, css:k.blockUI.defaults.growlCSS})
    };
    k.fn.block = function (r) {
        return this.unblock({fadeOut:0}).each(function () {
            if (k.css(this, "position") == "static") {
                this.style.position = "relative"
            }
            if (k.browser.msie) {
                this.style.zoom = 1
            }
            e(this, r)
        })
    };
    k.fn.unblock = function (r) {
        return this.each(function () {
            j(this, r)
        })
    };
    k.blockUI.version = 2.39;
    k.blockUI.defaults = {message:"<h1>Please wait...</h1>", title:null, draggable:true, theme:false, css:{padding:0, margin:0, top:"40%", left:"35%", textAlign:"center", color:"#000", border:"3px solid #aaa", backgroundColor:"#fff", cursor:"wait"}, themedCSS:{width:"30%", top:"40%", left:"35%"}, overlayCSS:{backgroundColor:"#000", opacity:0.6, cursor:"wait"}, growlCSS:{width:"350px", top:"10px", left:"", right:"10px", border:"none", padding:"5px", opacity:0.6, cursor:"default", color:"#fff", backgroundColor:"#000", "-webkit-border-radius":"10px", "-moz-border-radius":"10px", "border-radius":"10px"}, iframeSrc:/^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank", forceIframe:false, baseZ:1000, centerX:true, centerY:true, allowBodyStretch:true, bindEvents:true, constrainTabKey:true, fadeIn:200, fadeOut:400, timeout:0, showOverlay:true, focusInput:true, applyPlatformOpacityRules:true, onBlock:null, onUnblock:null, quirksmodeOffsetHack:4, blockMsgClass:"blockMsg"};
    var b = null;
    var h = [];

    function e(v, H) {
        var C = (v == window);
        var y = H && H.message !== undefined ? H.message : undefined;
        H = k.extend({}, k.blockUI.defaults, H || {});
        H.overlayCSS = k.extend({}, k.blockUI.defaults.overlayCSS, H.overlayCSS || {});
        var E = k.extend({}, k.blockUI.defaults.css, H.css || {});
        var P = k.extend({}, k.blockUI.defaults.themedCSS, H.themedCSS || {});
        y = y === undefined ? H.message : y;
        if (C && b) {
            j(window, {fadeOut:0})
        }
        if (y && typeof y != "string" && (y.parentNode || y.jquery)) {
            var K = y.jquery ? y[0] : y;
            var R = {};
            k(v).data("blockUI.history", R);
            R.el = K;
            R.parent = K.parentNode;
            R.display = K.style.display;
            R.position = K.style.position;
            if (R.parent) {
                R.parent.removeChild(K)
            }
        }
        k(v).data("blockUI.onUnblock", H.onUnblock);
        var D = H.baseZ;
        var O = (k.browser.msie || H.forceIframe) ? k('<iframe class="blockUI" style="z-index:' + (D++) + ';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="' + H.iframeSrc + '"></iframe>') : k('<div class="blockUI" style="display:none"></div>');
        var N = H.theme ? k('<div class="blockUI blockOverlay ui-widget-overlay" style="z-index:' + (D++) + ';display:none"></div>') : k('<div class="blockUI blockOverlay" style="z-index:' + (D++) + ';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>');
        var M, I;
        if (H.theme && C) {
            I = '<div class="blockUI ' + H.blockMsgClass + ' blockPage ui-dialog ui-widget ui-corner-all" style="z-index:' + (D + 10) + ';display:none;position:fixed"><div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (H.title || "&nbsp;") + '</div><div class="ui-widget-content ui-dialog-content"></div></div>'
        } else {
            if (H.theme) {
                I = '<div class="blockUI ' + H.blockMsgClass + ' blockElement ui-dialog ui-widget ui-corner-all" style="z-index:' + (D + 10) + ';display:none;position:absolute"><div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (H.title || "&nbsp;") + '</div><div class="ui-widget-content ui-dialog-content"></div></div>'
            } else {
                if (C) {
                    I = '<div class="blockUI ' + H.blockMsgClass + ' blockPage" style="z-index:' + (D + 10) + ';display:none;position:fixed"></div>'
                } else {
                    I = '<div class="blockUI ' + H.blockMsgClass + ' blockElement" style="z-index:' + (D + 10) + ';display:none;position:absolute"></div>'
                }
            }
        }
        M = k(I);
        if (y) {
            if (H.theme) {
                M.css(P);
                M.addClass("ui-widget-content")
            } else {
                M.css(E)
            }
        }
        if (!H.theme && (!H.applyPlatformOpacityRules || !(k.browser.mozilla && /Linux/.test(navigator.platform)))) {
            N.css(H.overlayCSS)
        }
        N.css("position", C ? "fixed" : "absolute");
        if (k.browser.msie || H.forceIframe) {
            O.css("opacity", 0)
        }
        var B = [O, N, M], Q = C ? k("body") : k(v);
        k.each(B, function () {
            this.appendTo(Q)
        });
        if (H.theme && H.draggable && k.fn.draggable) {
            M.draggable({handle:".ui-dialog-titlebar", cancel:"li"})
        }
        var x = f && (!k.boxModel || k("object,embed", C ? null : v).length > 0);
        if (g || x) {
            if (C && H.allowBodyStretch && k.boxModel) {
                k("html,body").css("height", "100%")
            }
            if ((g || !k.boxModel) && !C) {
                var G = o(v, "borderTopWidth"), L = o(v, "borderLeftWidth");
                var A = G ? "(0 - " + G + ")" : 0;
                var F = L ? "(0 - " + L + ")" : 0
            }
            k.each([O, N, M], function (t, U) {
                var z = U[0].style;
                z.position = "absolute";
                if (t < 2) {
                    C ? z.setExpression("height", "Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.boxModel?0:" + H.quirksmodeOffsetHack + ') + "px"') : z.setExpression("height", 'this.parentNode.offsetHeight + "px"');
                    C ? z.setExpression("width", 'jQuery.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"') : z.setExpression("width", 'this.parentNode.offsetWidth + "px"');
                    if (F) {
                        z.setExpression("left", F)
                    }
                    if (A) {
                        z.setExpression("top", A)
                    }
                } else {
                    if (H.centerY) {
                        if (C) {
                            z.setExpression("top", '(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"')
                        }
                        z.marginTop = 0
                    } else {
                        if (!H.centerY && C) {
                            var S = (H.css && H.css.top) ? parseInt(H.css.top) : 0;
                            var T = "((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + " + S + ') + "px"';
                            z.setExpression("top", T)
                        }
                    }
                }
            })
        }
        if (y) {
            if (H.theme) {
                M.find(".ui-widget-content").append(y)
            } else {
                M.append(y)
            }
            if (y.jquery || y.nodeType) {
                k(y).show()
            }
        }
        if ((k.browser.msie || H.forceIframe) && H.showOverlay) {
            O.show()
        }
        if (H.fadeIn) {
            var J = H.onBlock ? H.onBlock : c;
            var u = (H.showOverlay && !y) ? J : c;
            var r = y ? J : c;
            if (H.showOverlay) {
                N._fadeIn(H.fadeIn, u)
            }
            if (y) {
                M._fadeIn(H.fadeIn, r)
            }
        } else {
            if (H.showOverlay) {
                N.show()
            }
            if (y) {
                M.show()
            }
            if (H.onBlock) {
                H.onBlock()
            }
        }
        n(1, v, H);
        if (C) {
            b = M[0];
            h = k(":input:enabled:visible", b);
            if (H.focusInput) {
                setTimeout(q, 20)
            }
        } else {
            a(M[0], H.centerX, H.centerY)
        }
        if (H.timeout) {
            var w = setTimeout(function () {
                C ? k.unblockUI(H) : k(v).unblock(H)
            }, H.timeout);
            k(v).data("blockUI.timeout", w)
        }
    }

    function j(u, v) {
        var t = (u == window);
        var s = k(u);
        var w = s.data("blockUI.history");
        var x = s.data("blockUI.timeout");
        if (x) {
            clearTimeout(x);
            s.removeData("blockUI.timeout")
        }
        v = k.extend({}, k.blockUI.defaults, v || {});
        n(0, u, v);
        if (v.onUnblock === null) {
            v.onUnblock = s.data("blockUI.onUnblock");
            s.removeData("blockUI.onUnblock")
        }
        var r;
        if (t) {
            r = k("body").children().filter(".blockUI").add("body > .blockUI")
        } else {
            r = k(".blockUI", u)
        }
        if (t) {
            b = h = null
        }
        if (v.fadeOut) {
            r.fadeOut(v.fadeOut);
            setTimeout(function () {
                m(r, w, v, u)
            }, v.fadeOut)
        } else {
            m(r, w, v, u)
        }
    }

    function m(r, u, t, s) {
        r.each(function (v, w) {
            if (this.parentNode) {
                this.parentNode.removeChild(this)
            }
        });
        if (u && u.el) {
            u.el.style.display = u.display;
            u.el.style.position = u.position;
            if (u.parent) {
                u.parent.appendChild(u.el)
            }
            k(s).removeData("blockUI.history")
        }
        if (typeof t.onUnblock == "function") {
            t.onUnblock(s, t)
        }
    }

    function n(r, v, w) {
        var u = v == window, t = k(v);
        if (!r && (u && !b || !u && !t.data("blockUI.isBlocked"))) {
            return
        }
        if (!u) {
            t.data("blockUI.isBlocked", r)
        }
        if (!w.bindEvents || (r && !w.showOverlay)) {
            return
        }
        var s = "mousedown mouseup keydown keypress";
        r ? k(document).bind(s, w, p) : k(document).unbind(s, p)
    }

    function p(v) {
        if (v.keyCode && v.keyCode == 9) {
            if (b && v.data.constrainTabKey) {
                var t = h;
                var s = !v.shiftKey && v.target === t[t.length - 1];
                var r = v.shiftKey && v.target === t[0];
                if (s || r) {
                    setTimeout(function () {
                        q(r)
                    }, 10);
                    return false
                }
            }
        }
        var u = v.data;
        if (k(v.target).parents("div." + u.blockMsgClass).length > 0) {
            return true
        }
        return k(v.target).parents().children().filter("div.blockUI").length == 0
    }

    function q(r) {
        if (!h) {
            return
        }
        var s = h[r === true ? h.length - 1 : 0];
        if (s) {
            s.focus()
        }
    }

    function a(z, r, B) {
        var A = z.parentNode, w = z.style;
        var u = ((A.offsetWidth - z.offsetWidth) / 2) - o(A, "borderLeftWidth");
        var v = ((A.offsetHeight - z.offsetHeight) / 2) - o(A, "borderTopWidth");
        if (r) {
            w.left = u > 0 ? (u + "px") : "0"
        }
        if (B) {
            w.top = v > 0 ? (v + "px") : "0"
        }
    }

    function o(r, s) {
        return parseInt(k.css(r, s)) || 0
    }
})(jQuery);
(function (a) {
    a.fn.lazyLoaderM = function (b, e) {
        var c = {loadImg:"images/loading.gif"/*tpa=http://192.168.119.101:8888/images/loading.gif*/};
        var b = a.extend(c, b);
        a(this).each(function () {
            a("body").prepend('<div class="lazy-window-top-m" style="position:fixed; background-color:transparent; opacity:0; height:1px; width:100%; top:1px; margin:0 auto;"></div>');
            a("body").append('<div class="lazy-window-bottom-m" style="position:fixed; background-color:transparent; opacity:0; height:1px; width:100%; bottom:1px; margin:0 auto;"></div>');
            var g = a(this).find(b.LazyElements);
            a(b.TargetView).scroll(function (h) {
                f()
            });
            function f() {
                var k = a(".lazy-window-top-m").offset();
                var m = a(".lazy-window-top-m").height();
                var n = parseInt(m + k.top);
                var j = a(".lazy-window-bottom-m").offset();
                var l = a(".lazy-window-bottom-m").height();
                var h = parseInt(l + j.top);
                g.each(function () {
                    var r = a(this).offset();
                    var o = a(this).height();
                    var q = parseInt(r.top + o);
                    if (r.top < h && q > n) {
                        var p = Math.ceil((a(b.LazyElements, b.TargetView).index(a(this)) + 1) / Airdroid.Applications.SoftStore.setting.blockSize) - 1;
                        if (_.isFunction(e)) {
                            if (Airdroid.Cache.AppCanLoad) {
                                e(p)
                            }
                        }
                    }
                })
            }
        })
    }
})(jQuery);
(function (c) {
    var a = ["DOMMouseScroll", "mousewheel"];
    c.event.special.mousewheel = {setup:function () {
        if (this.addEventListener) {
            for (var e = a.length; e;) {
                this.addEventListener(a[--e], b, false)
            }
        } else {
            this.onmousewheel = b
        }
    }, teardown:function () {
        if (this.removeEventListener) {
            for (var e = a.length; e;) {
                this.removeEventListener(a[--e], b, false)
            }
        } else {
            this.onmousewheel = null
        }
    }};
    c.fn.extend({mousewheel:function (e) {
        return e ? this.bind("mousewheel", e) : this.trigger("mousewheel")
    }, unmousewheel:function (e) {
        return this.unbind("mousewheel", e)
    }});
    function b(k) {
        var h = k || window.event, g = [].slice.call(arguments, 1), l = 0, j = true, f = 0, e = 0;
        k = c.event.fix(h);
        k.type = "mousewheel";
        if (k.wheelDelta) {
            l = k.wheelDelta / 120
        }
        if (k.detail) {
            l = -k.detail / 3
        }
        e = l;
        if (h.axis !== undefined && h.axis === h.HORIZONTAL_AXIS) {
            e = 0;
            f = -1 * l
        }
        if (h.wheelDeltaY !== undefined) {
            e = h.wheelDeltaY / 120
        }
        if (h.wheelDeltaX !== undefined) {
            f = -1 * h.wheelDeltaX / 120
        }
        g.unshift(k, l, f, e);
        return c.event.handle.apply(this, g)
    }
})(jQuery);
(function (e, f, g) {
    e.fn.jScrollPane = function (a) {
        function b(bs, bc) {
            var bj, ba = this, a2, bF, aL, bD, a7, a1, s, aP, bY, bT, br, aX, bi, aY, aW, bP, a6, bz, a3, aN, bx, by, bK, bC, bm, aU, bt, bl, aJ, bp, bQ, a0, bf, bG = true, bb = true, bR = false, aV = false, bA = bs.clone(false, false).empty(), bN = e.fn.mwheelIntent ? "mwheelIntent.jsp.htm"/*tpa=http://192.168.119.101:8888/mwheelIntent.jsp*/ : "mousewheel.jsp.htm"/*tpa=http://192.168.119.101:8888/mousewheel.jsp*/;
            bQ = bs.css("paddingTop") + " " + bs.css("paddingRight") + " " + bs.css("paddingBottom") + " " + bs.css("paddingLeft");
            a0 = (parseInt(bs.css("paddingLeft"), 10) || 0) + (parseInt(bs.css("paddingRight"), 10) || 0);
            function bv(j) {
                var o, m, n, q, h, k, l = false, p = false;
                bj = j;
                if (a2 === g) {
                    h = bs.scrollTop();
                    k = bs.scrollLeft();
                    bs.css({overflow:"hidden", padding:0});
                    bF = bs.innerWidth() + a0;
                    aL = bs.innerHeight();
                    bs.width(bF);
                    a2 = e('<div class="jspPane" />').css("padding", bQ).append(bs.children());
                    bD = e('<div class="jspContainer" />').css({width:bF + "px", height:aL + "px"}).append(a2).appendTo(bs)
                } else {
                    bs.css("width", "");
                    l = bj.stickToBottom && bg();
                    p = bj.stickToRight && bw();
                    q = bs.innerWidth() + a0 != bF || bs.outerHeight() != aL;
                    if (q) {
                        bF = bs.innerWidth() + a0;
                        aL = bs.innerHeight();
                        bD.css({width:bF + "px", height:aL + "px"})
                    }
                    if (!q && bf == a7 && a2.outerHeight() == a1) {
                        bs.width(bF);
                        return
                    }
                    bf = a7;
                    a2.css("width", "");
                    bs.width(bF);
                    bD.find(">.jspVerticalBar,>.jspHorizontalBar").remove().end()
                }
                a2.css("overflow", "auto");
                if (j.contentWidth) {
                    a7 = j.contentWidth
                } else {
                    a7 = a2[0].scrollWidth
                }
                a1 = a2[0].scrollHeight;
                a2.css("overflow", "");
                s = a7 / bF;
                aP = a1 / aL;
                bY = aP > 1;
                bT = s > 1;
                if (!(bT || bY)) {
                    bs.removeClass("jspScrollable");
                    a2.css({top:0, width:bD.width() - a0});
                    aS();
                    bq();
                    a9();
                    aK();
                    bH()
                } else {
                    bs.addClass("jspScrollable");
                    o = bj.maintainPosition && (bi || bP);
                    if (o) {
                        m = bV();
                        n = bX()
                    }
                    bS();
                    c();
                    bo();
                    if (o) {
                        bd(p ? (a7 - bF) : m, false);
                        be(l ? (a1 - aL) : n, false)
                    }
                    bh();
                    bJ();
                    bB();
                    if (bj.enableKeyboardNavigation) {
                        a8()
                    }
                    if (bj.clickOnTrack) {
                        aQ()
                    }
                    bu();
                    if (bj.hijackInternalLinks) {
                        aT()
                    }
                }
                if (bj.autoReinitialise && !bp) {
                    bp = setInterval(function () {
                        bv(bj)
                    }, bj.autoReinitialiseDelay)
                } else {
                    if (!bj.autoReinitialise && bp) {
                        clearInterval(bp)
                    }
                }
                h && bs.scrollTop(0) && be(h, false);
                k && bs.scrollLeft(0) && bd(k, false);
                bs.trigger("jsp-initialised", [bT || bY])
            }

            function bS() {
                if (bY) {
                    bD.append(e('<div class="jspVerticalBar" />').append(e('<div class="jspCap jspCapTop" />'), e('<div class="jspTrack" />').append(e('<div class="jspDrag" />').append(e('<div class="jspDragTop" />'), e('<div class="jspDragBottom" />'))), e('<div class="jspCap jspCapBottom" />')));
                    a6 = bD.find(">.jspVerticalBar");
                    bz = a6.find(">.jspTrack");
                    br = bz.find(">.jspDrag");
                    if (bj.showArrows) {
                        by = e('<a class="jspArrow jspArrowUp" />').bind("mousedown.jsp.htm"/*tpa=http://192.168.119.101:8888/mousedown.jsp*/, bU(0, -1)).bind("click.jsp.htm"/*tpa=http://192.168.119.101:8888/click.jsp*/, bW);
                        bK = e('<a class="jspArrow jspArrowDown" />').bind("mousedown.jsp.htm"/*tpa=http://192.168.119.101:8888/mousedown.jsp*/, bU(0, 1)).bind("click.jsp.htm"/*tpa=http://192.168.119.101:8888/click.jsp*/, bW);
                        if (bj.arrowScrollOnHover) {
                            by.bind("mouseover.jsp.htm"/*tpa=http://192.168.119.101:8888/mouseover.jsp*/, bU(0, -1, by));
                            bK.bind("mouseover.jsp.htm"/*tpa=http://192.168.119.101:8888/mouseover.jsp*/, bU(0, 1, bK))
                        }
                        bE(bz, bj.verticalArrowPositions, by, bK)
                    }
                    aN = aL;
                    bD.find(">.jspVerticalBar>.jspCap:visible,>.jspVerticalBar>.jspArrow").each(function () {
                        aN -= e(this).outerHeight()
                    });
                    br.hover(function () {
                        br.addClass("jspHover")
                    },function () {
                        br.removeClass("jspHover")
                    }).bind("mousedown.jsp.htm"/*tpa=http://192.168.119.101:8888/mousedown.jsp*/, function (j) {
                        e("html").bind("dragstart.jsp selectstart.jsp.htm"/*tpa=http://192.168.119.101:8888/dragstart.jsp selectstart.jsp*/, bW);
                        br.addClass("jspActive");
                        var h = j.pageY - br.position().top;
                        e("html").bind("mousemove.jsp.htm"/*tpa=http://192.168.119.101:8888/mousemove.jsp*/,function (k) {
                            a5(k.pageY - h, false)
                        }).bind("mouseup.jsp mouseleave.jsp.htm"/*tpa=http://192.168.119.101:8888/mouseup.jsp mouseleave.jsp*/, bn);
                        return false
                    });
                    aR()
                }
            }

            function aR() {
                bz.height(aN + "px");
                bi = 0;
                a3 = bj.verticalGutter + bz.outerWidth();
                a2.width(bF - a3 - a0);
                try {
                    if (a6.position().left === 0) {
                        a2.css("margin-left", a3 + "px")
                    }
                } catch (h) {
                }
            }

            function c() {
                if (bT) {
                    bD.append(e('<div class="jspHorizontalBar" />').append(e('<div class="jspCap jspCapLeft" />'), e('<div class="jspTrack" />').append(e('<div class="jspDrag" />').append(e('<div class="jspDragLeft" />'), e('<div class="jspDragRight" />'))), e('<div class="jspCap jspCapRight" />')));
                    bC = bD.find(">.jspHorizontalBar");
                    bm = bC.find(">.jspTrack");
                    aY = bm.find(">.jspDrag");
                    if (bj.showArrows) {
                        bl = e('<a class="jspArrow jspArrowLeft" />').bind("mousedown.jsp.htm"/*tpa=http://192.168.119.101:8888/mousedown.jsp*/, bU(-1, 0)).bind("click.jsp.htm"/*tpa=http://192.168.119.101:8888/click.jsp*/, bW);
                        aJ = e('<a class="jspArrow jspArrowRight" />').bind("mousedown.jsp.htm"/*tpa=http://192.168.119.101:8888/mousedown.jsp*/, bU(1, 0)).bind("click.jsp.htm"/*tpa=http://192.168.119.101:8888/click.jsp*/, bW);
                        if (bj.arrowScrollOnHover) {
                            bl.bind("mouseover.jsp.htm"/*tpa=http://192.168.119.101:8888/mouseover.jsp*/, bU(-1, 0, bl));
                            aJ.bind("mouseover.jsp.htm"/*tpa=http://192.168.119.101:8888/mouseover.jsp*/, bU(1, 0, aJ))
                        }
                        bE(bm, bj.horizontalArrowPositions, bl, aJ)
                    }
                    aY.hover(function () {
                        aY.addClass("jspHover")
                    },function () {
                        aY.removeClass("jspHover")
                    }).bind("mousedown.jsp.htm"/*tpa=http://192.168.119.101:8888/mousedown.jsp*/, function (j) {
                        e("html").bind("dragstart.jsp selectstart.jsp.htm"/*tpa=http://192.168.119.101:8888/dragstart.jsp selectstart.jsp*/, bW);
                        aY.addClass("jspActive");
                        var h = j.pageX - aY.position().left;
                        e("html").bind("mousemove.jsp.htm"/*tpa=http://192.168.119.101:8888/mousemove.jsp*/,function (k) {
                            a4(k.pageX - h, false)
                        }).bind("mouseup.jsp mouseleave.jsp.htm"/*tpa=http://192.168.119.101:8888/mouseup.jsp mouseleave.jsp*/, bn);
                        return false
                    });
                    aU = bD.innerWidth();
                    bI()
                }
            }

            function bI() {
                bD.find(">.jspHorizontalBar>.jspCap:visible,>.jspHorizontalBar>.jspArrow").each(function () {
                    aU -= e(this).outerWidth()
                });
                bm.width(aU + "px");
                bP = 0
            }

            function bo() {
                if (bT && bY) {
                    var j = bm.outerHeight(), h = bz.outerWidth();
                    aN -= j;
                    e(bC).find(">.jspCap:visible,>.jspArrow").each(function () {
                        aU += e(this).outerWidth()
                    });
                    aU -= h;
                    aL -= h;
                    bF -= j;
                    bm.parent().append(e('<div class="jspCorner" />').css("width", j + "px"));
                    aR();
                    bI()
                }
                if (bT) {
                    a2.width((bD.outerWidth() - a0) + "px")
                }
                a1 = a2.outerHeight();
                aP = a1 / aL;
                if (bT) {
                    bt = Math.ceil(1 / s * aU);
                    if (bt > bj.horizontalDragMaxWidth) {
                        bt = bj.horizontalDragMaxWidth
                    } else {
                        if (bt < bj.horizontalDragMinWidth) {
                            bt = bj.horizontalDragMinWidth
                        }
                    }
                    aY.width(bt + "px");
                    aW = aU - bt;
                    bL(bP)
                }
                if (bY) {
                    bx = Math.ceil(1 / aP * aN);
                    if (bx > bj.verticalDragMaxHeight) {
                        bx = bj.verticalDragMaxHeight
                    } else {
                        if (bx < bj.verticalDragMinHeight) {
                            bx = bj.verticalDragMinHeight
                        }
                    }
                    br.height(bx + "px");
                    aX = aN - bx;
                    bM(bi)
                }
            }

            function bE(n, l, o, k) {
                var h = "before", m = "after", j;
                if (l == "os") {
                    l = /Mac/.test(navigator.platform) ? "after" : "split"
                }
                if (l == h) {
                    m = l
                } else {
                    if (l == m) {
                        h = l;
                        j = o;
                        o = k;
                        k = j
                    }
                }
                n[h](o)[m](k)
            }

            function bU(k, h, j) {
                return function () {
                    bk(k, h, this, j);
                    this.blur();
                    return false
                }
            }

            function bk(m, n, h, j) {
                h = e(h).addClass("jspActive");
                var l, o, p = true, k = function () {
                    if (m !== 0) {
                        ba.scrollByX(m * bj.arrowButtonSpeed)
                    }
                    if (n !== 0) {
                        ba.scrollByY(n * bj.arrowButtonSpeed)
                    }
                    o = setTimeout(k, p ? bj.initialDelay : bj.arrowRepeatFreq);
                    p = false
                };
                k();
                l = j ? "mouseout.jsp.htm"/*tpa=http://192.168.119.101:8888/mouseout.jsp*/ : "mouseup.jsp.htm"/*tpa=http://192.168.119.101:8888/mouseup.jsp*/;
                j = j || e("html");
                j.bind(l, function () {
                    h.removeClass("jspActive");
                    o && clearTimeout(o);
                    o = null;
                    j.unbind(l)
                })
            }

            function aQ() {
                aK();
                if (bY) {
                    bz.bind("mousedown.jsp.htm"/*tpa=http://192.168.119.101:8888/mousedown.jsp*/, function (j) {
                        if (j.originalTarget === g || j.originalTarget == j.currentTarget) {
                            var m = e(this), h = m.offset(), l = j.pageY - h.top - bi, o, p = true, k = function () {
                                var q = m.offset(), u = j.pageY - q.top - bx / 2, t = aL * bj.scrollPagePercent, r = aX * t / (a1 - aL);
                                if (l < 0) {
                                    if (bi - r > u) {
                                        ba.scrollByY(-t)
                                    } else {
                                        a5(u)
                                    }
                                } else {
                                    if (l > 0) {
                                        if (bi + r < u) {
                                            ba.scrollByY(t)
                                        } else {
                                            a5(u)
                                        }
                                    } else {
                                        n();
                                        return
                                    }
                                }
                                o = setTimeout(k, p ? bj.initialDelay : bj.trackClickRepeatFreq);
                                p = false
                            }, n = function () {
                                o && clearTimeout(o);
                                o = null;
                                e(document).unbind("mouseup.jsp.htm"/*tpa=http://192.168.119.101:8888/mouseup.jsp*/, n)
                            };
                            k();
                            e(document).bind("mouseup.jsp.htm"/*tpa=http://192.168.119.101:8888/mouseup.jsp*/, n);
                            return false
                        }
                    })
                }
                if (bT) {
                    bm.bind("mousedown.jsp.htm"/*tpa=http://192.168.119.101:8888/mousedown.jsp*/, function (j) {
                        if (j.originalTarget === g || j.originalTarget == j.currentTarget) {
                            var m = e(this), h = m.offset(), l = j.pageX - h.left - bP, o, p = true, k = function () {
                                var q = m.offset(), u = j.pageX - q.left - bt / 2, t = bF * bj.scrollPagePercent, r = aW * t / (a7 - bF);
                                if (l < 0) {
                                    if (bP - r > u) {
                                        ba.scrollByX(-t)
                                    } else {
                                        a4(u)
                                    }
                                } else {
                                    if (l > 0) {
                                        if (bP + r < u) {
                                            ba.scrollByX(t)
                                        } else {
                                            a4(u)
                                        }
                                    } else {
                                        n();
                                        return
                                    }
                                }
                                o = setTimeout(k, p ? bj.initialDelay : bj.trackClickRepeatFreq);
                                p = false
                            }, n = function () {
                                o && clearTimeout(o);
                                o = null;
                                e(document).unbind("mouseup.jsp.htm"/*tpa=http://192.168.119.101:8888/mouseup.jsp*/, n)
                            };
                            k();
                            e(document).bind("mouseup.jsp.htm"/*tpa=http://192.168.119.101:8888/mouseup.jsp*/, n);
                            return false
                        }
                    })
                }
            }

            function aK() {
                if (bm) {
                    bm.unbind("mousedown.jsp.htm"/*tpa=http://192.168.119.101:8888/mousedown.jsp*/)
                }
                if (bz) {
                    bz.unbind("mousedown.jsp.htm"/*tpa=http://192.168.119.101:8888/mousedown.jsp*/)
                }
            }

            function bn() {
                e("html").unbind("dragstart.jsp selectstart.jsp mousemove.jsp mouseup.jsp mouseleave.jsp.htm"/*tpa=http://192.168.119.101:8888/dragstart.jsp selectstart.jsp mousemove.jsp mouseup.jsp mouseleave.jsp*/);
                if (br) {
                    br.removeClass("jspActive")
                }
                if (aY) {
                    aY.removeClass("jspActive")
                }
            }

            function a5(h, j) {
                if (!bY) {
                    return
                }
                if (h < 0) {
                    h = 0
                } else {
                    if (h > aX) {
                        h = aX
                    }
                }
                if (j === g) {
                    j = bj.animateScroll
                }
                if (j) {
                    ba.animate(br, "top", h, bM)
                } else {
                    br.css("top", h);
                    bM(h)
                }
            }

            function bM(m) {
                if (m === g) {
                    m = br.position().top
                }
                bD.scrollTop(0);
                bi = m;
                var j = bi === 0, l = bi == aX, k = m / aX, h = -k * (a1 - aL);
                if (bG != j || bR != l) {
                    bG = j;
                    bR = l;
                    bs.trigger("jsp-arrow-change", [bG, bR, bb, aV])
                }
                aM(j, l);
                a2.css("top", h);
                bs.trigger("jsp-scroll-y", [-h, j, l]).trigger("scroll")
            }

            function a4(j, h) {
                if (!bT) {
                    return
                }
                if (j < 0) {
                    j = 0
                } else {
                    if (j > aW) {
                        j = aW
                    }
                }
                if (h === g) {
                    h = bj.animateScroll
                }
                if (h) {
                    ba.animate(aY, "left", j, bL)
                } else {
                    aY.css("left", j);
                    bL(j)
                }
            }

            function bL(m) {
                if (m === g) {
                    m = aY.position().left
                }
                bD.scrollTop(0);
                bP = m;
                var j = bP === 0, k = bP == aW, l = m / aW, h = -l * (a7 - bF);
                if (bb != j || aV != k) {
                    bb = j;
                    aV = k;
                    bs.trigger("jsp-arrow-change", [bG, bR, bb, aV])
                }
                aO(j, k);
                a2.css("left", h);
                bs.trigger("jsp-scroll-x", [-h, j, k]).trigger("scroll")
            }

            function aM(j, h) {
                if (bj.showArrows) {
                    by[j ? "addClass" : "removeClass"]("jspDisabled");
                    bK[h ? "addClass" : "removeClass"]("jspDisabled")
                }
            }

            function aO(j, h) {
                if (bj.showArrows) {
                    bl[j ? "addClass" : "removeClass"]("jspDisabled");
                    aJ[h ? "addClass" : "removeClass"]("jspDisabled")
                }
            }

            function be(h, k) {
                var j = h / (a1 - aL);
                a5(j * aX, k)
            }

            function bd(k, h) {
                var j = k / (a7 - bF);
                a4(j * aW, h)
            }

            function bO(j, o, w) {
                var r, v, u, x = 0, k = 0, h, p, q, m, n, l;
                try {
                    r = e(j)
                } catch (t) {
                    return
                }
                v = r.outerHeight();
                u = r.outerWidth();
                bD.scrollTop(0);
                bD.scrollLeft(0);
                while (!r.is(".jspPane")) {
                    x += r.position().top;
                    k += r.position().left;
                    r = r.offsetParent();
                    if (/^body|html$/i.test(r[0].nodeName)) {
                        return
                    }
                }
                h = bX();
                q = h + aL;
                if (x < h || o) {
                    n = x - bj.verticalGutter
                } else {
                    if (x + v > q) {
                        n = x - aL + v + bj.verticalGutter
                    }
                }
                if (n) {
                    be(n, w)
                }
                p = bV();
                m = p + bF;
                if (k < p || o) {
                    l = k - bj.horizontalGutter
                } else {
                    if (k + u > m) {
                        l = k - bF + u + bj.horizontalGutter
                    }
                }
                if (l) {
                    bd(l, w)
                }
            }

            function bV() {
                return -a2.position().left
            }

            function bX() {
                return -a2.position().top
            }

            function bg() {
                var h = a1 - aL;
                return(h > 20) && (h - bX() < 10)
            }

            function bw() {
                var h = a7 - bF;
                return(h > 20) && (h - bV() < 10)
            }

            function bJ() {
                bD.unbind(bN).bind(bN, function (k, j, l, n) {
                    var m = bP, h = bi;
                    ba.scrollBy(l * bj.mouseWheelSpeed, -n * bj.mouseWheelSpeed, false);
                    return m == bP && h == bi
                })
            }

            function aS() {
                bD.unbind(bN)
            }

            function bW() {
                return false
            }

            function bh() {
                a2.find(":input,a").unbind("focus.jsp.htm"/*tpa=http://192.168.119.101:8888/focus.jsp*/).bind("focus.jsp.htm"/*tpa=http://192.168.119.101:8888/focus.jsp*/, function (h) {
                    bO(h.target, false)
                })
            }

            function bq() {
                a2.find(":input,a").unbind("focus.jsp.htm"/*tpa=http://192.168.119.101:8888/focus.jsp*/)
            }

            function a8() {
                var h, l, j = [];
                bT && j.push(bC[0]);
                bY && j.push(a6[0]);
                a2.focus(function () {
                    bs.focus()
                });
                bs.attr("tabindex", 0).unbind("keydown.jsp keypress.jsp.htm"/*tpa=http://192.168.119.101:8888/keydown.jsp keypress.jsp*/).bind("keydown.jsp.htm"/*tpa=http://192.168.119.101:8888/keydown.jsp*/,function (m) {
                    if (m.target !== this && !(j.length && e(m.target).closest(j).length)) {
                        return
                    }
                    var n = bP, o = bi;
                    switch (m.keyCode) {
                        case 40:
                        case 38:
                        case 34:
                        case 32:
                        case 33:
                        case 39:
                        case 37:
                            h = m.keyCode;
                            k();
                            break;
                        case 35:
                            be(a1 - aL);
                            h = null;
                            break;
                        case 36:
                            be(0);
                            h = null;
                            break
                    }
                    l = m.keyCode == h && n != bP || o != bi;
                    return !l
                }).bind("keypress.jsp.htm"/*tpa=http://192.168.119.101:8888/keypress.jsp*/, function (m) {
                    if (m.keyCode == h) {
                        k()
                    }
                    return !l
                });
                if (bj.hideFocus) {
                    bs.css("outline", "none");
                    if ("hideFocus" in bD[0]) {
                        bs.attr("hideFocus", true)
                    }
                } else {
                    bs.css("outline", "");
                    if ("hideFocus" in bD[0]) {
                        bs.attr("hideFocus", false)
                    }
                }
                function k() {
                    var m = bP, n = bi;
                    switch (h) {
                        case 40:
                            ba.scrollByY(bj.keyboardSpeed, false);
                            break;
                        case 38:
                            ba.scrollByY(-bj.keyboardSpeed, false);
                            break;
                        case 34:
                        case 32:
                            ba.scrollByY(aL * bj.scrollPagePercent, false);
                            break;
                        case 33:
                            ba.scrollByY(-aL * bj.scrollPagePercent, false);
                            break;
                        case 39:
                            ba.scrollByX(bj.keyboardSpeed, false);
                            break;
                        case 37:
                            ba.scrollByX(-bj.keyboardSpeed, false);
                            break
                    }
                    l = m != bP || n != bi;
                    return l
                }
            }

            function a9() {
                bs.attr("tabindex", "-1").removeAttr("tabindex").unbind("keydown.jsp keypress.jsp.htm"/*tpa=http://192.168.119.101:8888/keydown.jsp keypress.jsp*/)
            }

            function bu() {
                if (location.hash && location.hash.length > 1) {
                    var j, l, k = escape(location.hash);
                    try {
                        j = e(k)
                    } catch (h) {
                        return
                    }
                    if (j.length && a2.find(k)) {
                        if (bD.scrollTop() === 0) {
                            l = setInterval(function () {
                                if (bD.scrollTop() > 0) {
                                    bO(k, true);
                                    e(document).scrollTop(bD.position().top);
                                    clearInterval(l)
                                }
                            }, 50)
                        } else {
                            bO(k, true);
                            e(document).scrollTop(bD.position().top)
                        }
                    }
                }
            }

            function bH() {
                e("a.jspHijack").unbind("click.jsp-hijack").removeClass("jspHijack")
            }

            function aT() {
                bH();
                e("a[href^=#]").addClass("jspHijack").bind("click.jsp-hijack", function () {
                    var h = this.href.split("#"), j;
                    if (h.length > 1) {
                        j = h[1];
                        if (j.length > 0 && a2.find("#" + j).length > 0) {
                            bO("#" + j, true);
                            return false
                        }
                    }
                })
            }

            function bB() {
                var m, n, k, l, j, h = false;
                bD.unbind("touchstart.jsp touchmove.jsp touchend.jsp click.jsp-touchclick").bind("touchstart.jsp.htm"/*tpa=http://192.168.119.101:8888/touchstart.jsp*/,function (p) {
                    var o = p.originalEvent.touches[0];
                    m = bV();
                    n = bX();
                    k = o.pageX;
                    l = o.pageY;
                    j = false;
                    h = true
                }).bind("touchmove.jsp.htm"/*tpa=http://192.168.119.101:8888/touchmove.jsp*/,function (o) {
                    if (!h) {
                        return
                    }
                    var p = o.originalEvent.touches[0], q = bP, r = bi;
                    ba.scrollTo(m + k - p.pageX, n + l - p.pageY);
                    j = j || Math.abs(k - p.pageX) > 5 || Math.abs(l - p.pageY) > 5;
                    return q == bP && r == bi
                }).bind("touchend.jsp.htm"/*tpa=http://192.168.119.101:8888/touchend.jsp*/,function (o) {
                    h = false
                }).bind("click.jsp-touchclick", function (o) {
                    if (j) {
                        j = false;
                        return false
                    }
                })
            }

            function aZ() {
                var h = bX(), j = bV();
                bs.removeClass("jspScrollable").unbind(".jsp");
                bs.replaceWith(bA.append(a2.children()));
                bA.scrollTop(h);
                bA.scrollLeft(j)
            }

            e.extend(ba, {reinitialise:function (h) {
                h = e.extend({}, bj, h);
                bv(h)
            }, scrollToElement:function (j, k, h) {
                bO(j, k, h)
            }, scrollTo:function (j, h, k) {
                bd(j, k);
                be(h, k)
            }, scrollToX:function (j, h) {
                bd(j, h)
            }, scrollToY:function (h, j) {
                be(h, j)
            }, scrollToPercentX:function (j, h) {
                bd(j * (a7 - bF), h)
            }, scrollToPercentY:function (j, h) {
                be(j * (a1 - aL), h)
            }, scrollBy:function (k, h, j) {
                ba.scrollByX(k, j);
                ba.scrollByY(h, j)
            }, scrollByX:function (h, k) {
                var l = bV() + Math[h < 0 ? "floor" : "ceil"](h), j = l / (a7 - bF);
                a4(j * aW, k)
            }, scrollByY:function (h, k) {
                var l = bX() + Math[h < 0 ? "floor" : "ceil"](h), j = l / (a1 - aL);
                a5(j * aX, k)
            }, positionDragX:function (h, j) {
                a4(h, j)
            }, positionDragY:function (j, h) {
                a5(j, h)
            }, animate:function (m, j, h, k) {
                var l = {};
                l[j] = h;
                m.animate(l, {duration:bj.animateDuration, easing:bj.animateEase, queue:false, step:k})
            }, getContentPositionX:function () {
                return bV()
            }, getContentPositionY:function () {
                return bX()
            }, getContentWidth:function () {
                return a7
            }, getContentHeight:function () {
                return a1
            }, getPercentScrolledX:function () {
                return bV() / (a7 - bF)
            }, getPercentScrolledY:function () {
                return bX() / (a1 - aL)
            }, getIsScrollableH:function () {
                return bT
            }, getIsScrollableV:function () {
                return bY
            }, getContentPane:function () {
                return a2
            }, scrollToBottom:function (h) {
                a5(aX, h)
            }, hijackInternalLinks:function () {
                aT()
            }, destroy:function () {
                aZ()
            }});
            bv(bc)
        }

        a = e.extend({}, e.fn.jScrollPane.defaults, a);
        e.each(["mouseWheelSpeed", "arrowButtonSpeed", "trackClickSpeed", "keyboardSpeed"], function () {
            a[this] = a[this] || a.speed
        });
        return this.each(function () {
            var h = e(this), c = h.data("jsp");
            if (c) {
                c.reinitialise(a)
            } else {
                c = new b(h, a);
                h.data("jsp", c)
            }
        })
    };
    e.fn.jScrollPane.defaults = {showArrows:false, maintainPosition:true, stickToBottom:false, stickToRight:false, clickOnTrack:true, autoReinitialise:false, autoReinitialiseDelay:500, verticalDragMinHeight:0, verticalDragMaxHeight:99999, horizontalDragMinWidth:0, horizontalDragMaxWidth:99999, contentWidth:g, animateScroll:false, animateDuration:300, animateEase:"linear", hijackInternalLinks:false, verticalGutter:4, horizontalGutter:4, mouseWheelSpeed:0, arrowButtonSpeed:0, arrowRepeatFreq:50, arrowScrollOnHover:false, trackClickSpeed:0, trackClickRepeatFreq:70, verticalArrowPositions:"split", horizontalArrowPositions:"split", enableKeyboardNavigation:true, hideFocus:false, keyboardSpeed:0, initialDelay:300, speed:30, scrollPagePercent:0.8}
})(jQuery, this);
var hexcase = 0;
function hex_md5(b) {
    return rstr2hex(rstr_md5(str2rstr_utf8(b)))
}
function hex_hmac_md5(e, c) {
    return rstr2hex(rstr_hmac_md5(str2rstr_utf8(e), str2rstr_utf8(c)))
}
function md5_vm_test() {
    return hex_md5("abc").toLowerCase() == "900150983cd24fb0d6963f7d28e17f72"
}
function rstr_md5(b) {
    return binl2rstr(binl_md5(rstr2binl(b), b.length * 8))
}
function rstr_hmac_md5(o, l) {
    var m = rstr2binl(o);
    if (m.length > 16) {
        m = binl_md5(m, o.length * 8)
    }
    var j = Array(16), n = Array(16);
    for (var h = 0; h < 16; h++) {
        j[h] = m[h] ^ 909522486;
        n[h] = m[h] ^ 1549556828
    }
    var k = binl_md5(j.concat(rstr2binl(l)), 512 + l.length * 8);
    return binl2rstr(binl_md5(n.concat(k), 512 + 128))
}
function rstr2hex(m) {
    try {
        hexcase
    } catch (j) {
        hexcase = 0
    }
    var k = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
    var e = "";
    var h;
    for (var l = 0; l < m.length; l++) {
        h = m.charCodeAt(l);
        e += k.charAt((h >>> 4) & 15) + k.charAt(h & 15)
    }
    return e
}
function str2rstr_utf8(k) {
    var f = "";
    var j = -1;
    var g, h;
    while (++j < k.length) {
        g = k.charCodeAt(j);
        h = j + 1 < k.length ? k.charCodeAt(j + 1) : 0;
        if (55296 <= g && g <= 56319 && 56320 <= h && h <= 57343) {
            g = 65536 + ((g & 1023) << 10) + (h & 1023);
            j++
        }
        if (g <= 127) {
            f += String.fromCharCode(g)
        } else {
            if (g <= 2047) {
                f += String.fromCharCode(192 | ((g >>> 6) & 31), 128 | (g & 63))
            } else {
                if (g <= 65535) {
                    f += String.fromCharCode(224 | ((g >>> 12) & 15), 128 | ((g >>> 6) & 63), 128 | (g & 63))
                } else {
                    if (g <= 2097151) {
                        f += String.fromCharCode(240 | ((g >>> 18) & 7), 128 | ((g >>> 12) & 63), 128 | ((g >>> 6) & 63), 128 | (g & 63))
                    }
                }
            }
        }
    }
    return f
}
function rstr2binl(e) {
    var f = Array(e.length >> 2);
    for (var g = 0; g < f.length; g++) {
        f[g] = 0
    }
    for (var g = 0; g < e.length * 8; g += 8) {
        f[g >> 5] |= (e.charCodeAt(g / 8) & 255) << (g % 32)
    }
    return f
}
function binl2rstr(e) {
    var f = "";
    for (var g = 0; g < e.length * 32; g += 8) {
        f += String.fromCharCode((e[g >> 5] >>> (g % 32)) & 255)
    }
    return f
}
function binl_md5(a, s) {
    a[s >> 5] |= 128 << ((s) % 32);
    a[(((s + 64) >>> 9) << 4) + 14] = s;
    var b = 1732584193;
    var c = -271733879;
    var q = -1732584194;
    var r = 271733878;
    for (var v = 0; v < a.length; v += 16) {
        var t = b;
        var u = c;
        var w = q;
        var x = r;
        b = md5_ff(b, c, q, r, a[v + 0], 7, -680876936);
        r = md5_ff(r, b, c, q, a[v + 1], 12, -389564586);
        q = md5_ff(q, r, b, c, a[v + 2], 17, 606105819);
        c = md5_ff(c, q, r, b, a[v + 3], 22, -1044525330);
        b = md5_ff(b, c, q, r, a[v + 4], 7, -176418897);
        r = md5_ff(r, b, c, q, a[v + 5], 12, 1200080426);
        q = md5_ff(q, r, b, c, a[v + 6], 17, -1473231341);
        c = md5_ff(c, q, r, b, a[v + 7], 22, -45705983);
        b = md5_ff(b, c, q, r, a[v + 8], 7, 1770035416);
        r = md5_ff(r, b, c, q, a[v + 9], 12, -1958414417);
        q = md5_ff(q, r, b, c, a[v + 10], 17, -42063);
        c = md5_ff(c, q, r, b, a[v + 11], 22, -1990404162);
        b = md5_ff(b, c, q, r, a[v + 12], 7, 1804603682);
        r = md5_ff(r, b, c, q, a[v + 13], 12, -40341101);
        q = md5_ff(q, r, b, c, a[v + 14], 17, -1502002290);
        c = md5_ff(c, q, r, b, a[v + 15], 22, 1236535329);
        b = md5_gg(b, c, q, r, a[v + 1], 5, -165796510);
        r = md5_gg(r, b, c, q, a[v + 6], 9, -1069501632);
        q = md5_gg(q, r, b, c, a[v + 11], 14, 643717713);
        c = md5_gg(c, q, r, b, a[v + 0], 20, -373897302);
        b = md5_gg(b, c, q, r, a[v + 5], 5, -701558691);
        r = md5_gg(r, b, c, q, a[v + 10], 9, 38016083);
        q = md5_gg(q, r, b, c, a[v + 15], 14, -660478335);
        c = md5_gg(c, q, r, b, a[v + 4], 20, -405537848);
        b = md5_gg(b, c, q, r, a[v + 9], 5, 568446438);
        r = md5_gg(r, b, c, q, a[v + 14], 9, -1019803690);
        q = md5_gg(q, r, b, c, a[v + 3], 14, -187363961);
        c = md5_gg(c, q, r, b, a[v + 8], 20, 1163531501);
        b = md5_gg(b, c, q, r, a[v + 13], 5, -1444681467);
        r = md5_gg(r, b, c, q, a[v + 2], 9, -51403784);
        q = md5_gg(q, r, b, c, a[v + 7], 14, 1735328473);
        c = md5_gg(c, q, r, b, a[v + 12], 20, -1926607734);
        b = md5_hh(b, c, q, r, a[v + 5], 4, -378558);
        r = md5_hh(r, b, c, q, a[v + 8], 11, -2022574463);
        q = md5_hh(q, r, b, c, a[v + 11], 16, 1839030562);
        c = md5_hh(c, q, r, b, a[v + 14], 23, -35309556);
        b = md5_hh(b, c, q, r, a[v + 1], 4, -1530992060);
        r = md5_hh(r, b, c, q, a[v + 4], 11, 1272893353);
        q = md5_hh(q, r, b, c, a[v + 7], 16, -155497632);
        c = md5_hh(c, q, r, b, a[v + 10], 23, -1094730640);
        b = md5_hh(b, c, q, r, a[v + 13], 4, 681279174);
        r = md5_hh(r, b, c, q, a[v + 0], 11, -358537222);
        q = md5_hh(q, r, b, c, a[v + 3], 16, -722521979);
        c = md5_hh(c, q, r, b, a[v + 6], 23, 76029189);
        b = md5_hh(b, c, q, r, a[v + 9], 4, -640364487);
        r = md5_hh(r, b, c, q, a[v + 12], 11, -421815835);
        q = md5_hh(q, r, b, c, a[v + 15], 16, 530742520);
        c = md5_hh(c, q, r, b, a[v + 2], 23, -995338651);
        b = md5_ii(b, c, q, r, a[v + 0], 6, -198630844);
        r = md5_ii(r, b, c, q, a[v + 7], 10, 1126891415);
        q = md5_ii(q, r, b, c, a[v + 14], 15, -1416354905);
        c = md5_ii(c, q, r, b, a[v + 5], 21, -57434055);
        b = md5_ii(b, c, q, r, a[v + 12], 6, 1700485571);
        r = md5_ii(r, b, c, q, a[v + 3], 10, -1894986606);
        q = md5_ii(q, r, b, c, a[v + 10], 15, -1051523);
        c = md5_ii(c, q, r, b, a[v + 1], 21, -2054922799);
        b = md5_ii(b, c, q, r, a[v + 8], 6, 1873313359);
        r = md5_ii(r, b, c, q, a[v + 15], 10, -30611744);
        q = md5_ii(q, r, b, c, a[v + 6], 15, -1560198380);
        c = md5_ii(c, q, r, b, a[v + 13], 21, 1309151649);
        b = md5_ii(b, c, q, r, a[v + 4], 6, -145523070);
        r = md5_ii(r, b, c, q, a[v + 11], 10, -1120210379);
        q = md5_ii(q, r, b, c, a[v + 2], 15, 718787259);
        c = md5_ii(c, q, r, b, a[v + 9], 21, -343485551);
        b = safe_add(b, t);
        c = safe_add(c, u);
        q = safe_add(q, w);
        r = safe_add(r, x)
    }
    return Array(b, c, q, r)
}
function md5_cmn(a, k, l, m, b, j) {
    return safe_add(bit_rol(safe_add(safe_add(k, a), safe_add(m, j)), b), l)
}
function md5_ff(m, n, a, b, o, c, l) {
    return md5_cmn((n & a) | ((~n) & b), m, n, o, c, l)
}
function md5_gg(m, n, a, b, o, c, l) {
    return md5_cmn((n & b) | (a & (~b)), m, n, o, c, l)
}
function md5_hh(m, n, a, b, o, c, l) {
    return md5_cmn(n ^ a ^ b, m, n, o, c, l)
}
function md5_ii(m, n, a, b, o, c, l) {
    return md5_cmn(a ^ (n | (~b)), m, n, o, c, l)
}
function safe_add(f, g) {
    var h = (f & 65535) + (g & 65535);
    var e = (f >> 16) + (g >> 16) + (h >> 16);
    return(e << 16) | (h & 65535)
}
function bit_rol(e, c) {
    return(e << c) | (e >>> (32 - c))
}
var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
var encode64 = function (c) {
    if (c == undefined) {
        return""
    }
    c = encodeURI(c);
    var a = "";
    var l, j, g = "";
    var k, h, f, e = "";
    var b = 0;
    do {
        l = c.charCodeAt(b++);
        j = c.charCodeAt(b++);
        g = c.charCodeAt(b++);
        k = l >> 2;
        h = ((l & 3) << 4) | (j >> 4);
        f = ((j & 15) << 2) | (g >> 6);
        e = g & 63;
        if (isNaN(j)) {
            f = e = 64
        } else {
            if (isNaN(g)) {
                e = 64
            }
        }
        a = a + keyStr.charAt(k) + keyStr.charAt(h) + keyStr.charAt(f) + keyStr.charAt(e);
        l = j = g = "";
        k = h = f = e = ""
    } while (b < c.length);
    return a.replace(/\+/g, '%2B').replace(/=/g, '%3D').replace(/\//g, '%2F')
};
var decode64 = function (e) {
    if (e == undefined) {
        return""
    }
    var b = "";
    var m, k, h = "";
    var l, j, g, f = "";
    var c = 0;
    if (e.length % 4 != 0) {
        return""
    }
    var a = /[^A-Za-z0-9\+\/\=]/g;
    if (a.exec(e)) {
        return""
    }
    do {
        l = keyStr.indexOf(e.charAt(c++));
        j = keyStr.indexOf(e.charAt(c++));
        g = keyStr.indexOf(e.charAt(c++));
        f = keyStr.indexOf(e.charAt(c++));
        m = (l << 2) | (j >> 4);
        k = ((j & 15) << 4) | (g >> 2);
        h = ((g & 3) << 6) | f;
        b = b + String.fromCharCode(m);
        if (g != 64) {
            b += String.fromCharCode(k)
        }
        if (f != 64) {
            b += String.fromCharCode(h)
        }
        m = k = h = "";
        l = j = g = f = ""
    } while (c < e.length);
    return b
};
var store = function () {
    var s = {}, l = window, j = l.document, q;
    s.disabled = false;
    s.set = function () {
    };
    s.get = function () {
    };
    s.remove = function () {
    };
    s.clear = function () {
    };
    s.transact = function (b, g) {
        var f = s.get(b);
        if (typeof f == "undefined") {
            f = {}
        }
        g(f);
        s.set(b, f)
    };
    s.serialize = function (b) {
        return JSON.stringify(b)
    };
    s.deserialize = function (b) {
        if (typeof b == "string") {
            return JSON.parse(b)
        }
    };
    var c;
    try {
        c = "localStorage" in l && l.localStorage
    } catch (k) {
        c = false
    }
    if (c) {
        q = l.localStorage;
        s.set = function (b, f) {
            q.setItem(b, s.serialize(f))
        };
        s.get = function (b) {
            return s.deserialize(q.getItem(b))
        };
        s.remove = function (b) {
            q.removeItem(b)
        };
        s.clear = function () {
            q.clear()
        }
    } else {
        var h;
        try {
            h = "globalStorage" in l && l.globalStorage && l.globalStorage[l.location.hostname]
        } catch (a) {
            h = false
        }
        if (h) {
            q = l.globalStorage[l.location.hostname];
            s.set = function (b, f) {
                q[b] = s.serialize(f)
            };
            s.get = function (b) {
                return s.deserialize(q[b] && q[b].value)
            };
            s.remove = function (b) {
                delete q[b]
            };
            s.clear = function () {
                for (var b in q) {
                    delete q[b]
                }
            }
        } else {
            if (j.documentElement.addBehavior) {
                q = j.createElement("div");
                l = function (b) {
                    return function () {
                        var f = Array.prototype.slice.call(arguments, 0);
                        f.unshift(q);
                        j.body.appendChild(q);
                        q.addBehavior("#default#userData");
                        q.load("localStorage");
                        f = b.apply(s, f);
                        j.body.removeChild(q);
                        return f
                    }
                };
                s.set = l(function (b, g, f) {
                    b.setAttribute(g, s.serialize(f));
                    b.save("localStorage")
                });
                s.get = l(function (b, f) {
                    return s.deserialize(b.getAttribute(f))
                });
                s.remove = l(function (b, f) {
                    b.removeAttribute(f);
                    b.save("localStorage")
                });
                s.clear = l(function (b) {
                    var m = b.XMLDocument.documentElement.attributes;
                    b.load("localStorage");
                    for (var g = 0, f; f = m[g]; g++) {
                        b.removeAttribute(f.name)
                    }
                    b.save("localStorage")
                })
            }
        }
    }
    try {
        s.set("__storejs__", "__storejs__");
        if (s.get("__storejs__") != "__storejs__") {
            s.disabled = true
        }
        s.remove("__storejs__")
    } catch (e) {
        s.disabled = true
    }
    return s
}();
if (!this.JSON) {
    this.JSON = {}
}
(function () {
    function b(a) {
        return a < 10 ? "0" + a : a
    }

    function g(a) {
        p.lastIndex = 0;
        return p.test(a) ? '"' + a.replace(p, function (c) {
            var d = r[c];
            return typeof d === "string" ? d : "\\u" + ("0000" + c.charCodeAt(0).toString(16)).slice(-4)
        }) + '"' : '"' + a + '"'
    }

    function m(a, c) {
        var d, h, k, q, l = i, j, e = c[a];
        if (e && typeof e === "object" && typeof e.toJSON === "function") {
            e = e.toJSON(a)
        }
        if (typeof o === "function") {
            e = o.call(c, a, e)
        }
        switch (typeof e) {
            case"string":
                return g(e);
            case"number":
                return isFinite(e) ? String(e) : "null";
            case"boolean":
            case"null":
                return String(e);
            case"object":
                if (!e) {
                    return"null"
                }
                i += n;
                j = [];
                if (Object.prototype.toString.apply(e) === "[object Array]") {
                    q = e.length;
                    for (d = 0; d < q; d += 1) {
                        j[d] = m(d, e) || "null"
                    }
                    k = j.length === 0 ? "[]" : i ? "[\n" + i + j.join(",\n" + i) + "\n" + l + "]" : "[" + j.join(",") + "]";
                    i = l;
                    return k
                }
                if (o && typeof o === "object") {
                    q = o.length;
                    for (d = 0; d < q; d += 1) {
                        h = o[d];
                        if (typeof h === "string") {
                            if (k = m(h, e)) {
                                j.push(g(h) + (i ? ": " : ":") + k)
                            }
                        }
                    }
                } else {
                    for (h in e) {
                        if (Object.hasOwnProperty.call(e, h)) {
                            if (k = m(h, e)) {
                                j.push(g(h) + (i ? ": " : ":") + k)
                            }
                        }
                    }
                }
                k = j.length === 0 ? "{}" : i ? "{\n" + i + j.join(",\n" + i) + "\n" + l + "}" : "{" + j.join(",") + "}";
                i = l;
                return k
        }
    }

    if (typeof Date.prototype.toJSON !== "function") {
        Date.prototype.toJSON = function () {
            return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + b(this.getUTCMonth() + 1) + "-" + b(this.getUTCDate()) + "T" + b(this.getUTCHours()) + ":" + b(this.getUTCMinutes()) + ":" + b(this.getUTCSeconds()) + "Z" : null
        };
        String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function () {
            return this.valueOf()
        }
    }
    var f = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, p = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, i, n, r = {"\u0008":"\\b", "\t":"\\t", "\n":"\\n", "\u000c":"\\f", "\r":"\\r", '"':'\\"', "\\":"\\\\"}, o;
    if (typeof JSON.stringify !== "function") {
        JSON.stringify = function (a, c, d) {
            var h;
            n = i = "";
            if (typeof d === "number") {
                for (h = 0; h < d; h += 1) {
                    n += " "
                }
            } else {
                if (typeof d === "string") {
                    n = d
                }
            }
            if ((o = c) && typeof c !== "function" && (typeof c !== "object" || typeof c.length !== "number")) {
                throw Error("JSON.stringify")
            }
            return m("", {"":a})
        }
    }
    if (typeof JSON.parse !== "function") {
        JSON.parse = function (a, c) {
            function d(k, q) {
                var l, j, e = k[q];
                if (e && typeof e === "object") {
                    for (l in e) {
                        if (Object.hasOwnProperty.call(e, l)) {
                            j = d(e, l);
                            if (j !== undefined) {
                                e[l] = j
                            } else {
                                delete e[l]
                            }
                        }
                    }
                }
                return c.call(k, q, e)
            }

            var h;
            a = String(a);
            f.lastIndex = 0;
            if (f.test(a)) {
                a = a.replace(f, function (k) {
                    return"\\u" + ("0000" + k.charCodeAt(0).toString(16)).slice(-4)
                })
            }
            if (/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
                h = eval("(" + a + ")");
                return typeof c === "function" ? d({"":h}, "") : h
            }
            throw new SyntaxError("JSON.parse")
        }
    }
})();
function imgpreload(f, e) {
    if (e instanceof Function) {
        e = {all:e}
    }
    if (typeof f == "string") {
        f = [f]
    }
    var k = [];
    var h = f.length;
    var g = 0;
    for (g; g < h; g++) {
        var j = new Image();
        j.onload = function () {
            k.push(this);
            if (e.each instanceof Function) {
                e.each.call(this)
            }
            if (k.length >= h && e.all instanceof Function) {
                e.all.call(k)
            }
        };
        j.src = f[g]
    }
}
if (typeof jQuery != "undefined") {
    (function (a) {
        a.imgpreload = imgpreload;
        a.fn.imgpreload = function (e) {
            e = a.extend({}, a.fn.imgpreload.defaults, (e instanceof Function) ? {all:e} : e);
            this.each(function () {
                var b = this;
                imgpreload(a(this).attr("src"), function () {
                    if (e.each instanceof Function) {
                        e.each.call(b)
                    }
                })
            });
            var g = [];
            this.each(function () {
                g.push(a(this).attr("src"))
            });
            var f = this;
            imgpreload(g, function () {
                if (e.all instanceof Function) {
                    e.all.call(f)
                }
            });
            return this
        };
        a.fn.imgpreload.defaults = {each:null, all:null}
    })(jQuery)
}
(function (C) {
    var L, U, Q, M, c, n, O, B, E = 0, I = {}, k = [], e = 0, H = {}, A = [], D, m, h, q, W, r, f = null, p = new Image(), j = /\.(jpg|gif|png|bmp|jpeg)(.*)?$/i, l = /[^\.]\.(swf)\s*$/i, s, N = 1, R, a, b, P = false, v = C.extend(C("<div/>")[0], {prop:0}), T = C.browser.msie && C.browser.version < 7 && !window.XMLHttpRequest, u = function () {
        U.hide();
        p.onerror = p.onload = null;
        if (f) {
            f.abort()
        }
        L.empty()
    }, z = function () {
        if (false === I.onError(k, E, I)) {
            U.hide();
            P = false;
            return
        }
        I.width = "auto";
        I.height = "auto";
        L.html('<p id="fancybox-error">The requested content cannot be loaded.<br />Please try again later.</p>');
        o()
    }, y = function () {
        var ab = k[E], Y, aa, ac, X, Z;
        u();
        I = C.extend({}, C.fn.fancybox.defaults, (typeof C(ab).data("fancybox") == "undefined" ? I : C(ab).data("fancybox")));
        Z = I.onStart(k, E, I);
        if (Z === false) {
            P = false;
            return
        } else {
            if (typeof Z == "object") {
                I = C.extend(I, Z)
            }
        }
        if (ab.nodeName && !I.orig) {
            I.orig = C(ab).children("img:first").length ? C(ab).children("img:first") : C(ab)
        }
        Y = I.href || (ab.nodeName ? C(ab).attr("href") : ab.href) || null;
        if ((/^(?:javascript)/i).test(Y) || Y == "#") {
            Y = null
        }
        if (I.type) {
            aa = I.type;
            if (!Y) {
                Y = I.content
            }
        } else {
            if (I.content) {
                aa = "html"
            } else {
                if (Y) {
                    if (Y.match(j)) {
                        aa = "image"
                    } else {
                        if (Y.match(l)) {
                            aa = "swf"
                        } else {
                            if (C(ab).hasClass("iframe")) {
                                aa = "iframe"
                            } else {
                                if (Y.indexOf("#") === 0) {
                                    aa = "inline"
                                } else {
                                    aa = "ajax"
                                }
                            }
                        }
                    }
                }
            }
        }
        if (!aa) {
            z();
            return
        }
        if (aa == "inline") {
            ab = Y.substr(Y.indexOf("#"));
            aa = C(ab).length > 0 ? "inline" : "ajax"
        }
        I.type = aa;
        I.href = Y;
        if (I.autoDimensions) {
            if (I.type == "html" || I.type == "inline" || I.type == "ajax") {
                I.width = "auto";
                I.height = "auto"
            } else {
                I.autoDimensions = false
            }
        }
        if (I.modal) {
            I.overlayShow = true;
            I.hideOnOverlayClick = false;
            I.hideOnContentClick = false;
            I.enableEscapeButton = false
        }
        I.padding = parseInt(I.padding, 10);
        I.margin = parseInt(I.margin, 10);
        L.css("padding", (I.padding + I.margin));
        C(".fancybox-inline-tmp").unbind("fancybox-cancel").bind("fancybox-change", function () {
            C(this).replaceWith(n.children())
        });
        switch (aa) {
            case"html":
                L.html(I.content);
                o();
                break;
            case"inline":
                if (C(ab).parent().is("#fancybox-content") === true) {
                    P = false;
                    return
                }
                C('<div class="fancybox-inline-tmp" />').hide().insertBefore(C(ab)).bind("fancybox-cleanup",function () {
                    C(this).replaceWith(n.children())
                }).bind("fancybox-cancel", function () {
                    C(this).replaceWith(L.children())
                });
                C(ab).appendTo(L);
                o();
                break;
            case"image":
                P = false;
                C.fancybox.showActivity();
                p = new Image();
                p.onerror = function () {
                    z()
                };
                p.onload = function () {
                    P = true;
                    p.onerror = p.onload = null;
                    G()
                };
                p.src = Y;
                break;
            case"swf":
                I.scrolling = "no";
                ac = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="' + I.width + '" height="' + I.height + '"><param name="movie" value="' + Y + '"></param>';
                X = "";
                C.each(I.swf, function (ad, ae) {
                    ac += '<param name="' + ad + '" value="' + ae + '"></param>';
                    X += " " + ad + '="' + ae + '"'
                });
                ac += '<embed src="' + Y + '" type="application/x-shockwave-flash" width="' + I.width + '" height="' + I.height + '"' + X + "></embed></object>";
                L.html(ac);
                o();
                break;
            case"ajax":
                P = false;
                C.fancybox.showActivity();
                I.ajax.win = I.ajax.success;
                f = C.ajax(C.extend({}, I.ajax, {url:Y, data:I.ajax.data || {}, error:function (ad, af, ae) {
                    if (ad.status > 0) {
                        z()
                    }
                }, success:function (ae, ag, ad) {
                    var af = typeof ad == "object" ? ad : f;
                    if (af.status == 200) {
                        if (typeof I.ajax.win == "function") {
                            Z = I.ajax.win(Y, ae, ag, ad);
                            if (Z === false) {
                                U.hide();
                                return
                            } else {
                                if (typeof Z == "string" || typeof Z == "object") {
                                    ae = Z
                                }
                            }
                        }
                        L.html(ae);
                        o()
                    }
                }}));
                break;
            case"iframe":
                F();
                break
        }
    }, o = function () {
        var X = I.width, Y = I.height;
        if (X.toString().indexOf("%") > -1) {
            X = parseInt((C(window).width() - (I.margin * 2)) * parseFloat(X) / 100, 10) + "px"
        } else {
            X = X == "auto" ? "auto" : X + "px"
        }
        if (Y.toString().indexOf("%") > -1) {
            Y = parseInt((C(window).height() - (I.margin * 2)) * parseFloat(Y) / 100, 10) + "px"
        } else {
            Y = Y == "auto" ? "auto" : Y + "px"
        }
        L.wrapInner('<div style="width:' + X + ";height:" + Y + ";overflow: " + (I.scrolling == "auto" ? "auto" : (I.scrolling == "yes" ? "scroll" : "hidden")) + ';position:relative;"></div>');
        I.width = L.width();
        I.height = L.height();
        F()
    }, G = function () {
        I.width = p.width;
        I.height = p.height;
        C("<img />").attr({id:"fancybox-img", src:p.src, alt:C(k[E]).attr("fx_name")}).hide().appendTo(L);
        F()
    }, F = function () {
        var aa, Z;
        U.hide();
        if (M.is(":visible") && false === H.onCleanup(A, e, H)) {
            C.event.trigger("fancybox-cancel");
            P = false;
            return
        }
        P = true;
        C(n.add(Q)).unbind();
        C(window).unbind("resize.fb scroll.fb.htm"/*tpa=http://192.168.119.101:8888/resize.fb scroll.fb*/);
        C(document).unbind("keydown.fb.htm"/*tpa=http://192.168.119.101:8888/keydown.fb*/);
        A = k;
        e = E;
        H = I;
        H.imgWrap = C(k[E]);
        var Y = H.imgWrap.find("img").attr("class");
        if (Y == "rotate_90") {
            H.isRotate = true
        } else {
            if (Y == "rotate_180") {
                H.isRotate = false
            } else {
                if (Y == "rotate_270") {
                    H.isRotate = true
                } else {
                    H.isRotate = false
                }
            }
        }
        H.rotateCls = Y;
        if (H.overlayShow) {
            Q.css({"background-color":H.overlayColor, opacity:H.overlayOpacity, cursor:H.hideOnOverlayClick ? "pointer" : "auto"});
            if (!Q.is(":visible")) {
                if (T) {
                    C("select:not(#fancybox-tmp select)").filter(function () {
                        return this.style.visibility !== "hidden"
                    }).css({visibility:"hidden"}).one("fancybox-cleanup", function () {
                        this.style.visibility = "inherit"
                    })
                }
                Q.show()
            }
        } else {
            Q.hide()
        }
        b = S();
        var X = A.length;
        if (H.totalItems) {
            X = H.totalItems
        }
        m.html((e + 1) + " / " + X);
        h.html(H.imgWrap.attr("fx_name"));
        q.html(H.imgWrap.attr("fx_size"));
        r.html(H.imgWrap.attr("fx_pix"));
        W.html(H.imgWrap.attr("fx_date"));
        if (M.is(":visible")) {
            aa = M.position(), a = {top:aa.top, left:aa.left, width:M.width(), height:M.height()};
            Z = (a.width == b.width && a.height == b.height);
            n.fadeTo(H.changeFade, 0.3, function () {
                var ab = function () {
                    n.html(L.contents()).fadeTo(H.changeFade, 1, x)
                };
                C.event.trigger("fancybox-change");
                n.empty().removeAttr("filter").css({"border-width":H.padding, width:b.width - H.padding * 2, height:I.autoDimensions ? "auto" : b.height - H.padding * 2});
                if (Z) {
                    ab()
                } else {
                    v.prop = 0;
                    C(v).animate({prop:1}, {duration:H.changeSpeed, easing:H.easingChange, step:V, complete:ab})
                }
            });
            return
        }
        M.removeAttr("style");
        n.css("border-width", H.padding);
        if (H.transitionIn == "elastic") {
            a = J();
            n.html(L.contents());
            M.show();
            if (H.opacity) {
                b.opacity = 0
            }
            v.prop = 0;
            C(v).animate({prop:1}, {duration:H.speedIn, easing:H.easingIn, step:V, complete:x});
            return
        }
        if (H.isRotate == true) {
            M.hide()
        }
        n.css({width:b.width - H.padding * 2, height:I.autoDimensions ? "auto" : b.height - H.padding * 2}).html(L.contents());
        M.css(b).fadeIn(H.transitionIn == "none" ? 0 : H.speedIn, x)
    }, g = function () {
        if (H.enableEscapeButton || H.enableKeyboardNav) {
            C(document).bind("keydown.fb.htm"/*tpa=http://192.168.119.101:8888/keydown.fb*/, function (X) {
                if (X.keyCode == 27 && H.enableEscapeButton) {
                    X.preventDefault();
                    C.fancybox.close()
                } else {
                    if ((X.keyCode == 37 || X.keyCode == 39) && H.enableKeyboardNav && X.target.tagName !== "INPUT" && X.target.tagName !== "TEXTAREA" && X.target.tagName !== "SELECT") {
                        X.preventDefault();
                        C.fancybox[X.keyCode == 37 ? "prev" : "next"]()
                    }
                }
            })
        }
        if (!H.showNavArrows) {
            O.hide();
            B.hide();
            return
        }
        if ((H.cyclic && A.length > 1) || e !== 0) {
            O.show()
        }
        if ((H.cyclic && A.length > 1) || e != (A.length - 1)) {
            B.show()
        }
    }, x = function () {
        if (!C.support.opacity) {
            n.get(0).style.removeAttribute("filter");
            M.get(0).style.removeAttribute("filter")
        }
        if (I.autoDimensions) {
            n.css("height", "auto")
        }
        M.css("height", "auto");
        D.show();
        g();
        if (H.hideOnContentClick) {
            n.bind("click", C.fancybox.close)
        }
        if (H.hideOnOverlayClick) {
            Q.bind("click", C.fancybox.close)
        }
        C(window).bind("resize.fb.htm"/*tpa=http://192.168.119.101:8888/resize.fb*/, C.fancybox.resize);
        if (H.centerOnScroll) {
            C(window).bind("scroll.fb.htm"/*tpa=http://192.168.119.101:8888/scroll.fb*/, C.fancybox.center)
        }
        if (H.type == "iframe") {
            C('<iframe id="fancybox-frame" name="fancybox-frame' + new Date().getTime() + '" frameborder="0" hspace="0" ' + (C.browser.msie ? 'allowtransparency="true""' : "") + ' scrolling="' + I.scrolling + '" src="' + H.href + '"></iframe>').appendTo(n)
        }
        P = false;
        C.fancybox.center();
        H.onComplete(A, e, H);
        M.find("img").attr("class", H.rotateCls).show();
        if (H.isRotate == true) {
            C.fancybox.resize(true)
        }
        M.show();
        K()
    }, K = function () {
        var X, Y;
        if ((A.length - 1) > e) {
            X = A[e + 1].href;
            if (typeof X !== "undefined" && X.match(j)) {
                Y = new Image();
                Y.src = X
            }
        }
        if (e > 0) {
            X = A[e - 1].href;
            if (typeof X !== "undefined" && X.match(j)) {
                Y = new Image();
                Y.src = X
            }
        }
    }, V = function (Y) {
        var X = {width:parseInt(a.width + (b.width - a.width) * Y, 10), height:parseInt(a.height + (b.height - a.height) * Y, 10), top:parseInt(a.top + (b.top - a.top) * Y, 10), left:parseInt(a.left + (b.left - a.left) * Y, 10)};
        if (typeof b.opacity !== "undefined") {
            X.opacity = Y < 0.5 ? 0.5 : Y
        }
        M.css(X);
        n.css({width:X.width - H.padding * 2, height:X.height - H.padding * 2})
    }, w = function () {
        return[C(window).width() - (H.margin * 2), C(window).height() - (H.margin * 2) - 70, C(document).scrollLeft() + H.margin, C(document).scrollTop() + H.margin]
    }, S = function () {
        var X = w(), ab = {}, Y = H.autoScale, Z = H.padding * 2, aa;
        if (H.width.toString().indexOf("%") > -1) {
            ab.width = parseInt((X[0] * parseFloat(H.width)) / 100, 10)
        } else {
            if (H.isRotate) {
                ab.width = H.height + Z
            } else {
                ab.width = H.width + Z
            }
        }
        if (H.height.toString().indexOf("%") > -1) {
            ab.height = parseInt((X[1] * parseFloat(H.height)) / 100, 10)
        } else {
            if (H.isRotate) {
                ab.height = H.width + Z
            } else {
                ab.height = H.height + Z
            }
        }
        if (Y && (ab.width > X[0] || ab.height > X[1])) {
            if (I.type == "image" || I.type == "swf") {
                aa = (H.width) / (H.height);
                if (H.isRotate) {
                    aa = (H.height) / (H.width)
                }
                if ((ab.width) > X[0]) {
                    ab.width = X[0];
                    ab.height = parseInt(((ab.width - Z) / aa) + Z, 10)
                }
                if ((ab.height) > X[1]) {
                    ab.height = X[1];
                    ab.width = parseInt(((ab.height - Z) * aa) + Z, 10)
                }
            } else {
                ab.width = Math.min(ab.width, X[0]);
                ab.height = Math.min(ab.height, X[1])
            }
        }
        ab.top = parseInt(Math.max(X[3] - 20, X[3] + ((X[1] - ab.height - 40) * 0.5)), 10);
        ab.left = parseInt(Math.max(X[2] - 20, X[2] + ((X[0] - ab.width - 40) * 0.5)), 10);
        return ab
    }, t = function (X) {
        var Y = X.offset();
        Y.top += parseInt(X.css("paddingTop"), 10) || 0;
        Y.left += parseInt(X.css("paddingLeft"), 10) || 0;
        Y.top += parseInt(X.css("border-top-width"), 10) || 0;
        Y.left += parseInt(X.css("border-left-width"), 10) || 0;
        Y.width = X.width();
        Y.height = X.height();
        return Y
    }, J = function () {
        var aa = I.orig ? C(I.orig) : false, Z = {}, Y, X;
        if (aa && aa.length) {
            Y = t(aa);
            Z = {width:Y.width + (H.padding * 2), height:Y.height + (H.padding * 2), top:Y.top - H.padding - 20, left:Y.left - H.padding - 20}
        } else {
            X = w();
            Z = {width:H.padding * 2, height:H.padding * 2, top:parseInt(X[3] + X[1] * 0.5, 10), left:parseInt(X[2] + X[0] * 0.5, 10)}
        }
        return Z
    };
    C.fn.fancybox = function (X) {
        if (!C(this).length) {
            return this
        }
        C(this).data("fancybox", C.extend({}, X, (C.metadata ? C(this).metadata() : {}))).unbind("dblclick").bind("dblclick", function (Z) {
            Z.preventDefault();
            if (P) {
                return
            }
            P = true;
            C(this).blur();
            k = [];
            E = 0;
            var Y = C(this).attr("rel") || "";
            if (!Y || Y == "" || Y === "nofollow") {
                k.push(this)
            } else {
                if (X.module == "filemanage") {
                    k = C("#filemanage a[rel=" + Y + "],#filemanage div[rel=" + Y + "]")
                } else {
                    if (X.module == "photo") {
                        k = C("#photo a[rel=" + Y + "],#photo div[rel=" + Y + "]")
                    }
                }
                E = k.index(this)
            }
            y();
            return
        });
        if (X.showBottomOprationPanel && R.find(".fancybox_item_command").length == 0) {
            R.append('<div class="fancybox_item_command"> 		                                 <a class="fx_facebook" style="display:none;" cmd="facebook" title="' + Airdroid.UsedLang.Common._menu_title_facebook + '"></a>		                                 <a class="fx_twitter" style="display:none;" cmd="twitter" title="' + Airdroid.UsedLang.Common._menu_title_twitter + '"></a>		                                 <a class="fx_setting" cmd="setting_bg" title="' + Airdroid.UsedLang.Common._menu_title_setting_bg + '"></a>		                                 <a class="fx_download" cmd="download" title="' + Airdroid.UsedLang.Common._menu_title_download + '"></a>                                         <a class="fx_prev" cmd="prev" title="' + Airdroid.UsedLang.Common._menu_title_prev + '"></a>                                          <a class="fx_next" cmd="next" title="' + Airdroid.UsedLang.Common._menu_title_next + '"></a>                                          <a class="fx_rotate_left" cmd="rotate_left" title="' + Airdroid.UsedLang.Common._menu_title_rotate_left + '"></a>                                         <a class="fx_rotate_right" cmd="rotate_right" title="' + Airdroid.UsedLang.Common._menu_title_rotate_right + '"></a>                                         <a class="fx_delete" cmd="delete" title="' + Airdroid.UsedLang.Common._menu_title_delete + '"></a>                                </div>').click(function (Y) {
                if (Y.stopPropagation) {
                    Y.stopPropagation()
                } else {
                    Y.cancelBubble = true
                }
            });
            R.find("a").click(function (ab) {
                var aa = C(ab.currentTarget).attr("cmd");
                if (aa == "facebook") {
                } else {
                    if (aa == "twitter") {
                    } else {
                        if (aa == "setting_bg") {
                            var ac = {};
                            if (H.module == "filemanage") {
                                ac.path = H.imgWrap.attr("absrc")
                            } else {
                                if (H.module == "photo") {
                                    ac.id = H.imgWrap.attr("photoid")
                                }
                            }
                            showConfirmBox(Airdroid.UsedLang.Photo._confirm_set_wallpaper, function () {
                                Airdroid.Media.severHandler(ac, C.loadingHandler("body"), function (ad) {
                                    if (ad.result == "1") {
                                        C.loadingEndHandler();
                                        showDelayMask(Airdroid.UsedLang.Photo._set_wallpaper_ok, C("body"), null, null, null, C("body"))
                                    }
                                }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/setwallpaper/")
                            })
                        } else {
                            if (aa == "download") {
                                var Z = "";
                                if (H.module == "filemanage") {
                                    Z = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/export?saveas=1&pathfile=" + encodeURIComponent(H.imgWrap.attr("absrc"))
                                } else {
                                    if (H.module == "photo") {
                                        Z = H.imgWrap.attr("href") + "?type=1"
                                    }
                                }
                                C("#downloadFrame").attr("src", Z)
                            } else {
                                if (aa == "prev") {
                                    C.fancybox.prev()
                                } else {
                                    if (aa == "next") {
                                        C.fancybox.next()
                                    } else {
                                        if (aa == "rotate_left") {
                                            C.fancybox.rotate("left", true)
                                        } else {
                                            if (aa == "rotate_right") {
                                                C.fancybox.rotate("right", true)
                                            } else {
                                                if (aa == "delete") {
                                                    var Y = function () {
                                                        if (A && A.length > 1) {
                                                            if (H.totalItems) {
                                                                H.totalItems -= 1
                                                            }
                                                            if (e == 0) {
                                                                A = _.without(A, A[e]);
                                                                C.fancybox.pos(e)
                                                            } else {
                                                                A = _.without(A, A[e]);
                                                                C.fancybox.pos(e - 1)
                                                            }
                                                        } else {
                                                            C.fancybox.close()
                                                        }
                                                        H.imgWrap.remove()
                                                    };
                                                    if (H.module == "filemanage") {
                                                        C.doDelete([
                                                            {abSrc:H.imgWrap.attr("absrc"), extName:H.imgWrap.attr("extName"), gridItem:H.imgWrap}
                                                        ], "body", Y)
                                                    } else {
                                                        if (H.module == "photo") {
                                                            showConfirmBox(Airdroid.UsedLang.Photo._confirm_delete, function () {
                                                                Airdroid.Media.severHandler({}, C.loadingHandler("body"), function (ad) {
                                                                    C.loadingEndHandler();
                                                                    if (ad.result == "1") {
                                                                        Y()
                                                                    } else {
                                                                        showMsgBox(Airdroid.UsedLang.Photo._fail_delete)
                                                                    }
                                                                }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/del/" + H.imgWrap.attr("photoid"))
                                                            })
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            })
        }
        return this
    };
    C.fancybox = function (aa) {
        var Z;
        if (P) {
            return
        }
        P = true;
        Z = typeof arguments[1] !== "undefined" ? arguments[1] : {};
        k = [];
        E = parseInt(Z.index, 10) || 0;
        if (C.isArray(aa)) {
            for (var Y = 0, X = aa.length; Y < X; Y++) {
                if (typeof aa[Y] == "object") {
                    C(aa[Y]).data("fancybox", C.extend({}, Z, aa[Y]))
                } else {
                    aa[Y] = C({}).data("fancybox", C.extend({content:aa[Y]}, Z))
                }
            }
            k = jQuery.merge(k, aa)
        } else {
            if (typeof aa == "object") {
                C(aa).data("fancybox", C.extend({}, Z, aa))
            } else {
                aa = C({}).data("fancybox", C.extend({content:aa}, Z))
            }
            k.push(aa)
        }
        if (E > k.length || E < 0) {
            E = 0
        }
        y()
    };
    C.fancybox.rotate = function (ae, ab) {
        var ac = n.find("img");
        var aa = ac.attr("class");
        if (ae == "right") {
            if (aa == "rotate_90") {
                aa = "rotate_180"
            } else {
                if (aa == "rotate_180") {
                    aa = "rotate_270"
                } else {
                    if (aa == "rotate_270") {
                        aa = ""
                    } else {
                        aa = "rotate_90"
                    }
                }
            }
        } else {
            if (aa == "rotate_270") {
                aa = "rotate_180"
            } else {
                if (aa == "rotate_180") {
                    aa = "rotate_90"
                } else {
                    if (aa == "rotate_90") {
                        aa = ""
                    } else {
                        aa = "rotate_270"
                    }
                }
            }
        }
        var Y = 0, Z = 0;
        var X = "";
        if (aa == "rotate_90") {
            Y = 1;
            Z = 90;
            H.isRotate = true
        } else {
            if (aa == "rotate_180") {
                Y = 2;
                Z = 180;
                H.isRotate = false
            } else {
                if (aa == "rotate_270") {
                    Y = 3;
                    Z = 270;
                    H.isRotate = true
                } else {
                    H.isRotate = false
                }
            }
        }
        var ad = {};
        if (H.module == "filemanage") {
            ad.orient = Y;
            ad.path = H.imgWrap.attr("absrc");
            X = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/set_orientation/"
        } else {
            if (H.module == "photo") {
                ad.orient = Y;
                X = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/set_orientation/" + H.imgWrap.attr("photoid")
            }
        }
        Airdroid.Media.severHandler(ad, C.loadingHandler("body"), function (af) {
            C.loadingEndHandler();
            if (af.result == "1") {
                H.imgWrap.find("img").attr("class", aa);
                ac.attr("class", aa);
                C.fancybox.resize(true)
            }
        }, X)
    };
    C.fancybox.showActivity = function () {
        U.show()
    };
    C.fancybox.hideActivity = function () {
        U.hide()
    };
    C.fancybox.next = function () {
        if ((e >= A.length - 2) && A.length < H.totalItems) {
            C.publish("/event/media/photo/startLoadingNextPageDirImages", [A, k])
        }
        var X = e + 1;
        if (X == A.length) {
            if (H.cyclic) {
                X = 0
            } else {
                return
            }
        }
        return C.fancybox.pos(X)
    };
    C.fancybox.prev = function () {
        return C.fancybox.pos(e - 1)
    };
    C.fancybox.pos = function (X) {
        if (P) {
            return
        }
        X = parseInt(X);
        k = A;
        if (X > -1 && X < A.length) {
            E = X;
            y()
        } else {
            if (H.cyclic && A.length > 1) {
                E = X >= A.length ? 0 : A.length - 1;
                y()
            }
        }
        return
    };
    C.fancybox.cancel = function () {
        if (P) {
            return
        }
        P = true;
        C.event.trigger("fancybox-cancel");
        u();
        I.onCancel(k, E, I);
        P = false
    };
    C.fancybox.close = function () {
        if (P || M.is(":hidden")) {
            return
        }
        P = true;
        if (H && false === H.onCleanup(A, e, H)) {
            P = false;
            return
        }
        u();
        C(n.add(Q)).unbind();
        C(window).unbind("resize.fb scroll.fb.htm"/*tpa=http://192.168.119.101:8888/resize.fb scroll.fb*/);
        C(document).unbind("keydown.fb.htm"/*tpa=http://192.168.119.101:8888/keydown.fb*/);
        n.find("iframe").attr("src", T && /^https/i.test(window.location.href || "") ? "javascript:void(false)" : "about:blank");
        M.stop();
        function X() {
            Q.fadeOut("fast");
            D.hide();
            M.hide();
            C.event.trigger("fancybox-cleanup");
            n.empty();
            H.onClosed(A, e, H);
            A = I = [];
            e = E = 0;
            H = I = {};
            P = false
        }

        if (H.transitionOut == "elastic") {
            a = J();
            var Y = M.position();
            b = {top:Y.top, left:Y.left, width:M.width(), height:M.height()};
            if (H.opacity) {
                b.opacity = 1
            }
            D.hide();
            v.prop = 1;
            C(v).animate({prop:0}, {duration:H.speedOut, easing:H.easingOut, step:V, complete:X})
        } else {
            M.fadeOut(H.transitionOut == "none" ? 0 : H.speedOut, X)
        }
    };
    C.fancybox.resize = function (Z) {
        b = S();
        M.css(b);
        var ac = M.find("img");
        n.css({width:b.width - H.padding * 2, height:I.autoDimensions ? "auto" : b.height - H.padding * 2});
        var X = navigator.userAgent.toLowerCase();
        var Y = Math.abs(b.height - b.width) / 2;
        if (H.isRotate == true) {
            ac.css("width", b.height - H.padding * 2 + "px");
            ac.css("height", b.width - H.padding * 2 + "px")
        } else {
            ac.css("width", b.width - H.padding * 2 + "px");
            ac.css("height", b.height - H.padding * 2 + "px")
        }
        var ad = ac.position();
        if (H.isRotate == true) {
            if (Z == true) {
                if (X.indexOf("firefox") != -1) {
                    ac.css("top", Y + "px");
                    ac.css("left", -Y + "px")
                } else {
                    ac.css("top", -ad.top + "px");
                    ac.css("left", -ad.left + "px")
                }
            } else {
                var ab = parseInt(ac.css("left")), aa = parseInt(ac.css("top"));
                ac.css("top", aa - ad.top + "px");
                ac.css("left", ab - ad.left + "px")
            }
        } else {
            ac.css("top", "0px");
            ac.css("left", "0px")
        }
        C.fancybox.center(true)
    };
    C.fancybox.center = function () {
        var X, Y;
        if (P) {
            return
        }
        Y = arguments[0] === true ? 1 : 0;
        X = w();
        if (!Y && (M.width() > X[0] || M.height() > X[1])) {
            return
        }
        M.stop().animate({top:parseInt(Math.max(X[3] - 20, X[3] + ((X[1] - n.height() - 40) * 0.5) - H.padding)), left:parseInt(Math.max(X[2] - 20, X[2] + ((X[0] - n.width() - 40) * 0.5) - H.padding))}, typeof arguments[0] == "number" ? arguments[0] : 200)
    };
    C.fancybox.init = function () {
        if (C("#fancybox-wrap").length) {
            return
        }
        C("body").append(L = C('<div id="fancybox-tmp"></div>'), U = C('<div id="fancybox-loading"><img alt="" src="ui/theme/default/images/loading.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/loading.gif*//></div>'), Q = C('<div id="fancybox-overlay"></div>'), M = C('<div id="fancybox-wrap"></div>'));
        Q.append(D = C('<div id="fancybox-title"></div>'), R = C('<div id="bottom-opration-panel"></div>'));
        D.append(m = C('<span class="fx-imgcount"></span>'), h = C('<span class="fx-name"></span>'), q = C('<span class="fx-size"></span>'), r = C('<span class="fx-pix"></span>'), W = C('<span class="fx-date"></span>')).click(function (X) {
            if (X.stopPropagation) {
                X.stopPropagation()
            } else {
                X.cancelBubble = true
            }
        });
        c = C('<div id="fancybox-outer"></div>').append('<div class="fancybox-bg" id="fancybox-bg-n"></div><div class="fancybox-bg" id="fancybox-bg-ne"></div><div class="fancybox-bg" id="fancybox-bg-e"></div><div class="fancybox-bg" id="fancybox-bg-se"></div><div class="fancybox-bg" id="fancybox-bg-s"></div><div class="fancybox-bg" id="fancybox-bg-sw"></div><div class="fancybox-bg" id="fancybox-bg-w"></div><div class="fancybox-bg" id="fancybox-bg-nw"></div>').appendTo(M);
        c.append(n = C('<div id="fancybox-content"></div>'), O = C('<a href="javascript:;" id="fancybox-left"><span class="fancy-ico" id="fancybox-left-ico"></span></a>'), B = C('<a href="javascript:;" id="fancybox-right"><span class="fancy-ico" id="fancybox-right-ico"></span></a>'));
        U.click(C.fancybox.cancel);
        O.click(function (X) {
            X.preventDefault();
            C.fancybox.prev()
        });
        B.click(function (X) {
            X.preventDefault();
            C.fancybox.next()
        });
        if (C.fn.mousewheel) {
            M.bind("mousewheel.fb.htm"/*tpa=http://192.168.119.101:8888/mousewheel.fb*/, function (X, Y) {
                if (P) {
                    X.preventDefault()
                } else {
                    if (C(X.target).get(0).clientHeight == 0 || C(X.target).get(0).scrollHeight === C(X.target).get(0).clientHeight) {
                        X.preventDefault();
                        C.fancybox[Y > 0 ? "prev" : "next"]()
                    }
                }
            })
        }
        if (!C.support.opacity) {
            M.addClass("fancybox-ie")
        }
        if (T) {
            U.addClass("fancybox-ie6");
            M.addClass("fancybox-ie6");
            C('<iframe id="fancybox-hide-sel-frame" src="' + (/^https/i.test(window.location.href || "") ? "javascript:void(false)" : "about:blank") + '" scrolling="no" border="0" frameborder="0" tabindex="-1"></iframe>').prependTo(c)
        }
    };
    C.fn.fancybox.defaults = {padding:10, margin:40, opacity:false, modal:false, cyclic:true, scrolling:"auto", width:560, height:340, isRotate:false, autoScale:true, autoDimensions:true, centerOnScroll:false, ajax:{}, swf:{wmode:"transparent"}, hideOnOverlayClick:true, hideOnContentClick:false, overlayShow:true, overlayOpacity:0.9, overlayColor:"#000", transitionIn:"fade", transitionOut:"fade", speedIn:300, speedOut:300, changeSpeed:300, changeFade:"fast", easingIn:"swing", easingOut:"swing", showNavArrows:true, enableEscapeButton:true, enableKeyboardNav:true, showBottomOprationPanel:true, onStart:function () {
    }, onCancel:function () {
    }, onComplete:function () {
    }, onCleanup:function () {
    }, onClosed:function () {
    }, onError:function () {
    }};
    C(document).ready(function () {
        C.fancybox.init()
    })
})(jQuery);
(function (b) {
    var a = [];
    b.loadImages = function (h, m) {
        h instanceof Array || (h = [h]);
        for (var l = h.length, k = 0, j = l; j--;) {
            var c = document.createElement("img");
            c.onload = function () {
                k++;
                k >= l && b.isFunction(m) && m()
            };
            c.src = h[j];
            a.push(c)
        }
    }
})(jQuery);
(function (g) {
    var c = g.browser.msie && parseInt(g.browser.version) === 6 && typeof window.XMLHttpRequest !== "object", a = g.browser.msie && parseInt(g.browser.version) === 7, b = null, e = [];
    g.modal = function (h, f) {
        return g.modal.impl.init(h, f)
    };
    g.modal.close = function () {
        g.modal.impl.close()
    };
    g.modal.focus = function (f) {
        g.modal.impl.focus(f)
    };
    g.modal.setContainerDimensions = function () {
        g.modal.impl.setContainerDimensions()
    };
    g.modal.setPosition = function () {
        g.modal.impl.setPosition()
    };
    g.modal.update = function (h, f) {
        g.modal.impl.update(h, f)
    };
    g.fn.modal = function (f) {
        return g.modal.impl.init(this, f)
    };
    g.modal.defaults = {appendTo:"body", focus:true, opacity:50, overlayId:"simplemodal-overlay", overlayCss:{}, containerId:"simplemodal-container", containerCss:{}, dataId:"simplemodal-data", dataCss:{}, minHeight:null, minWidth:null, maxHeight:null, maxWidth:null, autoResize:false, autoPosition:true, zIndex:1000, close:true, closeHTML:'<a class="modalCloseImg" title="Close"></a>', closeClass:"simplemodal-close", escClose:true, overlayClose:false, position:null, persist:false, modal:true, onOpen:null, onShow:null, onClose:null};
    g.modal.impl = {d:{}, init:function (h, f) {
        var j = this;
        if (j.d.data) {
            return false
        }
        b = g.browser.msie && !g.boxModel;
        j.o = g.extend({}, g.modal.defaults, f);
        j.zIndex = j.o.zIndex;
        j.occb = false;
        if (typeof h === "object") {
            h = h instanceof jQuery ? h : g(h);
            j.d.placeholder = false;
            if (h.parent().parent().size() > 0) {
                h.before(g("<span></span>").attr("id", "simplemodal-placeholder").css({display:"none"}));
                j.d.placeholder = true;
                j.display = h.css("display");
                if (!j.o.persist) {
                    j.d.orig = h.clone(true)
                }
            }
        } else {
            if (typeof h === "string" || typeof h === "number") {
                h = g("<div></div>").html(h)
            } else {
                alert("SimpleModal Error: Unsupported data type: " + typeof h);
                return j
            }
        }
        j.create(h);
        j.open();
        g.isFunction(j.o.onShow) && j.o.onShow.apply(j, [j.d]);
        return j
    }, create:function (h) {
        var f = this;
        e = f.getDimensions();
        if (f.o.modal && c) {
            f.d.iframe = g('<iframe src="javascript:false;"></iframe>').css(g.extend(f.o.iframeCss, {display:"none", opacity:0, position:"fixed", height:e[0], width:e[1], zIndex:f.o.zIndex, top:0, left:0})).appendTo(f.o.appendTo)
        }
        f.d.overlay = g("<div></div>").attr("id", f.o.overlayId).addClass("simplemodal-overlay").css(g.extend(f.o.overlayCss, {display:"none", opacity:f.o.opacity / 100, height:f.o.modal ? e[0] : 0, width:f.o.modal ? e[1] : 0, position:"fixed", left:0, top:0, zIndex:f.o.zIndex + 1})).appendTo(f.o.appendTo);
        f.d.container = g("<div></div>").attr("id", f.o.containerId).addClass("simplemodal-container").css(g.extend(f.o.containerCss, {display:"none", position:"fixed", zIndex:f.o.zIndex + 2})).append(f.o.close && f.o.closeHTML ? g(f.o.closeHTML).addClass(f.o.closeClass) : "").appendTo(f.o.appendTo);
        f.d.wrap = g("<div></div>").attr("tabIndex", -1).addClass("simplemodal-wrap").css({height:"100%", outline:0, width:"100%"}).appendTo(f.d.container);
        f.d.data = h.attr("id", h.attr("id") || f.o.dataId).addClass("simplemodal-data").css(g.extend(f.o.dataCss, {display:"none"})).appendTo("body");
        f.setContainerDimensions();
        f.d.data.appendTo(f.d.wrap);
        if (c || b) {
            f.fixIE()
        }
    }, bindEvents:function () {
        var f = this;
        g("." + f.o.closeClass).bind("click.simplemodal", function (h) {
            h.preventDefault();
            f.close()
        });
        f.o.modal && f.o.close && f.o.overlayClose && f.d.overlay.bind("click.simplemodal", function (h) {
            h.preventDefault();
            f.close()
        });
        g(document).bind("keydown.simplemodal", function (h) {
            if (f.o.modal && h.keyCode === 9) {
                f.watchTab(h)
            } else {
                if (f.o.close && f.o.escClose && h.keyCode === 27) {
                    h.preventDefault();
                    f.close()
                }
            }
        });
        g(window).bind("resize.simplemodal", function () {
            e = f.getDimensions();
            f.o.autoResize ? f.setContainerDimensions() : f.o.autoPosition && f.setPosition();
            if (c || b) {
                f.fixIE()
            } else {
                if (f.o.modal) {
                    f.d.iframe && f.d.iframe.css({height:e[0], width:e[1]});
                    f.d.overlay.css({height:e[0], width:e[1]})
                }
            }
        })
    }, unbindEvents:function () {
        g("." + this.o.closeClass).unbind("click.simplemodal");
        g(document).unbind("keydown.simplemodal");
        g(window).unbind("resize.simplemodal");
        this.d.overlay.unbind("click.simplemodal")
    }, fixIE:function () {
        var h = this, f = h.o.position;
        g.each([h.d.iframe || null, !h.o.modal ? null : h.d.overlay, h.d.container], function (m, j) {
            if (j) {
                var k = j[0].style;
                k.position = "absolute";
                if (m < 2) {
                    k.removeExpression("height");
                    k.removeExpression("width");
                    k.setExpression("height", 'document.body.scrollHeight > document.body.clientHeight ? document.body.scrollHeight : document.body.clientHeight + "px"');
                    k.setExpression("width", 'document.body.scrollWidth > document.body.clientWidth ? document.body.scrollWidth : document.body.clientWidth + "px"')
                } else {
                    var l;
                    if (f && f.constructor === Array) {
                        m = f[0] ? typeof f[0] === "number" ? f[0].toString() : f[0].replace(/px/, "") : j.css("top").replace(/px/, "");
                        m = m.indexOf("%") === -1 ? m + ' + (t = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"' : parseInt(m.replace(/%/, "")) + ' * ((document.documentElement.clientHeight || document.body.clientHeight) / 100) + (t = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"';
                        if (f[1]) {
                            l = typeof f[1] === "number" ? f[1].toString() : f[1].replace(/px/, "");
                            l = l.indexOf("%") === -1 ? l + ' + (t = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft) + "px"' : parseInt(l.replace(/%/, "")) + ' * ((document.documentElement.clientWidth || document.body.clientWidth) / 100) + (t = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft) + "px"'
                        }
                    } else {
                        m = '(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (t = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"';
                        l = '(document.documentElement.clientWidth || document.body.clientWidth) / 2 - (this.offsetWidth / 2) + (t = document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft) + "px"'
                    }
                    k.removeExpression("top");
                    k.removeExpression("left");
                    k.setExpression("top", m);
                    k.setExpression("left", l)
                }
            }
        })
    }, focus:function (h) {
        var f = this;
        h = h && g.inArray(h, ["first", "last"]) !== -1 ? h : "first";
        var j = g(":input:enabled:visible:" + h, f.d.wrap);
        setTimeout(function () {
            j.length > 0 ? j.focus() : f.d.wrap.focus()
        }, 10)
    }, getDimensions:function () {
        var f = g(window);
        return[g.browser.opera && g.browser.version > "9.5" && g.fn.jquery < "1.3" || g.browser.opera && g.browser.version < "9.5" && g.fn.jquery > "1.2.6" ? f[0].innerHeight : f.height(), f.width()]
    }, getVal:function (h, f) {
        return h ? typeof h === "number" ? h : h === "auto" ? 0 : h.indexOf("%") > 0 ? parseInt(h.replace(/%/, "")) / 100 * (f === "h" ? e[0] : e[1]) : parseInt(h.replace(/px/, "")) : null
    }, update:function (h, f) {
        var j = this;
        if (!j.d.data) {
            return false
        }
        j.d.origHeight = j.getVal(h, "h");
        j.d.origWidth = j.getVal(f, "w");
        j.d.data.hide();
        h && j.d.container.css("height", h);
        f && j.d.container.css("width", f);
        j.setContainerDimensions();
        j.d.data.show();
        j.o.focus && j.focus();
        j.unbindEvents();
        j.bindEvents()
    }, setContainerDimensions:function () {
        var k = this, f = c || a, q = k.d.origHeight ? k.d.origHeight : g.browser.opera ? k.d.container.height() : k.getVal(f ? k.d.container[0].currentStyle.height : k.d.container.css("height"), "h");
        f = k.d.origWidth ? k.d.origWidth : g.browser.opera ? k.d.container.width() : k.getVal(f ? k.d.container[0].currentStyle.width : k.d.container.css("width"), "w");
        var n = k.d.data.outerHeight(true), o = k.d.data.outerWidth(true);
        k.d.origHeight = k.d.origHeight || q;
        k.d.origWidth = k.d.origWidth || f;
        var p = k.o.maxHeight ? k.getVal(k.o.maxHeight, "h") : null, m = k.o.maxWidth ? k.getVal(k.o.maxWidth, "w") : null;
        p = p && p < e[0] ? p : e[0];
        m = m && m < e[1] ? m : e[1];
        var l = k.o.minHeight ? k.getVal(k.o.minHeight, "h") : "auto";
        q = q ? k.o.autoResize && q > p ? p : q < l ? l : q : n ? n > p ? p : k.o.minHeight && l !== "auto" && n < l ? l : n : l;
        p = k.o.minWidth ? k.getVal(k.o.minWidth, "w") : "auto";
        f = f ? k.o.autoResize && f > m ? m : f < p ? p : f : o ? o > m ? m : k.o.minWidth && p !== "auto" && o < p ? p : o : p;
        k.d.container.css({height:q, width:f});
        k.d.wrap.css({overflow:n > q || o > f ? "auto" : "visible"});
        k.o.autoPosition && k.setPosition()
    }, setPosition:function () {
        var h = this, f, j;
        f = e[0] / 2 - h.d.container.outerHeight(true) / 2;
        j = e[1] / 2 - h.d.container.outerWidth(true) / 2;
        if (h.o.position && Object.prototype.toString.call(h.o.position) === "[object Array]") {
            f = h.o.position[0] || f;
            j = h.o.position[1] || j
        } else {
            f = f;
            j = j
        }
        h.d.container.css({left:j, top:f})
    }, watchTab:function (h) {
        var f = this;
        if (g(h.target).parents(".simplemodal-container").length > 0) {
            f.inputs = g(":input:enabled:visible:first, :input:enabled:visible:last", f.d.data[0]);
            if (!h.shiftKey && h.target === f.inputs[f.inputs.length - 1] || h.shiftKey && h.target === f.inputs[0] || f.inputs.length === 0) {
                h.preventDefault();
                f.focus(h.shiftKey ? "last" : "first")
            }
        } else {
            h.preventDefault();
            f.focus()
        }
    }, open:function () {
        var f = this;
        f.d.iframe && f.d.iframe.show();
        if (g.isFunction(f.o.onOpen)) {
            f.o.onOpen.apply(f, [f.d])
        } else {
            f.d.overlay.show();
            f.d.container.show();
            f.d.data.show()
        }
        f.o.focus && f.focus();
        f.bindEvents()
    }, close:function () {
        var h = this;
        if (!h.d.data) {
            return false
        }
        h.unbindEvents();
        if (g.isFunction(h.o.onClose) && !h.occb) {
            h.occb = true;
            h.o.onClose.apply(h, [h.d])
        } else {
            if (h.d.placeholder) {
                var f = g("#simplemodal-placeholder");
                if (h.o.persist) {
                    f.replaceWith(h.d.data.removeClass("simplemodal-data").css("display", h.display))
                } else {
                    h.d.data.hide().remove();
                    f.replaceWith(h.d.orig)
                }
            } else {
                h.d.data.hide().remove()
            }
            h.d.container.hide().remove();
            h.d.overlay.hide();
            h.d.iframe && h.d.iframe.hide().remove();
            setTimeout(function () {
                h.d.overlay.remove();
                h.d = {}
            }, 10)
        }
    }}
})(jQuery);
(function (a) {
    a.extend({jixedbar:new function (f) {
        var g = {constOverflow:"hidden", constBottom:"0px"};
        var h = {showOnTop:false, transparent:false, opacity:0.9, opaqueSpeed:"fast", slideSpeed:"fast", roundedCorners:true, roundedButtons:true, menuFadeSpeed:250, tooltipFadeSpeed:"slow", tooltipFadeOpacity:0.8};
        var f = a.extend(h, f);
        var e = (navigator.appName == "Microsoft Internet Explorer" && parseInt(navigator.appVersion) == 4 && navigator.appVersion.indexOf("MSIE 6.0") != -1);
        var c = (document.all && !window.opera && window.XMLHttpRequest);
        var k = false;
        var b = "";
        var j;
        this.construct = function () {
            return this.each(function () {
                var p = a(this);
                var l = jQuery(this);
                var n = l.width();
                var m = (n / 2) * (1);
                var o = false;
                j = p;
                if (a(this).checkCookie("JXID")) {
                    if (a(this).readCookie("JXHID") == "true") {
                        this.hideBar = true
                    }
                } else {
                    a(this).createCookie("JXID", a(this).genRandID());
                    a(this).createCookie("JXHID", false)
                }
                if ((a.browser.msie && e) || (a.browser.msie && c)) {
                    a("html").css({overflow:"hidden", height:"100%"});
                    a("body").css({margin:"0px", overflow:"auto", height:"100%"})
                } else {
                    a("html").css({height:"100%"});
                    a("body").css({margin:"0px", height:"100%"})
                }
                if ((a.browser.msie && e) || (a.browser.msie && c)) {
                    pos = "absolute"
                } else {
                    pos = "fixed"
                }
                if (a(".jx-bar-button-right", this).exists()) {
                    a("<ul />").attr("id", "jx-hid-con-id").insertBefore(a(this).find(".jx-bar-button-right:first"))
                } else {
                    a("<ul />").attr("id", "jx-hid-con-id").appendTo(this)
                }
                if (a.browser.msie && e) {
                    a("#jx-hid-con-id").css({width:"1px", "float":"right"})
                } else {
                    if (a.browser.msie && c) {
                        a("#jx-hid-con-id").css({width:"40px", "float":"right"})
                    }
                }
                if (h.showOnTop) {
                    hideIndicator = "jx-hide-top"
                } else {
                    hideIndicator = "jx-hide"
                }
                a("#jx-hid-con-id").html('<li alt="Hide toolbar"><a id="jx-hid-btn-id" class="' + hideIndicator + '"></a></li>');
                a("#jx-hid-con-id").addClass("jx-bar-button-right");
                a("<span />").attr("id", "jx-hid-sep-id").insertAfter("#jx-hid-con-id");
                a("#jx-hid-sep-id").addClass("jx-hide-separator");
                a("#jx-hid-btn-id").parent().click(function () {
                    a("#jx-menu-con-id").fadeOut();
                    a(p).slideToggle(h.slideSpeed, function () {
                        a(this).createCookie("JXHID", true);
                        if (!a(this).checkCookie("JXID")) {
                            a(this).createCookie("JXID", a(this).genRandID())
                        }
                        a("#jx-uhid-con-id").slideToggle(h.slideSpeed)
                    });
                    return false
                });
                a(this).css({overflow:g.constOverflow, position:pos});
                if (h.showOnTop) {
                    a(this).css({top:g.constBottom})
                } else {
                    a(this).css({bottom:g.constBottom})
                }
                a(this).addClass("jx-bar");
                if (h.roundedCorners) {
                    if (h.showOnTop) {
                        a(this).addClass("jx-bar-rounded-bl jx-bar-rounded-br")
                    } else {
                        a(this).addClass("jx-bar-rounded-tl jx-bar-rounded-tr")
                    }
                }
                a(this).addClass("jx-bar-button");
                if (h.roundedButtons) {
                    a(this).addClass("jx-bar-button-rounded")
                }
                marginLeft = m - (a(this).width() / 2);
                a(this).css({"margin-left":marginLeft});
                a("img", p).css({"vertical-align":"bottom", border:"#fff solid 0px"});
                a(this).find("img").each(function () {
                    if (a(this).attr("alt") != "") {
                        altName = " " + a(this).attr("alt");
                        a(this).parent().append(altName)
                    }
                });
                if (h.transparent) {
                    a(this).fadeTo(h.opaqueSpeed, h.opacity)
                }
                a("<div />").attr("id", "jx-menu-con-id").appendTo("body");
                if (h.transparent) {
                    a("#jx-menu-con-id").fadeTo(h.opaqueSpeed, h.opacity)
                }
                a("<div />").attr("id", "jx-uhid-con-id").appendTo("body");
                a("#jx-uhid-con-id").addClass("jx-show");
                a("#jx-uhid-con-id").css({overflow:g.constOverflow, position:pos, "margin-left":(a(this).offset().left + a(this).width()) - a("#jx-uhid-con-id").width()});
                if (h.showOnTop) {
                    a("#jx-uhid-con-id").css({top:g.constBottom})
                } else {
                    a("#jx-uhid-con-id").css({bottom:g.constBottom})
                }
                if (h.transparent) {
                    a("#jx-uhid-con-id").fadeTo(h.opaqueSpeed, h.opacity)
                }
                if (this.hideBar) {
                    a(this).css({display:"none"})
                }
                if (!this.hideBar) {
                    a("#jx-uhid-con-id").css({display:"none"})
                }
                a("<ul />").attr("id", "jx-uhid-itm-id").appendTo(a("#jx-uhid-con-id"));
                if (h.showOnTop) {
                    unhideIndicator = "jx-show-button-top"
                } else {
                    unhideIndicator = "jx-show-button"
                }
                a("#jx-uhid-itm-id").html('<li alt="Show toolbar"><a id="jx-uhid-btn-id" class="' + unhideIndicator + '"></a></li>');
                if (h.roundedCorners) {
                    if (h.showOnTop) {
                        a("#jx-uhid-con-id").addClass("jx-bar-rounded-bl jx-bar-rounded-br")
                    } else {
                        a("#jx-uhid-con-id").addClass("jx-bar-rounded-tl jx-bar-rounded-tr")
                    }
                }
                a("#jx-uhid-con-id").addClass("jx-bar-button");
                if (h.roundedButtons) {
                    a("#jx-uhid-con-id").addClass("jx-bar-button-rounded")
                }
                a("#jx-uhid-con-id").click(function () {
                    a(this).slideToggle(h.slideSpeed, function () {
                        a(this).createCookie("JXHID", false);
                        if (!a(this).checkCookie("JXID")) {
                            a(this).createCookie("JXID", a(this).genRandID())
                        }
                        a(p).slideToggle(h.slideSpeed);
                        if (b != "") {
                            a("#jx-menu-con-id").fadeIn()
                        }
                        a("#jx-uhid-con-id").css({"margin-left":(a(p).offset().left + a(p).width()) - a("#jx-uhid-con-id").width()});
                        if (k) {
                            a("#jx-menu-con-id").css({"margin-left":a("#" + b).parent().offset().left})
                        }
                    });
                    return false
                });
                a("<div />").attr("id", "jx-ttip-con-id").appendTo("body");
                a("#jx-ttip-con-id").css({height:"auto", "margin-left":"0px", width:"100%", overflow:g.constOverflow, position:pos});
                if (h.showOnTop) {
                    a("#jx-ttip-con-id").css({"margin-top":a(this).height() + 6, top:g.constBottom})
                } else {
                    a("#jx-ttip-con-id").css({"margin-bottom":a(this).height() + 6, bottom:g.constBottom})
                }
                a("li", p).each(function () {
                    var q = a(this).attr("title");
                    if (q != "") {
                        a(this).removeAttr("title");
                        a(this).attr("alt", q)
                    }
                });
                a("li", p).hover(function () {
                    var s = a(this).attr("id");
                    var r = s + "jx-ttip-id";
                    var q = a(this).attr("title");
                    if (q == "") {
                        q = a(this).attr("alt")
                    }
                    if (q != "") {
                        barTooltipWrapperID = r + "_wrapper";
                        a("<div />").attr("id", barTooltipWrapperID).appendTo("#jx-ttip-con-id");
                        a("<div />").attr("id", r).appendTo("#" + barTooltipWrapperID);
                        a("#" + r).css({"float":"left"});
                        if ((h.showOnTop) && !(a.browser.msie && e)) {
                            a("<div />").addClass("jx-tool-point-dir-up").appendTo("#" + r)
                        }
                        a("<div />").html(q).addClass("jx-bar-button-tooltip").appendTo("#" + r);
                        if ((!h.showOnTop) && !(a.browser.msie && e)) {
                            a("<div />").addClass("jx-tool-point-dir-down").appendTo("#" + r)
                        }
                        lft_pad = parseInt(a(this).css("padding-left"));
                        a("#" + barTooltipWrapperID).css({"margin-left":(a(this).offset().left - (a("#" + r).width() / 2)) + (a(this).width() / 2) + lft_pad});
                        if (((a(this).find("a:first").attr("name") == "") || (k == false))) {
                            a("#" + r).fadeTo(h.tooltipFadeSpeed, h.tooltipFadeOpacity)
                        } else {
                            if (b != a(this).find("a:first").attr("name")) {
                                a("#" + r).fadeTo(h.tooltipFadeSpeed, h.tooltipFadeOpacity)
                            } else {
                                a("#" + r).css({display:"none"})
                            }
                        }
                    }
                }, function () {
                    var s = a(this).attr("id");
                    var r = s + "jx-ttip-id";
                    var q = r + "_wrapper";
                    a("#" + r).remove();
                    a("#" + q).remove()
                });
                a("li", a("#jx-uhid-con-id")).hover(function () {
                    var s = a(this).attr("id");
                    var r = s + "jx-ttip-id";
                    var q = a(this).attr("title");
                    if (q == "") {
                        q = a(this).attr("alt")
                    }
                    if (q != "") {
                        barTooltipWrapperID = r + "_wrapper";
                        a("<div />").attr("id", barTooltipWrapperID).appendTo("#jx-ttip-con-id");
                        a("<div />").attr("id", r).appendTo("#" + barTooltipWrapperID);
                        a("#" + r).css({"float":"left"});
                        if ((h.showOnTop) && !(a.browser.msie && e)) {
                            a("<div />").addClass("jx-tool-point-dir-up").appendTo("#" + r)
                        }
                        a("<div />").html(q).addClass("jx-bar-button-tooltip").appendTo("#" + r);
                        if ((!h.showOnTop) && !(a.browser.msie && e)) {
                            a("<div />").addClass("jx-tool-point-dir-down").appendTo("#" + r)
                        }
                        ulft_pad = parseInt(a(this).css("padding-left"));
                        a("#" + barTooltipWrapperID).css({"margin-left":(a(this).offset().left - (a("#" + r).width() / 2)) + (a(this).width() / 2) + ulft_pad});
                        if (((a(this).find("a:first").attr("name") == "") || (k == false))) {
                            a("#" + r).fadeTo(h.tooltipFadeSpeed, h.tooltipFadeOpacity)
                        } else {
                            if (b != a(this).find("a:first").attr("name")) {
                                a("#" + r).fadeTo(h.tooltipFadeSpeed, h.tooltipFadeOpacity)
                            } else {
                                a("#" + r).css({display:"none"})
                            }
                        }
                    }
                }, function () {
                    var s = a(this).attr("id");
                    var r = s + "jx-ttip-id";
                    var q = r + "_wrapper";
                    a("#" + r).remove();
                    a("#" + q).remove()
                });
                if (a.browser.msie && e) {
                    a(this).find("li").each(function () {
                        a(this).find("img").each(function () {
                            imgPath = a(this).attr("src");
                            altName = a(this).attr("alt");
                            if (altName == "") {
                                altName = "  " + a(this).attr("title")
                            }
                            srcText = a(this).parent().html();
                            a(this).parent().html("<span style=\"cursor:pointer;display:inline-block;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + imgPath + "');\">" + srcText + "</span> " + altName)
                        });
                        a(this).find("img").each(function () {
                            a(this).attr("style", "filter:progid:DXImageTransform.Microsoft.Alpha(opacity=0);")
                        })
                    })
                }
                a(window).resize(function () {
                    var q = jQuery(this);
                    var t = q.width();
                    var r = (t / 2) * (1);
                    var s = r - (a(p).width() / 2);
                    a(p).css({"margin-left":s});
                    a("#jx-uhid-con-id").css({"margin-left":(a(p).offset().left + a(p).width()) - a("#jx-uhid-con-id").width()});
                    if (k) {
                        a("#jx-menu-con-id").css({"margin-left":a("#" + b).parent().offset().left})
                    }
                });
                a("li", p).find("ul").each(function () {
                    a(this).css({display:"none"})
                });
                i = 1;
                a("li", p).find("ul").each(function () {
                    a(this).attr("id", "nav" + i);
                    a(this).parent().find("a:first").attr("href", "#");
                    a(this).parent().find("a:first").attr("name", "nav" + i);
                    if (h.showOnTop) {
                        buttonIndicator = "jx-arrow-down"
                    } else {
                        buttonIndicator = "jx-arrow-up"
                    }
                    if ((a.browser.msie && e) || (a.browser.msie && c)) {
                        a("<div />").attr("class", buttonIndicator).insertBefore(a(this).parent().find("a")).css({"background-position":"top"})
                    } else {
                        a("<div />").attr("class", buttonIndicator).insertAfter(a(this).parent().find("a"))
                    }
                    a(this).parent().find("a:first").click(function () {
                        var s = a(this).attr("id");
                        var r = s + "jx-ttip-id";
                        var q = r + "_wrapper";
                        a("#" + r).remove();
                        a("#" + q).remove();
                        if ((k) && (b == a(this).attr("name"))) {
                            if (h.showOnTop) {
                                buttonIndicator = "jx-arrow-down"
                            } else {
                                buttonIndicator = "jx-arrow-up"
                            }
                            a(this).parent().find("div").attr("class", buttonIndicator);
                            a("#jx-menu-con-id").fadeOut(h.menuFadeSpeed);
                            a(this).parent().removeClass("jx-nav-menu-active");
                            if (h.roundedButtons) {
                                a(this).parent().removeClass("jx-nav-menu-active-rounded")
                            }
                            k = false;
                            b = "";
                            a(this).blur()
                        } else {
                            if (h.showOnTop) {
                                buttonIndicator = "jx-arrow-up"
                            } else {
                                buttonIndicator = "jx-arrow-down"
                            }
                            a(this).parent().find("div").attr("class", buttonIndicator);
                            a("#jx-menu-con-id").css({display:"none"});
                            a("#jx-menu-con-id").html("<ul>" + a(this).parent().find("ul").html() + "</ul>");
                            a("#jx-menu-con-id").css({overflow:g.constOverflow, position:pos, "margin-left":a(this).parent().offset().left});
                            if (h.showOnTop) {
                                a("#jx-menu-con-id").css({top:g.constBottom, "margin-top":a(p).height() + 6})
                            } else {
                                a("#jx-menu-con-id").css({bottom:g.constBottom, "margin-bottom":a(p).height() + 6})
                            }
                            a("#jx-menu-con-id").addClass("jx-nav-menu");
                            if (a.browser.msie && e) {
                                a("#jx-menu-con-id ul li a").css({width:"100%"})
                            }
                            if (h.roundedButtons) {
                                a("#jx-menu-con-id").addClass("jx-nav-menu-rounded")
                            }
                            a(this).parent().addClass("jx-nav-menu-active");
                            if (h.roundedButtons) {
                                a(this).parent().addClass("jx-nav-menu-active-rounded")
                            }
                            if (b != "") {
                                a("a[name='" + b + "']").parent().removeClass("jx-nav-menu-active");
                                a("a[name='" + b + "']").parent().removeClass("jx-nav-menu-active-rounded");
                                if (h.showOnTop) {
                                    buttonIndicator = "jx-arrow-down"
                                } else {
                                    buttonIndicator = "jx-arrow-up"
                                }
                                a("a[name='" + b + "']").parent().find("div").attr("class", buttonIndicator)
                            }
                            k = true;
                            b = a(this).attr("name");
                            a(this).blur();
                            a("#jx-menu-con-id").fadeIn(h.menuFadeSpeed)
                        }
                        return false
                    });
                    i = i + 1
                });
                a("li", p).click(function () {
                    if (a("ul", this).exists()) {
                        a(this).find("a:first").click();
                        return false
                    } else {
                        if (a(this).parent().attr("id") == "jx-hid-con-id") {
                            return false
                        }
                    }
                    if (a("a", this).exists()) {
                        window.location = a(this).find("a:first").attr("href")
                    }
                    return false
                })
            })
        };
        this.getOptions = function () {
            return f
        };
        this.isIE6 = function () {
            return e
        };
        this.isIE7 = function () {
            return c
        };
        this.hasActiveButton = function () {
            return k
        };
        this.getActiveButtonName = function () {
            return b
        };
        this.getTooltipObject = function () {
            return a("#jx-ttip-con-id")
        };
        this.createObjectContainer = function (l) {
            l = typeof(l) != "undefined" ? l : "jx-obj-con-id";
            a("<div />").attr("id", l).appendTo("body");
            a("#" + l).css({height:"auto", "margin-left":"0px", width:"100%", overflow:g.constOverflow, position:pos});
            if (h.showOnTop) {
                a("#" + l).css({"margin-top":a(j).height() + 6, top:g.constBottom})
            } else {
                a("#" + l).css({"margin-bottom":a(j).height() + 6, bottom:g.constBottom})
            }
            return a("#" + l)
        }
    }});
    a.fn.extend({jixedbar:a.jixedbar.construct})
})(jQuery);
jQuery.fn.exists = function () {
    return jQuery(this).length > 0
};
jQuery.fn.createCookie = function (c, b) {
    var a = new Date(2037, 1, 1);
    document.cookie = c + "=" + escape(b) + ";expires=" + a.toUTCString()
};
jQuery.fn.checkCookie = function (a) {
    if (document.cookie.length > 0) {
        cookie_start = document.cookie.indexOf(a + "=");
        if (cookie_start != -1) {
            cookie_start = cookie_start + a.length + 1;
            cookie_end = document.cookie.indexOf(";", cookie_start);
            if (cookie_end == -1) {
                cookie_end = document.cookie.length;
                return true
            }
        }
    }
    return false
};
jQuery.fn.extractCookieValue = function (a) {
    if ((endOfCookie = document.cookie.indexOf(";", a)) == -1) {
        endOfCookie = document.cookie.length
    }
    return unescape(document.cookie.substring(a, endOfCookie))
};
jQuery.fn.readCookie = function (f) {
    var e = document.cookie.length;
    var b = f + "=";
    var c = b.length;
    var a = 0;
    while (a <= e) {
        var g = (a + c);
        if (document.cookie.substring(a, g) == b) {
            return(this.extractCookieValue(g))
        }
        a = document.cookie.indexOf(" ", a) + 1;
        if (a == 0) {
            break
        }
    }
    return(null)
};
jQuery.fn.genRandID = function () {
    var c = "";
    var b = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    for (var a = 0; a < 24; a++) {
        c += b.charAt(Math.floor(Math.random() * b.length))
    }
    return c
};
(function () {
    var g = {jQuery:"../code.jquery.com/jquery-latest.min.js"/*tpa=http://code.jquery.com/jquery-latest.min.js*/};
    var j = function () {
        (function (k) {
            k.fn.idTabs = function () {
                var n = {};
                for (var m = 0; m < arguments.length; ++m) {
                    var l = arguments[m];
                    switch (l.constructor) {
                        case Object:
                            k.extend(n, l);
                            break;
                        case Boolean:
                            n.change = l;
                            break;
                        case Number:
                            n.start = l;
                            break;
                        case Function:
                            n.click = l;
                            break;
                        case String:
                            if (l.charAt(0) == ".") {
                                n.selected = l
                            } else {
                                if (l.charAt(0) == "!") {
                                    n.event = l
                                } else {
                                    n.start = l
                                }
                            }
                            break
                    }
                }
                if (typeof n["return"] == "function") {
                    n.change = n["return"]
                }
                return this.each(function () {
                    k.idTabs(this, n)
                })
            };
            k.idTabs = function (n, m) {
                var q = (k.metadata) ? k(n).metadata() : {};
                var o = k.extend({}, k.idTabs.settings, q, m);
                if (o.selected.charAt(0) == ".") {
                    o.selected = o.selected.substr(1)
                }
                if (o.event.charAt(0) == "!") {
                    o.event = o.event.substr(1)
                }
                if (o.start == null) {
                    o.start = -1
                }
                var l = function () {
                    if (k(this).is("." + o.selected)) {
                        return o.change
                    }
                    var u = "#" + this.href.split("#")[1];
                    var s = [];
                    var t = [];
                    k("a", n).each(function () {
                        if (this.href.match(/#/)) {
                            s.push(this);
                            t.push("#" + this.href.split("#")[1])
                        }
                    });
                    if (o.click && !o.click.apply(this, [u, t, n, o])) {
                        return o.change
                    }
                    for (i in s) {
                        k(s[i]).removeClass(o.selected)
                    }
                    for (i in t) {
                        k(t[i]).hide()
                    }
                    k(this).addClass(o.selected);
                    k(u).show();
                    return o.change
                };
                var p = k("a[href*='#']", n).unbind(o.event, l).bind(o.event, l);
                p.each(function () {
                    k("#" + this.href.split("#")[1]).hide()
                });
                var r = false;
                if ((r = p.filter("." + o.selected)).length) {
                } else {
                    if (typeof o.start == "number" && (r = p.eq(o.start)).length) {
                    } else {
                        if (typeof o.start == "string" && (r = p.filter("[href*='#" + o.start + "']")).length) {
                        }
                    }
                }
                if (r) {
                    r.removeClass(o.selected);
                    r.trigger(o.event)
                }
                return o
            };
            k.idTabs.settings = {start:0, change:false, click:null, selected:".selected", event:"!click"};
            k.idTabs.version = "2.2";
            k(function () {
                k(".idTabs").idTabs()
            })
        })(jQuery)
    };
    var a = function (l, k) {
        k = k.split(".");
        while (l && k.length) {
            l = l[k.shift()]
        }
        return l
    };
    var c = document.getElementsByTagName("head")[0];
    var f = function (k) {
        var l = document.createElement("script");
        l.type = "text/javascript";
        l.src = k;
        c.appendChild(l)
    };
    var e = document.getElementsByTagName("script");
    var h = e[e.length - 1].src;
    var b = true;
    for (d in g) {
        if (a(this, d)) {
            continue
        }
        b = false;
        f(g[d])
    }
    if (b) {
        return j()
    }
    f(h)
})();
(function (b) {
    if (!document.defaultView || !document.defaultView.getComputedStyle) {
        var e = b.curCSS;
        b.curCSS = function (h, f, j) {
            if (f === "background-position") {
                f = "backgroundPosition"
            }
            if (f !== "backgroundPosition" || !h.currentStyle || h.currentStyle[f]) {
                return e.apply(this, arguments)
            }
            var g = h.style;
            if (!j && g && g[f]) {
                return g[f]
            }
            return e(h, "backgroundPositionX", j) + " " + e(h, "backgroundPositionY", j)
        }
    }
    var c = b.fn.animate;
    b.fn.animate = function (f) {
        if ("background-position" in f) {
            f.backgroundPosition = f["background-position"];
            delete f["background-position"]
        }
        if ("backgroundPosition" in f) {
            f.backgroundPosition = "(" + f.backgroundPosition
        }
        return c.apply(this, arguments)
    };
    function a(g) {
        g = g.replace(/left|top/g, "0px");
        g = g.replace(/right|bottom/g, "100%");
        g = g.replace(/([0-9\.]+)(\s|\)|$)/g, "$1px$2");
        var f = g.match(/(-?[0-9\.]+)(px|\%|em|pt)\s(-?[0-9\.]+)(px|\%|em|pt)/);
        return[parseFloat(f[1], 10), f[2], parseFloat(f[3], 10), f[4]]
    }

    b.fx.step.backgroundPosition = function (g) {
        if (!g.bgPosReady) {
            var j = b.curCSS(g.elem, "backgroundPosition");
            if (!j) {
                j = "0px 0px"
            }
            j = a(j);
            g.start = [j[0], j[2]];
            var f = a(g.end);
            g.end = [f[0], f[2]];
            g.unit = [f[1], f[3]];
            g.bgPosReady = true
        }
        var h = [];
        h[0] = ((g.end[0] - g.start[0]) * g.pos) + g.start[0] + g.unit[0];
        h[1] = ((g.end[1] - g.start[1]) * g.pos) + g.start[1] + g.unit[1];
        g.elem.style.backgroundPosition = h[0] + " " + h[1]
    }
})(jQuery);
(function (b) {
    var a = {};
    b.publish = function (e, c) {
        b.each(a[e], function () {
            this.apply(b, c || [])
        })
    };
    b.subscribe = function (c, e) {
        if (!a[c]) {
            a[c] = []
        }
        a[c].push(e);
        return[c, e]
    };
    b.unsubscribe = function (e) {
        var c = e[0];
        a[c] && b.each(a[c], function (f) {
            if (this == e[1]) {
                a[c].splice(f, 1)
            }
        })
    }
})(jQuery);
(function (a) {
    this.version = "1.1";
    this.layer = {width:200, height:100};
    this.title = "Note:";
    this.time = 4000;
    this.anims = {type:"slide", speed:600};
    this.inits = function (c, b) {
        $(document.body).prepend('<div id="message" style="border:#f4f5f7 1px solid;z-index:100;width:' + this.layer.width + "px;height:" + this.layer.height + 'px;position:absolute; display:none;background:#f4f5f7; bottom:0; right:5px; overflow:hidden;"><div style="border:1px solid #fff;border-bottom:none;width:100%;height:25px;font-size:12px;overflow:hidden;color:#1f336b;"><span id="message_close" style="float:right;padding:5px 0 5px 0;width:16px;line-height:auto;color:red;font-size:12px;font-weight:bold;text-align:center;cursor:pointer;overflow:hidden;">×</span><div style="padding:5px 0 5px 5px;width:100px;line-height:18px;text-align:left;overflow:hidden;">' + c + '</div><div style="clear:both;"></div></div> <div style="padding-bottom:5px;border:1px solid #fff;border-top:none;width:100%;height:auto;font-size:12px;"><div id="message_content" style="margin:0 5px 0 5px;border:#b9c9ef 1px solid;padding:10px 0 10px 5px;font-size:12px;width:' + (this.layer.width - 17) + "px;height:" + (this.layer.height - 50) + 'px;color:#1f336b;text-align:left;overflow:hidden;">' + b + "</div></div></div>")
    };
    this.show = function (e, c, b) {
        if (e == 0 || !e) {
            e = this.title
        }
        this.inits(e, c);
        if (b) {
            this.time = b
        }
        switch (this.anims.type) {
            case"slide":
                $("#message").slideDown(this.anims.speed);
                break;
            case"fade":
                $("#message").fadeIn(this.anims.speed);
                break;
            case"show":
                $("#message").show(this.anims.speed);
                break;
            default:
                $("#message").slideDown(this.anims.speed);
                break
        }
        $("#message_close").click(function () {
            setTimeout("this.close()", 1)
        });
        this.rmmessage(this.time)
    };
    this.lays = function (c, b) {
        if (c != 0 && c) {
            this.layer.width = c
        }
        if (b != 0 && b) {
            this.layer.height = b
        }
    };
    this.anim = function (b, c) {
        if (b != 0 && b) {
            this.anims.type = b
        }
        if (c != 0 && c) {
            switch (c) {
                case"slow":
                    break;
                case"fast":
                    this.anims.speed = 200;
                    break;
                case"normal":
                    this.anims.speed = 400;
                    break;
                default:
                    this.anims.speed = c
            }
        }
    };
    this.rmmessage = function (b) {
        setTimeout("this.close()", b)
    };
    this.close = function () {
        switch (this.anims.type) {
            case"slide":
                $("#message").slideUp(this.anims.speed);
                break;
            case"fade":
                $("#message").fadeOut(this.anims.speed);
                break;
            case"show":
                $("#message").hide(this.anims.speed);
                break;
            default:
                $("#message").slideUp(this.anims.speed);
                break
        }
        setTimeout('$("#message").remove();', this.anims.speed);
        this.original()
    };
    this.original = function () {
        this.layer = {width:200, height:100};
        this.title = "信息提示";
        this.time = 4000;
        this.anims = {type:"slide", speed:600}
    };
    a.messager = this;
    return a
})(jQuery);
if (jQuery) {
    (function (a) {
        a.fn.extend({autoFit:function (f) {
            var e = {height:null, width:null};
            var g = a.extend(e, f);
            var c = this;
            return c.each(function () {
                var j = a(this);
                if (g.height) {
                    var m = null;
                    if (g.height.parent) {
                        m = a("#" + g.height.parent)
                    }
                    if (m) {
                        var p = m.innerHeight();
                        var o = 0;
                        for (var k = 0; k < g.height.siblings.length; k++) {
                            o += h(a("#" + g.height.siblings[k]), g.height.outer)
                        }
                        j.outerHeight(p - o)
                    } else {
                        if (g.height.siblings.length > 0) {
                            j.outerHeight(h(a("#" + g.height.siblings[0]), g.height.outer))
                        }
                    }
                }
                if (g.width) {
                    var m = null;
                    if (g.width.parent) {
                        m = a("#" + g.width.parent)
                    }
                    if (m) {
                        var l = m.innerWidth();
                        var n = 0;
                        for (var k = 0; k < g.width.siblings.length; k++) {
                            n += b(a("#" + g.width.siblings[k]), g.width.outer)
                        }
                        j.width(l - n)
                    } else {
                        if (g.width.siblings.length > 0) {
                            j.outerWidth(b(a("#" + g.width.siblings[0]), g.width.outer))
                        }
                    }
                }
            });
            function h(k, j) {
                if (j) {
                    return k.outerHeight()
                }
                return k.height()
            }

            function b(k, j) {
                if (j) {
                    return k.outerWidth()
                }
                return k.width()
            }
        }})
    })(jQuery)
}
if (jQuery) {
    (function (a) {
        a.fn.extend({context_Menu:function (c) {
            var f = {css:{}, _class:{}, groups:[], target:null};
            var e = a.extend(f, c);
            var b = this;
            return b.each(function () {
                var g = a(this);
                var h = e.parent == null ? g : a(e.parent);
                if (e.target == null) {
                    return
                }
                g.bind("contextmenu", function (y) {
                    var A = e.target, x = e.groups.length, l = a("div.context_menu"), u = h.innerWidth(), n = h.innerHeight(), m = h.scrollTop(), v = h.scrollLeft(), q = h.offset();
                    if (!g.hasClass("ui-selected")) {
                        if (g.hasClass("file_grid")) {
                            g.addClass("ui-selected").removeClass("item_hover").siblings(".ui-selected").removeClass("ui-selected");
                            Airdroid.FileManage.abtnStatusChange([g])
                        } else {
                            if (g.hasClass("leaf")) {
                                a("#file_tree").find(".ui-selected").removeClass("ui-selected");
                                g.addClass("ui-selected").removeClass("item_hover");
                                a(a.gridArea).grid({cur_path:g.attr("absrc")})
                            }
                        }
                    }
                    l.remove();
                    if (x > 0) {
                        var t = [
                            {abSrc:g.attr("absrc"), extName:g.attr("extName"), gridItem:g}
                        ];
                        var o = g.siblings(".ui-selected");
                        if (o.length > 0) {
                            o.each(function () {
                                t.push({abSrc:a(this).attr("absrc"), extName:a(this).attr("extName"), gridItem:a(this)})
                            })
                        }
                        (l = a("<div class='context_menu'>                                    <div class='context_menu_top'></div>                                    <div class='context_menu_body'>                                    </div>                                    <div class='context_menu_bottom'></div>                                 </div>")).bind("contextmenu",function (B) {
                            a.clearContextMenu();
                            return false
                        }).bind("click",function () {
                            a.clearContextMenu()
                        }).attr("target", A);
                        for (var z = 0; z < x; z++) {
                            var k = e.groups[z];
                            if (k.option.type == "seprate") {
                                a("<div class='context_menu_sprate'>").appendTo(l.find(".context_menu_body"))
                            } else {
                                var p = a("<div class='context_menu_item'>" + k.option.name + "</div>");
                                if (k.option.accept == undefined || k.option.accept(g)) {
                                    p.hover(function () {
                                        a(this).addClass("context_menu_item_hover")
                                    },function () {
                                        a(this).removeClass("context_menu_item_hover")
                                    }).bind("click", {selectedItems:t}, k.option.handler)
                                } else {
                                    p.css("color", "#ccc")
                                }
                                p.appendTo(l.find(".context_menu_body"))
                            }
                        }
                        l.appendTo(h);
                        var s = y.clientX - q.left + v, r = y.clientY - q.top + 20 + m, j = l.outerWidth() || 100, w = l.outerHeight() || 100;
                        if (u - (y.clientX - q.left) < j) {
                            s = u - j - 20 + v
                        }
                        if (n - (y.clientY - q.top) < w) {
                            r = n - w - 40 + m
                        }
                        l.css({position:"absolute", left:s, top:r})
                    }
                    return false
                })
            })
        }})
    })(jQuery)
}
var swfobject = function () {
    var aq = "undefined", aD = "object", ab = "Shockwave Flash", X = "ShockwaveFlash.ShockwaveFlash", aE = "application/x-shockwave-flash", ac = "SWFObjectExprInst", ax = "onreadystatechange", af = window, aL = document, aB = navigator, aa = false, Z = [aN], aG = [], ag = [], al = [], aJ, ad, ap, at, ak = false, aU = false, aH, an, aI = true, ah = function () {
        var a = typeof aL.getElementById != aq && typeof aL.getElementsByTagName != aq && typeof aL.createElement != aq, f = aB.userAgent.toLowerCase(), c = aB.platform.toLowerCase(), j = c ? /win/.test(c) : /win/.test(f), l = c ? /mac/.test(c) : /mac/.test(f), h = /webkit/.test(f) ? parseFloat(f.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false, e = !+"\v1", g = [0, 0, 0], m = null;
        if (typeof aB.plugins != aq && typeof aB.plugins[ab] == aD) {
            m = aB.plugins[ab].description;
            if (m && !(typeof aB.mimeTypes != aq && aB.mimeTypes[aE] && !aB.mimeTypes[aE].enabledPlugin)) {
                aa = true;
                e = false;
                m = m.replace(/^.*\s+(\S+\s+\S+$)/, "$1");
                g[0] = parseInt(m.replace(/^(.*)\..*$/, "$1"), 10);
                g[1] = parseInt(m.replace(/^.*\.(.*)\s.*$/, "$1"), 10);
                g[2] = /[a-zA-Z]/.test(m) ? parseInt(m.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0
            }
        } else {
            if (typeof af.ActiveXObject != aq) {
                try {
                    var k = new ActiveXObject(X);
                    if (k) {
                        m = k.GetVariable("$version");
                        if (m) {
                            e = true;
                            m = m.split(" ")[1].split(",");
                            g = [parseInt(m[0], 10), parseInt(m[1], 10), parseInt(m[2], 10)]
                        }
                    }
                } catch (b) {
                }
            }
        }
        return{w3:a, pv:g, wk:h, ie:e, win:j, mac:l}
    }(), aK = function () {
        if (!ah.w3) {
            return
        }
        if ((typeof aL.readyState != aq && aL.readyState == "complete") || (typeof aL.readyState == aq && (aL.getElementsByTagName("body")[0] || aL.body))) {
            aP()
        }
        if (!ak) {
            if (typeof aL.addEventListener != aq) {
                aL.addEventListener("DOMContentLoaded", aP, false)
            }
            if (ah.ie && ah.win) {
                aL.attachEvent(ax, function () {
                    if (aL.readyState == "complete") {
                        aL.detachEvent(ax, arguments.callee);
                        aP()
                    }
                });
                if (af == top) {
                    (function () {
                        if (ak) {
                            return
                        }
                        try {
                            aL.documentElement.doScroll("left")
                        } catch (a) {
                            setTimeout(arguments.callee, 0);
                            return
                        }
                        aP()
                    })()
                }
            }
            if (ah.wk) {
                (function () {
                    if (ak) {
                        return
                    }
                    if (!/loaded|complete/.test(aL.readyState)) {
                        setTimeout(arguments.callee, 0);
                        return
                    }
                    aP()
                })()
            }
            aC(aP)
        }
    }();

    function aP() {
        if (ak) {
            return
        }
        try {
            var b = aL.getElementsByTagName("body")[0].appendChild(ar("span"));
            b.parentNode.removeChild(b)
        } catch (a) {
            return
        }
        ak = true;
        var e = Z.length;
        for (var c = 0; c < e; c++) {
            Z[c]()
        }
    }

    function aj(a) {
        if (ak) {
            a()
        } else {
            Z[Z.length] = a
        }
    }

    function aC(a) {
        if (typeof af.addEventListener != aq) {
            af.addEventListener("load", a, false)
        } else {
            if (typeof aL.addEventListener != aq) {
                aL.addEventListener("load", a, false)
            } else {
                if (typeof af.attachEvent != aq) {
                    aM(af, "onload", a)
                } else {
                    if (typeof af.onload == "function") {
                        var b = af.onload;
                        af.onload = function () {
                            b();
                            a()
                        }
                    } else {
                        af.onload = a
                    }
                }
            }
        }
    }

    function aN() {
        if (aa) {
            Y()
        } else {
            am()
        }
    }

    function Y() {
        var e = aL.getElementsByTagName("body")[0];
        var b = ar(aD);
        b.setAttribute("type", aE);
        var a = e.appendChild(b);
        if (a) {
            var c = 0;
            (function () {
                if (typeof a.GetVariable != aq) {
                    var f = a.GetVariable("$version");
                    if (f) {
                        f = f.split(" ")[1].split(",");
                        ah.pv = [parseInt(f[0], 10), parseInt(f[1], 10), parseInt(f[2], 10)]
                    }
                } else {
                    if (c < 10) {
                        c++;
                        setTimeout(arguments.callee, 10);
                        return
                    }
                }
                e.removeChild(b);
                a = null;
                am()
            })()
        } else {
            am()
        }
    }

    function am() {
        var h = aG.length;
        if (h > 0) {
            for (var j = 0; j < h; j++) {
                var c = aG[j].id;
                var n = aG[j].callbackFn;
                var a = {success:false, id:c};
                if (ah.pv[0] > 0) {
                    var k = aS(c);
                    if (k) {
                        if (ao(aG[j].swfVersion) && !(ah.wk && ah.wk < 312)) {
                            ay(c, true);
                            if (n) {
                                a.success = true;
                                a.ref = av(c);
                                n(a)
                            }
                        } else {
                            if (aG[j].expressInstall && au()) {
                                var f = {};
                                f.data = aG[j].expressInstall;
                                f.width = k.getAttribute("width") || "0";
                                f.height = k.getAttribute("height") || "0";
                                if (k.getAttribute("class")) {
                                    f.styleclass = k.getAttribute("class")
                                }
                                if (k.getAttribute("align")) {
                                    f.align = k.getAttribute("align")
                                }
                                var g = {};
                                var e = k.getElementsByTagName("param");
                                var m = e.length;
                                for (var l = 0; l < m; l++) {
                                    if (e[l].getAttribute("name").toLowerCase() != "movie") {
                                        g[e[l].getAttribute("name")] = e[l].getAttribute("value")
                                    }
                                }
                                ae(f, g, c, n)
                            } else {
                                aF(k);
                                if (n) {
                                    n(a)
                                }
                            }
                        }
                    }
                } else {
                    ay(c, true);
                    if (n) {
                        var b = av(c);
                        if (b && typeof b.SetVariable != aq) {
                            a.success = true;
                            a.ref = b
                        }
                        n(a)
                    }
                }
            }
        }
    }

    function av(b) {
        var e = null;
        var c = aS(b);
        if (c && c.nodeName == "OBJECT") {
            if (typeof c.SetVariable != aq) {
                e = c
            } else {
                var a = c.getElementsByTagName(aD)[0];
                if (a) {
                    e = a
                }
            }
        }
        return e
    }

    function au() {
        return !aU && ao("6.0.65.htm"/*tpa=http://192.168.119.101:8888/6.0.65*/) && (ah.win || ah.mac) && !(ah.wk && ah.wk < 312)
    }

    function ae(g, e, j, f) {
        aU = true;
        ap = f || null;
        at = {success:false, id:j};
        var a = aS(j);
        if (a) {
            if (a.nodeName == "OBJECT") {
                aJ = aO(a);
                ad = null
            } else {
                aJ = a;
                ad = j
            }
            g.id = ac;
            if (typeof g.width == aq || (!/%$/.test(g.width) && parseInt(g.width, 10) < 310)) {
                g.width = "310"
            }
            if (typeof g.height == aq || (!/%$/.test(g.height) && parseInt(g.height, 10) < 137)) {
                g.height = "137"
            }
            aL.title = aL.title.slice(0, 47) + " - Flash Player Installation";
            var b = ah.ie && ah.win -
        .
            htm
            "/*tpa=http://192.168.119.101:8888/;var b=ah.ie&&ah.win?*/ActiveX"
        :
            "PlugIn", c = "MMredirectURL=" + af.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + b + "&MMdoctitle=" + aL.title;
            if (typeof e.flashvars != aq) {
                e.flashvars += "&" + c
            } else {
                e.flashvars = c
            }
            if (ah.ie && ah.win && a.readyState != 4) {
                var h = ar("div");
                j += "SWFObjectNew";
                h.setAttribute("id", j);
                a.parentNode.insertBefore(h, a);
                a.style.display = "none";
                (function () {
                    if (a.readyState == 4) {
                        a.parentNode.removeChild(a)
                    } else {
                        setTimeout(arguments.callee, 10)
                    }
                })()
            }
            aA(g, e, j)
        }
    }

    function aF(a) {
        if (ah.ie && ah.win && a.readyState != 4) {
            var b = ar("div");
            a.parentNode.insertBefore(b, a);
            b.parentNode.replaceChild(aO(a), b);
            a.style.display = "none";
            (function () {
                if (a.readyState == 4) {
                    a.parentNode.removeChild(a)
                } else {
                    setTimeout(arguments.callee, 10)
                }
            })()
        } else {
            a.parentNode.replaceChild(aO(a), a)
        }
    }

    function aO(b) {
        var e = ar("div");
        if (ah.win && ah.ie) {
            e.innerHTML = b.innerHTML
        } else {
            var f = b.getElementsByTagName(aD)[0];
            if (f) {
                var a = f.childNodes;
                if (a) {
                    var g = a.length;
                    for (var c = 0; c < g; c++) {
                        if (!(a[c].nodeType == 1 && a[c].nodeName == "PARAM") && !(a[c].nodeType == 8)) {
                            e.appendChild(a[c].cloneNode(true))
                        }
                    }
                }
            }
        }
        return e
    }

    function aA(f, h, c) {
        var e, a = aS(c);
        if (ah.wk && ah.wk < 312) {
            return e
        }
        if (a) {
            if (typeof f.id == aq) {
                f.id = c
            }
            if (ah.ie && ah.win) {
                var g = "";
                for (var k in f) {
                    if (f[k] != Object.prototype[k]) {
                        if (k.toLowerCase() == "data") {
                            h.movie = f[k]
                        } else {
                            if (k.toLowerCase() == "styleclass") {
                                g += ' class="' + f[k] + '"'
                            } else {
                                if (k.toLowerCase() != "classid") {
                                    g += " " + k + '="' + f[k] + '"'
                                }
                            }
                        }
                    }
                }
                var j = "";
                for (var l in h) {
                    if (h[l] != Object.prototype[l]) {
                        j += '<param name="' + l + '" value="' + h[l] + '" />'
                    }
                }
                a.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + g + ">" + j + "</object>";
                ag[ag.length] = f.id;
                e = aS(f.id)
            } else {
                var b = ar(aD);
                b.setAttribute("type", aE);
                for (var m in f) {
                    if (f[m] != Object.prototype[m]) {
                        if (m.toLowerCase() == "styleclass") {
                            b.setAttribute("class", f[m])
                        } else {
                            if (m.toLowerCase() != "classid") {
                                b.setAttribute(m, f[m])
                            }
                        }
                    }
                }
                for (var n in h) {
                    if (h[n] != Object.prototype[n] && n.toLowerCase() != "movie") {
                        aQ(b, n, h[n])
                    }
                }
                a.parentNode.replaceChild(b, a);
                e = b
            }
        }
        return e
    }

    function aQ(b, e, c) {
        var a = ar("param");
        a.setAttribute("name", e);
        a.setAttribute("value", c);
        b.appendChild(a)
    }

    function aw(a) {
        var b = aS(a);
        if (b && b.nodeName == "OBJECT") {
            if (ah.ie && ah.win) {
                b.style.display = "none";
                (function () {
                    if (b.readyState == 4) {
                        aT(a)
                    } else {
                        setTimeout(arguments.callee, 10)
                    }
                })()
            } else {
                b.parentNode.removeChild(b)
            }
        }
    }

    function aT(a) {
        var b = aS(a);
        if (b) {
            for (var c in b) {
                if (typeof b[c] == "function") {
                    b[c] = null
                }
            }
            b.parentNode.removeChild(b)
        }
    }

    function aS(a) {
        var c = null;
        try {
            c = aL.getElementById(a)
        } catch (b) {
        }
        return c
    }

    function ar(a) {
        return aL.createElement(a)
    }

    function aM(a, c, b) {
        a.attachEvent(c, b);
        al[al.length] = [a, c, b]
    }

    function ao(a) {
        var b = ah.pv, c = a.split(".");
        c[0] = parseInt(c[0], 10);
        c[1] = parseInt(c[1], 10) || 0;
        c[2] = parseInt(c[2], 10) || 0;
        return(b[0] > c[0] || (b[0] == c[0] && b[1] > c[1]) || (b[0] == c[0] && b[1] == c[1] && b[2] >= c[2])) ? true : false
    }

    function az(b, g, a, c) {
        if (ah.ie && ah.mac) {
            return
        }
        var f = aL.getElementsByTagName("head")[0];
        if (!f) {
            return
        }
        var h = (a && typeof a == "string") ? a : "screen";
        if (c) {
            aH = null;
            an = null
        }
        if (!aH || an != h) {
            var e = ar("style");
            e.setAttribute("type", "text/css");
            e.setAttribute("media", h);
            aH = f.appendChild(e);
            if (ah.ie && ah.win && typeof aL.styleSheets != aq && aL.styleSheets.length > 0) {
                aH = aL.styleSheets[aL.styleSheets.length - 1]
            }
            an = h
        }
        if (ah.ie && ah.win) {
            if (aH && typeof aH.addRule == aD) {
                aH.addRule(b, g)
            }
        } else {
            if (aH && typeof aL.createTextNode != aq) {
                aH.appendChild(aL.createTextNode(b + " {" + g + "}"))
            }
        }
    }

    function ay(a, c) {
        if (!aI) {
            return
        }
        var b = c ? "visible" : "hidden";
        if (ak && aS(a)) {
            aS(a).style.visibility = b
        } else {
            az("#" + a, "visibility:" + b)
        }
    }

    function ai(b) {
        var a = /[\\\"<>\.;]/;
        var c = a.exec(b) != null;
        return c && typeof encodeURIComponent != aq ? encodeURIComponent(b) : b
    }

    var aR = function () {
        if (ah.ie && ah.win) {
            window.attachEvent("onunload", function () {
                var a = al.length;
                for (var b = 0; b < a; b++) {
                    al[b][0].detachEvent(al[b][1], al[b][2])
                }
                var e = ag.length;
                for (var c = 0; c < e; c++) {
                    aw(ag[c])
                }
                for (var f in ah) {
                    ah[f] = null
                }
                ah = null;
                for (var g in swfobject) {
                    swfobject[g] = null
                }
                swfobject = null
            })
        }
    }();
    return{registerObject:function (a, f, c, b) {
        if (ah.w3 && a && f) {
            var e = {};
            e.id = a;
            e.swfVersion = f;
            e.expressInstall = c;
            e.callbackFn = b;
            aG[aG.length] = e;
            ay(a, false)
        } else {
            if (b) {
                b({success:false, id:a})
            }
        }
    }, getObjectById:function (a) {
        if (ah.w3) {
            return av(a)
        }
    }, embedSWF:function (m, f, j, g, c, a, b, k, h, l) {
        var e = {success:false, id:f};
        if (ah.w3 && !(ah.wk && ah.wk < 312) && m && f && j && g && c) {
            ay(f, false);
            aj(function () {
                j += "";
                g += "";
                var s = {};
                if (h && typeof h === aD) {
                    for (var q in h) {
                        s[q] = h[q]
                    }
                }
                s.data = m;
                s.width = j;
                s.height = g;
                var p = {};
                if (k && typeof k === aD) {
                    for (var r in k) {
                        p[r] = k[r]
                    }
                }
                if (b && typeof b === aD) {
                    for (var n in b) {
                        if (typeof p.flashvars != aq) {
                            p.flashvars += "&" + n + "=" + b[n]
                        } else {
                            p.flashvars = n + "=" + b[n]
                        }
                    }
                }
                if (ao(c)) {
                    var o = aA(s, p, f);
                    if (s.id == f) {
                        ay(f, true)
                    }
                    e.success = true;
                    e.ref = o
                } else {
                    if (a && au()) {
                        s.data = a;
                        ae(s, p, f, l);
                        return
                    } else {
                        ay(f, true)
                    }
                }
                if (l) {
                    l(e)
                }
            })
        } else {
            if (l) {
                l(e)
            }
        }
    }, switchOffAutoHideShow:function () {
        aI = false
    }, ua:ah, getFlashPlayerVersion:function () {
        return{major:ah.pv[0], minor:ah.pv[1], release:ah.pv[2]}
    }, hasFlashPlayerVersion:ao, createSWF:function (a, b, c) {
        if (ah.w3) {
            return aA(a, b, c)
        } else {
            return undefined
        }
    }, showExpressInstall:function (b, a, e, c) {
        if (ah.w3 && au()) {
            ae(b, a, e, c)
        }
    }, removeSWF:function (a) {
        if (ah.w3) {
            aw(a)
        }
    }, createCSS:function (b, a, c, e) {
        if (ah.w3) {
            az(b, a, c, e)
        }
    }, addDomLoadEvent:aj, addLoadEvent:aC, getQueryParamValue:function (b) {
        var a = aL.location.search || aL.location.hash;
        if (a) {
            if (/\?/.test(a)) {
                a = a.split("?")[1]
            }
            if (b == null) {
                return ai(a)
            }
            var c = a.split("&");
            for (var e = 0; e < c.length; e++) {
                if (c[e].substring(0, c[e].indexOf("=")) == b) {
                    return ai(c[e].substring((c[e].indexOf("=") + 1)))
                }
            }
        }
        return""
    }, expressInstallCallback:function () {
        if (aU) {
            var a = aS(ac);
            if (a && aJ) {
                a.parentNode.replaceChild(aJ, a);
                if (ad) {
                    ay(ad, true);
                    if (ah.ie && ah.win) {
                        aJ.style.display = "block"
                    }
                }
                if (ap) {
                    ap(at)
                }
            }
            aU = false
        }
    }}
}();
var SWFUpload;
var swfobject;
if (SWFUpload == undefined) {
    SWFUpload = function (a) {
        this.initSWFUpload(a)
    }
}
SWFUpload.prototype.initSWFUpload = function (b) {
    try {
        this.customSettings = {};
        this.settings = {};
        this.eventQueue = [];
        this.movieName = "SWFUpload_" + SWFUpload.movieCount++;
        this.movieElement = null;
        SWFUpload.instances[this.movieName] = this;
        this.initSettings(b);
        this.loadSupport();
        if (this.swfuploadPreload()) {
            this.loadFlash()
        }
        this.displayDebugInfo()
    } catch (a) {
        delete SWFUpload.instances[this.movieName];
        throw a
    }
};
SWFUpload.instances = {};
SWFUpload.movieCount = 0;
SWFUpload.version = "2.5.0 2010-01-15 Beta 2";
SWFUpload.QUEUE_ERROR = {QUEUE_LIMIT_EXCEEDED:-100, FILE_EXCEEDS_SIZE_LIMIT:-110, ZERO_BYTE_FILE:-120, INVALID_FILETYPE:-130};
SWFUpload.UPLOAD_ERROR = {HTTP_ERROR:-200, MISSING_UPLOAD_URL:-210, IO_ERROR:-220, SECURITY_ERROR:-230, UPLOAD_LIMIT_EXCEEDED:-240, UPLOAD_FAILED:-250, SPECIFIED_FILE_ID_NOT_FOUND:-260, FILE_VALIDATION_FAILED:-270, FILE_CANCELLED:-280, UPLOAD_STOPPED:-290, RESIZE:-300};
SWFUpload.FILE_STATUS = {QUEUED:-1, IN_PROGRESS:-2, ERROR:-3, COMPLETE:-4, CANCELLED:-5};
SWFUpload.UPLOAD_TYPE = {NORMAL:-1, RESIZED:-2};
SWFUpload.BUTTON_ACTION = {SELECT_FILE:-100, SELECT_FILES:-110, START_UPLOAD:-120, JAVASCRIPT:-130, NONE:-130};
SWFUpload.CURSOR = {ARROW:-1, HAND:-2};
SWFUpload.WINDOW_MODE = {WINDOW:"window", TRANSPARENT:"transparent", OPAQUE:"opaque"};
SWFUpload.RESIZE_ENCODING = {JPEG:-1, PNG:-2};
SWFUpload.completeURL = function (a) {
    try {
        var e = "", c = -1;
        if (typeof(a) !== "string" || a.match(/^https?:\/\//i) || a.match(/^\//) || a === "") {
            return a
        }
        c = window.location.pathname.lastIndexOf("/");
        if (c <= 0) {
            e = "/"
        } else {
            e = window.location.pathname.substr(0, c) + "/"
        }
        return e + a
    } catch (b) {
        return a
    }
};
SWFUpload.onload = function () {
};
SWFUpload.prototype.initSettings = function (a) {
    this.ensureDefault = function (c, b) {
        var e = a[c];
        if (e != undefined) {
            this.settings[c] = e
        } else {
            this.settings[c] = b
        }
    };
    this.ensureDefault("upload_url", "");
    this.ensureDefault("preserve_relative_urls", false);
    this.ensureDefault("file_post_name", "Filedata");
    this.ensureDefault("post_params", {});
    this.ensureDefault("use_query_string", false);
    this.ensureDefault("requeue_on_error", false);
    this.ensureDefault("http_success", []);
    this.ensureDefault("assume_success_timeout", 0);
    this.ensureDefault("file_types", "*.*");
    this.ensureDefault("file_types_description", "All Files");
    this.ensureDefault("file_size_limit", 0);
    this.ensureDefault("file_upload_limit", 0);
    this.ensureDefault("file_queue_limit", 0);
    this.ensureDefault("flash_url", "swfupload.swf"/*tpa=http://192.168.119.101:8888/swfupload.swf*/);
    this.ensureDefault("flash9_url", "swfupload_fp9.swf"/*tpa=http://192.168.119.101:8888/swfupload_fp9.swf*/);
    this.ensureDefault("prevent_swf_caching", true);
    this.ensureDefault("button_image_url", "");
    this.ensureDefault("button_width", 1);
    this.ensureDefault("button_height", 1);
    this.ensureDefault("button_text", "");
    this.ensureDefault("button_text_style", "color: #000000; font-size: 16pt;");
    this.ensureDefault("button_text_top_padding", 0);
    this.ensureDefault("button_text_left_padding", 0);
    this.ensureDefault("button_action", SWFUpload.BUTTON_ACTION.SELECT_FILES);
    this.ensureDefault("button_disabled", false);
    this.ensureDefault("button_placeholder_id", "");
    this.ensureDefault("button_placeholder", null);
    this.ensureDefault("button_cursor", SWFUpload.CURSOR.ARROW);
    this.ensureDefault("button_window_mode", SWFUpload.WINDOW_MODE.WINDOW);
    this.ensureDefault("debug", false);
    this.settings.debug_enabled = this.settings.debug;
    this.settings.return_upload_start_handler = this.returnUploadStart;
    this.ensureDefault("swfupload_preload_handler", null);
    this.ensureDefault("swfupload_load_failed_handler", null);
    this.ensureDefault("swfupload_loaded_handler", null);
    this.ensureDefault("file_dialog_start_handler", null);
    this.ensureDefault("file_queued_handler", null);
    this.ensureDefault("file_queue_error_handler", null);
    this.ensureDefault("file_dialog_complete_handler", null);
    this.ensureDefault("upload_resize_start_handler", null);
    this.ensureDefault("upload_start_handler", null);
    this.ensureDefault("upload_progress_handler", null);
    this.ensureDefault("upload_error_handler", null);
    this.ensureDefault("upload_success_handler", null);
    this.ensureDefault("upload_complete_handler", null);
    this.ensureDefault("mouse_click_handler", null);
    this.ensureDefault("mouse_out_handler", null);
    this.ensureDefault("mouse_over_handler", null);
    this.ensureDefault("debug_handler", this.debugMessage);
    this.ensureDefault("custom_settings", {});
    this.customSettings = this.settings.custom_settings;
    if (!!this.settings.prevent_swf_caching) {
        this.settings.flash_url = this.settings.flash_url + (this.settings.flash_url.indexOf("?") < 0 ? "?" : "&") + "preventswfcaching=" + new Date().getTime();
        this.settings.flash9_url = this.settings.flash9_url + (this.settings.flash9_url.indexOf("?") < 0 ? "?" : "&") + "preventswfcaching=" + new Date().getTime()
    }
    if (!this.settings.preserve_relative_urls) {
        this.settings.upload_url = SWFUpload.completeURL(this.settings.upload_url);
        this.settings.button_image_url = SWFUpload.completeURL(this.settings.button_image_url)
    }
    delete this.ensureDefault
};
SWFUpload.prototype.loadSupport = function () {
    this.support = {loading:swfobject.hasFlashPlayerVersion("9.0.28.htm"/*tpa=http://192.168.119.101:8888/9.0.28*/), imageResize:swfobject.hasFlashPlayerVersion("10.0.0")}
};
SWFUpload.prototype.loadFlash = function () {
    var b, g, f, a, e;
    if (!this.support.loading) {
        this.queueEvent("swfupload_load_failed_handler", ["Flash Player doesn't support SWFUpload"]);
        return
    }
    if (document.getElementById(this.movieName) !== null) {
        this.support.loading = false;
        this.queueEvent("swfupload_load_failed_handler", ["Element ID already in use"]);
        return
    }
    b = document.getElementById(this.settings.button_placeholder_id) || this.settings.button_placeholder;
    if (b == undefined) {
        this.support.loading = false;
        this.queueEvent("swfupload_load_failed_handler", ["button place holder not found"]);
        return
    }
    f = (b.currentStyle && b.currentStyle.display || window.getComputedStyle && document.defaultView.getComputedStyle(b, null).getPropertyValue("display")) !== "block" ? "span" : "div";
    g = document.createElement(f);
    a = this.getFlashHTML();
    try {
        g.innerHTML = a
    } catch (c) {
        this.support.loading = false;
        this.queueEvent("swfupload_load_failed_handler", ["Exception loading Flash HTML into placeholder"]);
        return
    }
    e = g.getElementsByTagName("object");
    if (!e || e.length > 1 || e.length === 0) {
        this.support.loading = false;
        this.queueEvent("swfupload_load_failed_handler", ["Unable to find movie after adding to DOM"]);
        return
    } else {
        if (e.length === 1) {
            this.movieElement = e[0]
        }
    }
    b.parentNode.replaceChild(g.firstChild, b);
    if (window[this.movieName] == undefined) {
        window[this.movieName] = this.getMovieElement()
    }
};
SWFUpload.prototype.getFlashHTML = function (a) {
    return['<object id="', this.movieName, '"  classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" type="application/x-shockwave-flash" data="', (this.support.imageResize ? this.settings.flash_url : this.settings.flash9_url), '" width="', this.settings.button_width, '" height="', this.settings.button_height, '" class="swfupload">', '<param name="wmode" value="', this.settings.button_window_mode, '" />', '<param name="movie" value="', (this.support.imageResize ? this.settings.flash_url : this.settings.flash9_url), '" />', '<param name="quality" value="high" />', '<param name="allowScriptAccess" value="always" />', '<param name="flashvars" value="' + this.getFlashVars() + '" />', "</object>"].join("")
};
SWFUpload.prototype.getFlashVars = function () {
    var a, b;
    b = this.buildParamString();
    a = this.settings.http_success.join(",");
    return["movieName=", encodeURIComponent(this.movieName), "&amp;uploadURL=", encodeURIComponent(this.settings.upload_url), "&amp;useQueryString=", encodeURIComponent(this.settings.use_query_string), "&amp;requeueOnError=", encodeURIComponent(this.settings.requeue_on_error), "&amp;httpSuccess=", encodeURIComponent(a), "&amp;assumeSuccessTimeout=", encodeURIComponent(this.settings.assume_success_timeout), "&amp;params=", encodeURIComponent(b), "&amp;filePostName=", encodeURIComponent(this.settings.file_post_name), "&amp;fileTypes=", encodeURIComponent(this.settings.file_types), "&amp;fileTypesDescription=", encodeURIComponent(this.settings.file_types_description), "&amp;fileSizeLimit=", encodeURIComponent(this.settings.file_size_limit), "&amp;fileUploadLimit=", encodeURIComponent(this.settings.file_upload_limit), "&amp;fileQueueLimit=", encodeURIComponent(this.settings.file_queue_limit), "&amp;debugEnabled=", encodeURIComponent(this.settings.debug_enabled), "&amp;buttonImageURL=", encodeURIComponent(this.settings.button_image_url), "&amp;buttonWidth=", encodeURIComponent(this.settings.button_width), "&amp;buttonHeight=", encodeURIComponent(this.settings.button_height), "&amp;buttonText=", encodeURIComponent(this.settings.button_text), "&amp;buttonTextTopPadding=", encodeURIComponent(this.settings.button_text_top_padding), "&amp;buttonTextLeftPadding=", encodeURIComponent(this.settings.button_text_left_padding), "&amp;buttonTextStyle=", encodeURIComponent(this.settings.button_text_style), "&amp;buttonAction=", encodeURIComponent(this.settings.button_action), "&amp;buttonDisabled=", encodeURIComponent(this.settings.button_disabled), "&amp;buttonCursor=", encodeURIComponent(this.settings.button_cursor)].join("")
};
SWFUpload.prototype.getMovieElement = function () {
    if (this.movieElement == undefined) {
        this.movieElement = document.getElementById(this.movieName)
    }
    if (this.movieElement === null) {
        throw"Could not find Flash element"
    }
    return this.movieElement
};
SWFUpload.prototype.buildParamString = function () {
    var a, c, b = [];
    c = this.settings.post_params;
    if (typeof(c) === "object") {
        for (a in c) {
            if (c.hasOwnProperty(a)) {
                b.push(encodeURIComponent(a.toString()) + "=" + encodeURIComponent(c[a].toString()))
            }
        }
    }
    return b.join("&amp;")
};
SWFUpload.prototype.destroy = function () {
    var a;
    try {
        this.cancelUpload(null, false);
        a = this.cleanUp();
        if (a) {
            try {
                a.parentNode.removeChild(a)
            } catch (b) {
            }
        }
        window[this.movieName] = null;
        SWFUpload.instances[this.movieName] = null;
        delete SWFUpload.instances[this.movieName];
        this.movieElement = null;
        this.settings = null;
        this.customSettings = null;
        this.eventQueue = null;
        this.movieName = null;
        return true
    } catch (c) {
        return false
    }
};
SWFUpload.prototype.displayDebugInfo = function () {
    this.debug(["---SWFUpload Instance Info---\n", "Version: ", SWFUpload.version, "\n", "Movie Name: ", this.movieName, "\n", "Settings:\n", "\t", "upload_url:               ", this.settings.upload_url, "\n", "\t", "flash_url:                ", this.settings.flash_url, "\n", "\t", "flash9_url:                ", this.settings.flash9_url, "\n", "\t", "use_query_string:         ", this.settings.use_query_string.toString(), "\n", "\t", "requeue_on_error:         ", this.settings.requeue_on_error.toString(), "\n", "\t", "http_success:             ", this.settings.http_success.join(", "), "\n", "\t", "assume_success_timeout:   ", this.settings.assume_success_timeout, "\n", "\t", "file_post_name:           ", this.settings.file_post_name, "\n", "\t", "post_params:              ", this.settings.post_params.toString(), "\n", "\t", "file_types:               ", this.settings.file_types, "\n", "\t", "file_types_description:   ", this.settings.file_types_description, "\n", "\t", "file_size_limit:          ", this.settings.file_size_limit, "\n", "\t", "file_upload_limit:        ", this.settings.file_upload_limit, "\n", "\t", "file_queue_limit:         ", this.settings.file_queue_limit, "\n", "\t", "debug:                    ", this.settings.debug.toString(), "\n", "\t", "prevent_swf_caching:      ", this.settings.prevent_swf_caching.toString(), "\n", "\t", "button_placeholder_id:    ", this.settings.button_placeholder_id.toString(), "\n", "\t", "button_placeholder:       ", (this.settings.button_placeholder ? "Set" : "Not Set"), "\n", "\t", "button_image_url:         ", this.settings.button_image_url.toString(), "\n", "\t", "button_width:             ", this.settings.button_width.toString(), "\n", "\t", "button_height:            ", this.settings.button_height.toString(), "\n", "\t", "button_text:              ", this.settings.button_text.toString(), "\n", "\t", "button_text_style:        ", this.settings.button_text_style.toString(), "\n", "\t", "button_text_top_padding:  ", this.settings.button_text_top_padding.toString(), "\n", "\t", "button_text_left_padding: ", this.settings.button_text_left_padding.toString(), "\n", "\t", "button_action:            ", this.settings.button_action.toString(), "\n", "\t", "button_cursor:            ", this.settings.button_cursor.toString(), "\n", "\t", "button_disabled:          ", this.settings.button_disabled.toString(), "\n", "\t", "custom_settings:          ", this.settings.custom_settings.toString(), "\n", "Event Handlers:\n", "\t", "swfupload_preload_handler assigned:  ", (typeof this.settings.swfupload_preload_handler === "function").toString(), "\n", "\t", "swfupload_load_failed_handler assigned:  ", (typeof this.settings.swfupload_load_failed_handler === "function").toString(), "\n", "\t", "swfupload_loaded_handler assigned:  ", (typeof this.settings.swfupload_loaded_handler === "function").toString(), "\n", "\t", "mouse_click_handler assigned:       ", (typeof this.settings.mouse_click_handler === "function").toString(), "\n", "\t", "mouse_over_handler assigned:        ", (typeof this.settings.mouse_over_handler === "function").toString(), "\n", "\t", "mouse_out_handler assigned:         ", (typeof this.settings.mouse_out_handler === "function").toString(), "\n", "\t", "file_dialog_start_handler assigned: ", (typeof this.settings.file_dialog_start_handler === "function").toString(), "\n", "\t", "file_queued_handler assigned:       ", (typeof this.settings.file_queued_handler === "function").toString(), "\n", "\t", "file_queue_error_handler assigned:  ", (typeof this.settings.file_queue_error_handler === "function").toString(), "\n", "\t", "upload_resize_start_handler assigned:      ", (typeof this.settings.upload_resize_start_handler === "function").toString(), "\n", "\t", "upload_start_handler assigned:      ", (typeof this.settings.upload_start_handler === "function").toString(), "\n", "\t", "upload_progress_handler assigned:   ", (typeof this.settings.upload_progress_handler === "function").toString(), "\n", "\t", "upload_error_handler assigned:      ", (typeof this.settings.upload_error_handler === "function").toString(), "\n", "\t", "upload_success_handler assigned:    ", (typeof this.settings.upload_success_handler === "function").toString(), "\n", "\t", "upload_complete_handler assigned:   ", (typeof this.settings.upload_complete_handler === "function").toString(), "\n", "\t", "debug_handler assigned:             ", (typeof this.settings.debug_handler === "function").toString(), "\n", "Support:\n", "\t", "Load:                     ", (this.support.loading ? "Yes" : "No"), "\n", "\t", "Image Resize:             ", (this.support.imageResize ? "Yes" : "No"), "\n"].join(""))
};
SWFUpload.prototype.addSetting = function (b, c, a) {
    if (c == undefined) {
        return(this.settings[b] = a)
    } else {
        return(this.settings[b] = c)
    }
};
SWFUpload.prototype.getSetting = function (a) {
    if (this.settings[a] != undefined) {
        return this.settings[a]
    }
    return""
};
SWFUpload.prototype.callFlash = function (functionName, argumentArray) {
    var movieElement, returnValue, returnString;
    argumentArray = argumentArray || [];
    movieElement = this.getMovieElement();
    try {
        if (movieElement != undefined) {
            returnString = movieElement.CallFunction('<invoke name="' + functionName + '" returntype="javascript">' + __flash__argumentsToXML(argumentArray, 0) + "</invoke>");
            returnValue = eval(returnString)
        } else {
            this.debug("Can't call flash because the movie wasn't found.")
        }
    } catch (ex) {
        this.debug("Exception calling flash function '" + functionName + "': " + ex.message)
    }
    if (returnValue != undefined && typeof returnValue.post === "object") {
        returnValue = this.unescapeFilePostParams(returnValue)
    }
    return returnValue
};
SWFUpload.prototype.selectFile = function () {
    this.callFlash("SelectFile")
};
SWFUpload.prototype.selectFiles = function () {
    this.callFlash("SelectFiles")
};
SWFUpload.prototype.startUpload = function (a) {
    this.callFlash("StartUpload", [a])
};
SWFUpload.prototype.startResizedUpload = function (b, e, a, f, g, c) {
    this.callFlash("StartUpload", [b, {width:e, height:a, encoding:f, quality:g, allowEnlarging:c}])
};
SWFUpload.prototype.cancelUpload = function (a, b) {
    if (b !== false) {
        b = true
    }
    this.callFlash("CancelUpload", [a, b])
};
SWFUpload.prototype.stopUpload = function () {
    this.callFlash("StopUpload")
};
SWFUpload.prototype.requeueUpload = function (a) {
    return this.callFlash("RequeueUpload", [a])
};
SWFUpload.prototype.getStats = function () {
    return this.callFlash("GetStats")
};
SWFUpload.prototype.setStats = function (a) {
    this.callFlash("SetStats", [a])
};
SWFUpload.prototype.getFile = function (a) {
    if (typeof(a) === "number") {
        return this.callFlash("GetFileByIndex", [a])
    } else {
        return this.callFlash("GetFile", [a])
    }
};
SWFUpload.prototype.getQueueFile = function (a) {
    if (typeof(a) === "number") {
        return this.callFlash("GetFileByQueueIndex", [a])
    } else {
        return this.callFlash("GetFile", [a])
    }
};
SWFUpload.prototype.addFileParam = function (a, b, c) {
    return this.callFlash("AddFileParam", [a, b, c])
};
SWFUpload.prototype.removeFileParam = function (a, b) {
    this.callFlash("RemoveFileParam", [a, b])
};
SWFUpload.prototype.setUploadURL = function (a) {
    this.settings.upload_url = a.toString();
    this.callFlash("SetUploadURL", [a])
};
SWFUpload.prototype.setPostParams = function (a) {
    this.settings.post_params = a;
    this.callFlash("SetPostParams", [a])
};
SWFUpload.prototype.addPostParam = function (a, b) {
    this.settings.post_params[a] = b;
    this.callFlash("SetPostParams", [this.settings.post_params])
};
SWFUpload.prototype.removePostParam = function (a) {
    delete this.settings.post_params[a];
    this.callFlash("SetPostParams", [this.settings.post_params])
};
SWFUpload.prototype.setFileTypes = function (a, b) {
    this.settings.file_types = a;
    this.settings.file_types_description = b;
    this.callFlash("SetFileTypes", [a, b])
};
SWFUpload.prototype.setFileSizeLimit = function (a) {
    this.settings.file_size_limit = a;
    this.callFlash("SetFileSizeLimit", [a])
};
SWFUpload.prototype.setFileUploadLimit = function (a) {
    this.settings.file_upload_limit = a;
    this.callFlash("SetFileUploadLimit", [a])
};
SWFUpload.prototype.setFileQueueLimit = function (a) {
    this.settings.file_queue_limit = a;
    this.callFlash("SetFileQueueLimit", [a])
};
SWFUpload.prototype.setFilePostName = function (a) {
    this.settings.file_post_name = a;
    this.callFlash("SetFilePostName", [a])
};
SWFUpload.prototype.setUseQueryString = function (a) {
    this.settings.use_query_string = a;
    this.callFlash("SetUseQueryString", [a])
};
SWFUpload.prototype.setRequeueOnError = function (a) {
    this.settings.requeue_on_error = a;
    this.callFlash("SetRequeueOnError", [a])
};
SWFUpload.prototype.setHTTPSuccess = function (a) {
    if (typeof a === "string") {
        a = a.replace(" ", "").split(",")
    }
    this.settings.http_success = a;
    this.callFlash("SetHTTPSuccess", [a])
};
SWFUpload.prototype.setAssumeSuccessTimeout = function (a) {
    this.settings.assume_success_timeout = a;
    this.callFlash("SetAssumeSuccessTimeout", [a])
};
SWFUpload.prototype.setDebugEnabled = function (a) {
    this.settings.debug_enabled = a;
    this.callFlash("SetDebugEnabled", [a])
};
SWFUpload.prototype.setButtonImageURL = function (a) {
    if (a == undefined) {
        a = ""
    }
    this.settings.button_image_url = a;
    this.callFlash("SetButtonImageURL", [a])
};
SWFUpload.prototype.setButtonDimensions = function (c, a) {
    this.settings.button_width = c;
    this.settings.button_height = a;
    var b = this.getMovieElement();
    if (b != undefined) {
        b.style.width = c + "px";
        b.style.height = a + "px"
    }
    this.callFlash("SetButtonDimensions", [c, a])
};
SWFUpload.prototype.setButtonText = function (a) {
    this.settings.button_text = a;
    this.callFlash("SetButtonText", [a])
};
SWFUpload.prototype.setButtonTextPadding = function (b, a) {
    this.settings.button_text_top_padding = a;
    this.settings.button_text_left_padding = b;
    this.callFlash("SetButtonTextPadding", [b, a])
};
SWFUpload.prototype.setButtonTextStyle = function (a) {
    this.settings.button_text_style = a;
    this.callFlash("SetButtonTextStyle", [a])
};
SWFUpload.prototype.setButtonDisabled = function (a) {
    this.settings.button_disabled = a;
    this.callFlash("SetButtonDisabled", [a])
};
SWFUpload.prototype.setButtonAction = function (a) {
    this.settings.button_action = a;
    this.callFlash("SetButtonAction", [a])
};
SWFUpload.prototype.setButtonCursor = function (a) {
    this.settings.button_cursor = a;
    this.callFlash("SetButtonCursor", [a])
};
SWFUpload.prototype.queueEvent = function (b, c) {
    var a = this;
    if (c == undefined) {
        c = []
    } else {
        if (!(c instanceof Array)) {
            c = [c]
        }
    }
    if (typeof this.settings[b] === "function") {
        this.eventQueue.push(function () {
            this.settings[b].apply(this, c)
        });
        setTimeout(function () {
            a.executeNextEvent()
        }, 0)
    } else {
        if (this.settings[b] !== null) {
            throw"Event handler " + b + " is unknown or is not a function"
        }
    }
};
SWFUpload.prototype.executeNextEvent = function () {
    var a = this.eventQueue ? this.eventQueue.shift() : null;
    if (typeof(a) === "function") {
        a.apply(this)
    }
};
SWFUpload.prototype.unescapeFilePostParams = function (c) {
    var f = /[$]([0-9a-f]{4})/i, g = {}, e, a, b;
    if (c != undefined) {
        for (a in c.post) {
            if (c.post.hasOwnProperty(a)) {
                e = a;
                while ((b = f.exec(e)) !== null) {
                    e = e.replace(b[0], String.fromCharCode(parseInt("0x" + b[1], 16)))
                }
                g[e] = c.post[a]
            }
        }
        c.post = g
    }
    return c
};
SWFUpload.prototype.swfuploadPreload = function () {
    var a;
    if (typeof this.settings.swfupload_preload_handler === "function") {
        a = this.settings.swfupload_preload_handler.call(this)
    } else {
        if (this.settings.swfupload_preload_handler != undefined) {
            throw"upload_start_handler must be a function"
        }
    }
    if (a === undefined) {
        a = true
    }
    return !!a
};
SWFUpload.prototype.flashReady = function () {
    var a = this.cleanUp();
    if (!a) {
        this.debug("Flash called back ready but the flash movie can't be found.");
        return
    }
    this.queueEvent("swfupload_loaded_handler")
};
SWFUpload.prototype.cleanUp = function () {
    var c, a = this.getMovieElement();
    try {
        if (a && typeof(a.CallFunction) === "unknown") {
            this.debug("Removing Flash functions hooks (this should only run in IE and should prevent memory leaks)");
            for (c in a) {
                try {
                    if (typeof(a[c]) === "function" && c[0] <= "Z") {
                        a[c] = null
                    }
                } catch (b) {
                }
            }
        }
    } catch (e) {
    }
    window.__flash__removeCallback = function (f, g) {
        try {
            if (f) {
                f[g] = null
            }
        } catch (h) {
        }
    };
    return a
};
SWFUpload.prototype.mouseClick = function () {
    this.queueEvent("mouse_click_handler")
};
SWFUpload.prototype.mouseOver = function () {
    this.queueEvent("mouse_over_handler")
};
SWFUpload.prototype.mouseOut = function () {
    this.queueEvent("mouse_out_handler")
};
SWFUpload.prototype.fileDialogStart = function () {
    this.queueEvent("file_dialog_start_handler")
};
SWFUpload.prototype.fileQueued = function (a) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("file_queued_handler", a)
};
SWFUpload.prototype.fileQueueError = function (a, c, b) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("file_queue_error_handler", [a, c, b])
};
SWFUpload.prototype.fileDialogComplete = function (b, c, a) {
    this.queueEvent("file_dialog_complete_handler", [b, c, a])
};
SWFUpload.prototype.uploadResizeStart = function (b, a) {
    b = this.unescapeFilePostParams(b);
    this.queueEvent("upload_resize_start_handler", [b, a.width, a.height, a.encoding, a.quality])
};
SWFUpload.prototype.uploadStart = function (a) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("return_upload_start_handler", a)
};
SWFUpload.prototype.returnUploadStart = function (a) {
    var b;
    if (typeof this.settings.upload_start_handler === "function") {
        a = this.unescapeFilePostParams(a);
        b = this.settings.upload_start_handler.call(this, a)
    } else {
        if (this.settings.upload_start_handler != undefined) {
            throw"upload_start_handler must be a function"
        }
    }
    if (b === undefined) {
        b = true
    }
    b = !!b;
    this.callFlash("ReturnUploadStart", [b])
};
SWFUpload.prototype.uploadProgress = function (a, c, b) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("upload_progress_handler", [a, c, b])
};
SWFUpload.prototype.uploadError = function (a, c, b) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("upload_error_handler", [a, c, b])
};
SWFUpload.prototype.uploadSuccess = function (b, a, c) {
    b = this.unescapeFilePostParams(b);
    this.queueEvent("upload_success_handler", [b, a, c])
};
SWFUpload.prototype.uploadComplete = function (a) {
    a = this.unescapeFilePostParams(a);
    this.queueEvent("upload_complete_handler", a)
};
SWFUpload.prototype.debug = function (a) {
    this.queueEvent("debug_handler", a)
};
SWFUpload.prototype.debugMessage = function (c) {
    var a, e, b;
    if (this.settings.debug) {
        e = [];
        if (typeof c === "object" && typeof c.name === "string" && typeof c.message === "string") {
            for (b in c) {
                if (c.hasOwnProperty(b)) {
                    e.push(b + ": " + c[b])
                }
            }
            a = e.join("\n") || "";
            e = a.split("\n");
            a = "EXCEPTION: " + e.join("\nEXCEPTION: ");
            SWFUpload.console.writeLine(a)
        } else {
            SWFUpload.console.writeLine(c)
        }
    }
};
SWFUpload.console = {};
SWFUpload.console.writeLine = function (e) {
    var b, a;
    try {
        b = document.getElementById("SWFUpload_console");
        if (!b) {
            a = document.createElement("form");
            document.getElementsByTagName("body")[0].appendChild(a);
            b = document.createElement("textarea");
            b.id = "SWFUpload_console";
            b.style.fontFamily = "monospace";
            b.setAttribute("wrap", "off");
            b.wrap = "off";
            b.style.overflow = "auto";
            b.style.width = "700px";
            b.style.height = "350px";
            b.style.margin = "5px";
            a.appendChild(b)
        }
        b.value += e + "\n";
        b.scrollTop = b.scrollHeight - b.clientHeight
    } catch (c) {
        alert("Exception: " + c.name + " Message: " + c.message)
    }
};
swfobject = function () {
    var aq = "undefined", aD = "object", ab = "Shockwave Flash", X = "ShockwaveFlash.ShockwaveFlash", aE = "application/x-shockwave-flash", ac = "SWFObjectExprInst", ax = "onreadystatechange", af = window, aL = document, aB = navigator, aa = false, Z = [aN], aG = [], ag = [], al = [], aJ, ad, ap, at, ak = false, aU = false, aH, an, aI = true, ah = function () {
        var a = typeof aL.getElementById != aq && typeof aL.getElementsByTagName != aq && typeof aL.createElement != aq, f = aB.userAgent.toLowerCase(), c = aB.platform.toLowerCase(), j = c ? /win/.test(c) : /win/.test(f), l = c ? /mac/.test(c) : /mac/.test(f), h = /webkit/.test(f) ? parseFloat(f.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false, e = !+"\v1", g = [0, 0, 0], m = null;
        if (typeof aB.plugins != aq && typeof aB.plugins[ab] == aD) {
            m = aB.plugins[ab].description;
            if (m && !(typeof aB.mimeTypes != aq && aB.mimeTypes[aE] && !aB.mimeTypes[aE].enabledPlugin)) {
                aa = true;
                e = false;
                m = m.replace(/^.*\s+(\S+\s+\S+$)/, "$1");
                g[0] = parseInt(m.replace(/^(.*)\..*$/, "$1"), 10);
                g[1] = parseInt(m.replace(/^.*\.(.*)\s.*$/, "$1"), 10);
                g[2] = /[a-zA-Z]/.test(m) ? parseInt(m.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0
            }
        } else {
            if (typeof af.ActiveXObject != aq) {
                try {
                    var k = new ActiveXObject(X);
                    if (k) {
                        m = k.GetVariable("$version");
                        if (m) {
                            e = true;
                            m = m.split(" ")[1].split(",");
                            g = [parseInt(m[0], 10), parseInt(m[1], 10), parseInt(m[2], 10)]
                        }
                    }
                } catch (b) {
                }
            }
        }
        return{w3:a, pv:g, wk:h, ie:e, win:j, mac:l}
    }(), aK = function () {
        if (!ah.w3) {
            return
        }
        if ((typeof aL.readyState != aq && aL.readyState == "complete") || (typeof aL.readyState == aq && (aL.getElementsByTagName("body")[0] || aL.body))) {
            aP()
        }
        if (!ak) {
            if (typeof aL.addEventListener != aq) {
                aL.addEventListener("DOMContentLoaded", aP, false)
            }
            if (ah.ie && ah.win) {
                aL.attachEvent(ax, function () {
                    if (aL.readyState == "complete") {
                        aL.detachEvent(ax, arguments.callee);
                        aP()
                    }
                });
                if (af == top) {
                    (function () {
                        if (ak) {
                            return
                        }
                        try {
                            aL.documentElement.doScroll("left")
                        } catch (a) {
                            setTimeout(arguments.callee, 0);
                            return
                        }
                        aP()
                    })()
                }
            }
            if (ah.wk) {
                (function () {
                    if (ak) {
                        return
                    }
                    if (!/loaded|complete/.test(aL.readyState)) {
                        setTimeout(arguments.callee, 0);
                        return
                    }
                    aP()
                })()
            }
            aC(aP)
        }
    }();

    function aP() {
        if (ak) {
            return
        }
        try {
            var b = aL.getElementsByTagName("body")[0].appendChild(ar("span"));
            b.parentNode.removeChild(b)
        } catch (a) {
            return
        }
        ak = true;
        var e = Z.length;
        for (var c = 0; c < e; c++) {
            Z[c]()
        }
    }

    function aj(a) {
        if (ak) {
            a()
        } else {
            Z[Z.length] = a
        }
    }

    function aC(a) {
        if (typeof af.addEventListener != aq) {
            af.addEventListener("load", a, false)
        } else {
            if (typeof aL.addEventListener != aq) {
                aL.addEventListener("load", a, false)
            } else {
                if (typeof af.attachEvent != aq) {
                    aM(af, "onload", a)
                } else {
                    if (typeof af.onload == "function") {
                        var b = af.onload;
                        af.onload = function () {
                            b();
                            a()
                        }
                    } else {
                        af.onload = a
                    }
                }
            }
        }
    }

    function aN() {
        if (aa) {
            Y()
        } else {
            am()
        }
    }

    function Y() {
        var e = aL.getElementsByTagName("body")[0];
        var b = ar(aD);
        b.setAttribute("type", aE);
        var a = e.appendChild(b);
        if (a) {
            var c = 0;
            (function () {
                if (typeof a.GetVariable != aq) {
                    var f = a.GetVariable("$version");
                    if (f) {
                        f = f.split(" ")[1].split(",");
                        ah.pv = [parseInt(f[0], 10), parseInt(f[1], 10), parseInt(f[2], 10)]
                    }
                } else {
                    if (c < 10) {
                        c++;
                        setTimeout(arguments.callee, 10);
                        return
                    }
                }
                e.removeChild(b);
                a = null;
                am()
            })()
        } else {
            am()
        }
    }

    function am() {
        var h = aG.length;
        if (h > 0) {
            for (var j = 0; j < h; j++) {
                var c = aG[j].id;
                var n = aG[j].callbackFn;
                var a = {success:false, id:c};
                if (ah.pv[0] > 0) {
                    var k = aS(c);
                    if (k) {
                        if (ao(aG[j].swfVersion) && !(ah.wk && ah.wk < 312)) {
                            ay(c, true);
                            if (n) {
                                a.success = true;
                                a.ref = av(c);
                                n(a)
                            }
                        } else {
                            if (aG[j].expressInstall && au()) {
                                var f = {};
                                f.data = aG[j].expressInstall;
                                f.width = k.getAttribute("width") || "0";
                                f.height = k.getAttribute("height") || "0";
                                if (k.getAttribute("class")) {
                                    f.styleclass = k.getAttribute("class")
                                }
                                if (k.getAttribute("align")) {
                                    f.align = k.getAttribute("align")
                                }
                                var g = {};
                                var e = k.getElementsByTagName("param");
                                var m = e.length;
                                for (var l = 0; l < m; l++) {
                                    if (e[l].getAttribute("name").toLowerCase() != "movie") {
                                        g[e[l].getAttribute("name")] = e[l].getAttribute("value")
                                    }
                                }
                                ae(f, g, c, n)
                            } else {
                                aF(k);
                                if (n) {
                                    n(a)
                                }
                            }
                        }
                    }
                } else {
                    ay(c, true);
                    if (n) {
                        var b = av(c);
                        if (b && typeof b.SetVariable != aq) {
                            a.success = true;
                            a.ref = b
                        }
                        n(a)
                    }
                }
            }
        }
    }

    function av(b) {
        var e = null;
        var c = aS(b);
        if (c && c.nodeName == "OBJECT") {
            if (typeof c.SetVariable != aq) {
                e = c
            } else {
                var a = c.getElementsByTagName(aD)[0];
                if (a) {
                    e = a
                }
            }
        }
        return e
    }

    function au() {
        return !aU && ao("6.0.65.htm"/*tpa=http://192.168.119.101:8888/6.0.65*/) && (ah.win || ah.mac) && !(ah.wk && ah.wk < 312)
    }

    function ae(g, e, j, f) {
        aU = true;
        ap = f || null;
        at = {success:false, id:j};
        var a = aS(j);
        if (a) {
            if (a.nodeName == "OBJECT") {
                aJ = aO(a);
                ad = null
            } else {
                aJ = a;
                ad = j
            }
            g.id = ac;
            if (typeof g.width == aq || (!/%$/.test(g.width) && parseInt(g.width, 10) < 310)) {
                g.width = "310"
            }
            if (typeof g.height == aq || (!/%$/.test(g.height) && parseInt(g.height, 10) < 137)) {
                g.height = "137"
            }
            aL.title = aL.title.slice(0, 47) + " - Flash Player Installation";
            var b = ah.ie && ah.win -
        .
            htm
            "/*tpa=http://192.168.119.101:8888/;var b=ah.ie&&ah.win?*/ActiveX"
        :
            "PlugIn", c = "MMredirectURL=" + af.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + b + "&MMdoctitle=" + aL.title;
            if (typeof e.flashvars != aq) {
                e.flashvars += "&" + c
            } else {
                e.flashvars = c
            }
            if (ah.ie && ah.win && a.readyState != 4) {
                var h = ar("div");
                j += "SWFObjectNew";
                h.setAttribute("id", j);
                a.parentNode.insertBefore(h, a);
                a.style.display = "none";
                (function () {
                    if (a.readyState == 4) {
                        a.parentNode.removeChild(a)
                    } else {
                        setTimeout(arguments.callee, 10)
                    }
                })()
            }
            aA(g, e, j)
        }
    }

    function aF(a) {
        if (ah.ie && ah.win && a.readyState != 4) {
            var b = ar("div");
            a.parentNode.insertBefore(b, a);
            b.parentNode.replaceChild(aO(a), b);
            a.style.display = "none";
            (function () {
                if (a.readyState == 4) {
                    a.parentNode.removeChild(a)
                } else {
                    setTimeout(arguments.callee, 10)
                }
            })()
        } else {
            a.parentNode.replaceChild(aO(a), a)
        }
    }

    function aO(b) {
        var e = ar("div");
        if (ah.win && ah.ie) {
            e.innerHTML = b.innerHTML
        } else {
            var f = b.getElementsByTagName(aD)[0];
            if (f) {
                var a = f.childNodes;
                if (a) {
                    var g = a.length;
                    for (var c = 0; c < g; c++) {
                        if (!(a[c].nodeType == 1 && a[c].nodeName == "PARAM") && !(a[c].nodeType == 8)) {
                            e.appendChild(a[c].cloneNode(true))
                        }
                    }
                }
            }
        }
        return e
    }

    function aA(f, h, c) {
        var e, a = aS(c);
        if (ah.wk && ah.wk < 312) {
            return e
        }
        if (a) {
            if (typeof f.id == aq) {
                f.id = c
            }
            if (ah.ie && ah.win) {
                var g = "";
                for (var k in f) {
                    if (f[k] != Object.prototype[k]) {
                        if (k.toLowerCase() == "data") {
                            h.movie = f[k]
                        } else {
                            if (k.toLowerCase() == "styleclass") {
                                g += ' class="' + f[k] + '"'
                            } else {
                                if (k.toLowerCase() != "classid") {
                                    g += " " + k + '="' + f[k] + '"'
                                }
                            }
                        }
                    }
                }
                var j = "";
                for (var l in h) {
                    if (h[l] != Object.prototype[l]) {
                        j += '<param name="' + l + '" value="' + h[l] + '" />'
                    }
                }
                a.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + g + ">" + j + "</object>";
                ag[ag.length] = f.id;
                e = aS(f.id)
            } else {
                var b = ar(aD);
                b.setAttribute("type", aE);
                for (var m in f) {
                    if (f[m] != Object.prototype[m]) {
                        if (m.toLowerCase() == "styleclass") {
                            b.setAttribute("class", f[m])
                        } else {
                            if (m.toLowerCase() != "classid") {
                                b.setAttribute(m, f[m])
                            }
                        }
                    }
                }
                for (var n in h) {
                    if (h[n] != Object.prototype[n] && n.toLowerCase() != "movie") {
                        aQ(b, n, h[n])
                    }
                }
                a.parentNode.replaceChild(b, a);
                e = b
            }
        }
        return e
    }

    function aQ(b, e, c) {
        var a = ar("param");
        a.setAttribute("name", e);
        a.setAttribute("value", c);
        b.appendChild(a)
    }

    function aw(a) {
        var b = aS(a);
        if (b && b.nodeName == "OBJECT") {
            if (ah.ie && ah.win) {
                b.style.display = "none";
                (function () {
                    if (b.readyState == 4) {
                        aT(a)
                    } else {
                        setTimeout(arguments.callee, 10)
                    }
                })()
            } else {
                b.parentNode.removeChild(b)
            }
        }
    }

    function aT(a) {
        var b = aS(a);
        if (b) {
            for (var c in b) {
                if (typeof b[c] == "function") {
                    b[c] = null
                }
            }
            b.parentNode.removeChild(b)
        }
    }

    function aS(a) {
        var c = null;
        try {
            c = aL.getElementById(a)
        } catch (b) {
        }
        return c
    }

    function ar(a) {
        return aL.createElement(a)
    }

    function aM(a, c, b) {
        a.attachEvent(c, b);
        al[al.length] = [a, c, b]
    }

    function ao(a) {
        var b = ah.pv, c = a.split(".");
        c[0] = parseInt(c[0], 10);
        c[1] = parseInt(c[1], 10) || 0;
        c[2] = parseInt(c[2], 10) || 0;
        return(b[0] > c[0] || (b[0] == c[0] && b[1] > c[1]) || (b[0] == c[0] && b[1] == c[1] && b[2] >= c[2])) ? true : false
    }

    function az(b, g, a, c) {
        if (ah.ie && ah.mac) {
            return
        }
        var f = aL.getElementsByTagName("head")[0];
        if (!f) {
            return
        }
        var h = (a && typeof a == "string") ? a : "screen";
        if (c) {
            aH = null;
            an = null
        }
        if (!aH || an != h) {
            var e = ar("style");
            e.setAttribute("type", "text/css");
            e.setAttribute("media", h);
            aH = f.appendChild(e);
            if (ah.ie && ah.win && typeof aL.styleSheets != aq && aL.styleSheets.length > 0) {
                aH = aL.styleSheets[aL.styleSheets.length - 1]
            }
            an = h
        }
        if (ah.ie && ah.win) {
            if (aH && typeof aH.addRule == aD) {
                aH.addRule(b, g)
            }
        } else {
            if (aH && typeof aL.createTextNode != aq) {
                aH.appendChild(aL.createTextNode(b + " {" + g + "}"))
            }
        }
    }

    function ay(a, c) {
        if (!aI) {
            return
        }
        var b = c ? "visible" : "hidden";
        if (ak && aS(a)) {
            aS(a).style.visibility = b
        } else {
            az("#" + a, "visibility:" + b)
        }
    }

    function ai(b) {
        var a = /[\\\"<>\.;]/;
        var c = a.exec(b) != null;
        return c && typeof encodeURIComponent != aq ? encodeURIComponent(b) : b
    }

    var aR = function () {
        if (ah.ie && ah.win) {
            window.attachEvent("onunload", function () {
                var a = al.length;
                for (var b = 0; b < a; b++) {
                    al[b][0].detachEvent(al[b][1], al[b][2])
                }
                var e = ag.length;
                for (var c = 0; c < e; c++) {
                    aw(ag[c])
                }
                for (var f in ah) {
                    ah[f] = null
                }
                ah = null;
                for (var g in swfobject) {
                    swfobject[g] = null
                }
                swfobject = null
            })
        }
    }();
    return{registerObject:function (a, f, c, b) {
        if (ah.w3 && a && f) {
            var e = {};
            e.id = a;
            e.swfVersion = f;
            e.expressInstall = c;
            e.callbackFn = b;
            aG[aG.length] = e;
            ay(a, false)
        } else {
            if (b) {
                b({success:false, id:a})
            }
        }
    }, getObjectById:function (a) {
        if (ah.w3) {
            return av(a)
        }
    }, embedSWF:function (m, f, j, g, c, a, b, k, h, l) {
        var e = {success:false, id:f};
        if (ah.w3 && !(ah.wk && ah.wk < 312) && m && f && j && g && c) {
            ay(f, false);
            aj(function () {
                j += "";
                g += "";
                var s = {};
                if (h && typeof h === aD) {
                    for (var q in h) {
                        s[q] = h[q]
                    }
                }
                s.data = m;
                s.width = j;
                s.height = g;
                var p = {};
                if (k && typeof k === aD) {
                    for (var r in k) {
                        p[r] = k[r]
                    }
                }
                if (b && typeof b === aD) {
                    for (var n in b) {
                        if (typeof p.flashvars != aq) {
                            p.flashvars += "&" + n + "=" + b[n]
                        } else {
                            p.flashvars = n + "=" + b[n]
                        }
                    }
                }
                if (ao(c)) {
                    var o = aA(s, p, f);
                    if (s.id == f) {
                        ay(f, true)
                    }
                    e.success = true;
                    e.ref = o
                } else {
                    if (a && au()) {
                        s.data = a;
                        ae(s, p, f, l);
                        return
                    } else {
                        ay(f, true)
                    }
                }
                if (l) {
                    l(e)
                }
            })
        } else {
            if (l) {
                l(e)
            }
        }
    }, switchOffAutoHideShow:function () {
        aI = false
    }, ua:ah, getFlashPlayerVersion:function () {
        return{major:ah.pv[0], minor:ah.pv[1], release:ah.pv[2]}
    }, hasFlashPlayerVersion:ao, createSWF:function (a, b, c) {
        if (ah.w3) {
            return aA(a, b, c)
        } else {
            return undefined
        }
    }, showExpressInstall:function (b, a, e, c) {
        if (ah.w3 && au()) {
            ae(b, a, e, c)
        }
    }, removeSWF:function (a) {
        if (ah.w3) {
            aw(a)
        }
    }, createCSS:function (b, a, c, e) {
        if (ah.w3) {
            az(b, a, c, e)
        }
    }, addDomLoadEvent:aj, addLoadEvent:aC, getQueryParamValue:function (b) {
        var a = aL.location.search || aL.location.hash;
        if (a) {
            if (/\?/.test(a)) {
                a = a.split("?")[1]
            }
            if (b == null) {
                return ai(a)
            }
            var c = a.split("&");
            for (var e = 0; e < c.length; e++) {
                if (c[e].substring(0, c[e].indexOf("=")) == b) {
                    return ai(c[e].substring((c[e].indexOf("=") + 1)))
                }
            }
        }
        return""
    }, expressInstallCallback:function () {
        if (aU) {
            var a = aS(ac);
            if (a && aJ) {
                a.parentNode.replaceChild(aJ, a);
                if (ad) {
                    ay(ad, true);
                    if (ah.ie && ah.win) {
                        aJ.style.display = "block"
                    }
                }
                if (ap) {
                    ap(at)
                }
            }
            aU = false
        }
    }}
}();
swfobject.addDomLoadEvent(function () {
    if (typeof(SWFUpload.onload) === "function") {
        SWFUpload.onload.call(window)
    }
});
var SWFUpload;
if (typeof(SWFUpload) === "function") {
    SWFUpload.queue = {};
    SWFUpload.prototype.initSettings = (function (a) {
        return function (b) {
            if (typeof(a) === "function") {
                a.call(this, b)
            }
            this.queueSettings = {};
            this.queueSettings.queue_cancelled_flag = false;
            this.queueSettings.queue_upload_count = 0;
            this.queueSettings.user_upload_complete_handler = this.settings.upload_complete_handler;
            this.queueSettings.user_upload_start_handler = this.settings.upload_start_handler;
            this.settings.upload_complete_handler = SWFUpload.queue.uploadCompleteHandler;
            this.settings.upload_start_handler = SWFUpload.queue.uploadStartHandler;
            this.settings.queue_complete_handler = b.queue_complete_handler || null
        }
    })(SWFUpload.prototype.initSettings);
    SWFUpload.prototype.startUpload = function (a) {
        this.queueSettings.queue_cancelled_flag = false;
        this.callFlash("StartUpload", [a])
    };
    SWFUpload.prototype.cancelQueue = function () {
        this.queueSettings.queue_cancelled_flag = true;
        this.stopUpload();
        var a = this.getStats();
        while (a.files_queued > 0) {
            this.cancelUpload();
            a = this.getStats()
        }
    };
    SWFUpload.queue.uploadStartHandler = function (a) {
        var b;
        if (typeof(this.queueSettings.user_upload_start_handler) === "function") {
            b = this.queueSettings.user_upload_start_handler.call(this, a)
        }
        b = (b === false) ? false : true;
        this.queueSettings.queue_cancelled_flag = !b;
        return b
    };
    SWFUpload.queue.uploadCompleteHandler = function (b) {
        var c = this.queueSettings.user_upload_complete_handler;
        var e;
        if (b.filestatus === SWFUpload.FILE_STATUS.COMPLETE) {
            this.queueSettings.queue_upload_count++
        }
        if (typeof(c) === "function") {
            e = (c.call(this, b) === false) ? false : true
        } else {
            if (b.filestatus === SWFUpload.FILE_STATUS.QUEUED) {
                e = false
            } else {
                e = true
            }
        }
        if (e) {
            var a = this.getStats();
            if (a.files_queued > 0 && this.queueSettings.queue_cancelled_flag === false) {
                this.startUpload()
            } else {
                if (this.queueSettings.queue_cancelled_flag === false) {
                    this.queueEvent("queue_complete_handler", [this.queueSettings.queue_upload_count]);
                    this.queueSettings.queue_upload_count = 0
                } else {
                    this.queueSettings.queue_cancelled_flag = false;
                    this.queueSettings.queue_upload_count = 0
                }
            }
        }
    }
}
var SWFUpload;
if (typeof(SWFUpload) === "function") {
    SWFUpload.speed = {};
    SWFUpload.prototype.initSettings = (function (a) {
        return function (b) {
            if (typeof(a) === "function") {
                a.call(this, b)
            }
            this.ensureDefault = function (e, c) {
                this.settings[e] = (b[e] == undefined) ? c : b[e]
            };
            this.fileSpeedStats = {};
            this.speedSettings = {};
            this.ensureDefault("moving_average_history_size", "10");
            this.speedSettings.user_file_queued_handler = this.settings.file_queued_handler;
            this.speedSettings.user_file_queue_error_handler = this.settings.file_queue_error_handler;
            this.speedSettings.user_upload_start_handler = this.settings.upload_start_handler;
            this.speedSettings.user_upload_error_handler = this.settings.upload_error_handler;
            this.speedSettings.user_upload_progress_handler = this.settings.upload_progress_handler;
            this.speedSettings.user_upload_success_handler = this.settings.upload_success_handler;
            this.speedSettings.user_upload_complete_handler = this.settings.upload_complete_handler;
            this.settings.file_queued_handler = SWFUpload.speed.fileQueuedHandler;
            this.settings.file_queue_error_handler = SWFUpload.speed.fileQueueErrorHandler;
            this.settings.upload_start_handler = SWFUpload.speed.uploadStartHandler;
            this.settings.upload_error_handler = SWFUpload.speed.uploadErrorHandler;
            this.settings.upload_progress_handler = SWFUpload.speed.uploadProgressHandler;
            this.settings.upload_success_handler = SWFUpload.speed.uploadSuccessHandler;
            this.settings.upload_complete_handler = SWFUpload.speed.uploadCompleteHandler;
            delete this.ensureDefault
        }
    })(SWFUpload.prototype.initSettings);
    SWFUpload.speed.fileQueuedHandler = function (a) {
        if (typeof this.speedSettings.user_file_queued_handler === "function") {
            a = SWFUpload.speed.extendFile(a);
            return this.speedSettings.user_file_queued_handler.call(this, a)
        }
    };
    SWFUpload.speed.fileQueueErrorHandler = function (a, c, b) {
        if (typeof this.speedSettings.user_file_queue_error_handler === "function") {
            a = SWFUpload.speed.extendFile(a);
            return this.speedSettings.user_file_queue_error_handler.call(this, a, c, b)
        }
    };
    SWFUpload.speed.uploadStartHandler = function (a) {
        if (typeof this.speedSettings.user_upload_start_handler === "function") {
            a = SWFUpload.speed.extendFile(a, this.fileSpeedStats);
            return this.speedSettings.user_upload_start_handler.call(this, a)
        }
    };
    SWFUpload.speed.uploadErrorHandler = function (a, c, b) {
        a = SWFUpload.speed.extendFile(a, this.fileSpeedStats);
        SWFUpload.speed.removeTracking(a, this.fileSpeedStats);
        if (typeof this.speedSettings.user_upload_error_handler === "function") {
            return this.speedSettings.user_upload_error_handler.call(this, a, c, b)
        }
    };
    SWFUpload.speed.uploadProgressHandler = function (a, c, b) {
        this.updateTracking(a, c);
        a = SWFUpload.speed.extendFile(a, this.fileSpeedStats);
        if (typeof this.speedSettings.user_upload_progress_handler === "function") {
            return this.speedSettings.user_upload_progress_handler.call(this, a, c, b)
        }
    };
    SWFUpload.speed.uploadSuccessHandler = function (b, a) {
        if (typeof this.speedSettings.user_upload_success_handler === "function") {
            b = SWFUpload.speed.extendFile(b, this.fileSpeedStats);
            return this.speedSettings.user_upload_success_handler.call(this, b, a)
        }
    };
    SWFUpload.speed.uploadCompleteHandler = function (a) {
        a = SWFUpload.speed.extendFile(a, this.fileSpeedStats);
        SWFUpload.speed.removeTracking(a, this.fileSpeedStats);
        if (typeof this.speedSettings.user_upload_complete_handler === "function") {
            return this.speedSettings.user_upload_complete_handler.call(this, a)
        }
    };
    SWFUpload.speed.extendFile = function (b, a) {
        var c;
        if (!b) {
            return b
        }
        if (a) {
            c = a[b.id]
        }
        if (c) {
            b.currentSpeed = c.currentSpeed;
            b.averageSpeed = c.averageSpeed;
            b.movingAverageSpeed = c.movingAverageSpeed;
            b.timeRemaining = c.timeRemaining;
            b.timeElapsed = c.timeElapsed;
            b.percentUploaded = c.percentUploaded;
            b.sizeUploaded = c.bytesUploaded
        } else {
            b.currentSpeed = 0;
            b.averageSpeed = 0;
            b.movingAverageSpeed = 0;
            b.timeRemaining = 0;
            b.timeElapsed = 0;
            b.percentUploaded = 0;
            b.sizeUploaded = 0
        }
        return b
    };
    SWFUpload.prototype.updateTracking = function (e, h) {
        var g = this.fileSpeedStats[e.id];
        if (!g) {
            this.fileSpeedStats[e.id] = g = {}
        }
        h = h || g.bytesUploaded || 0;
        if (h < 0) {
            h = 0
        }
        if (h > e.size) {
            h = e.size
        }
        var j = (new Date()).getTime();
        if (!g.startTime) {
            g.startTime = (new Date()).getTime();
            g.lastTime = g.startTime;
            g.currentSpeed = 0;
            g.averageSpeed = 0;
            g.movingAverageSpeed = 0;
            g.movingAverageHistory = [];
            g.timeRemaining = 0;
            g.timeElapsed = 0;
            g.percentUploaded = h / e.size;
            g.bytesUploaded = h
        } else {
            if (g.startTime > j) {
                this.debug("When backwards in time")
            } else {
                var c = (new Date()).getTime();
                var f = g.lastTime;
                var b = c - f;
                var a = h - g.bytesUploaded;
                if (a === 0 || b === 0) {
                    return g
                }
                g.lastTime = c;
                g.bytesUploaded = h;
                g.currentSpeed = (a * 8) / (b / 1000);
                g.averageSpeed = (g.bytesUploaded * 8) / ((c - g.startTime) / 1000);
                g.movingAverageHistory.push(g.currentSpeed);
                if (g.movingAverageHistory.length > this.settings.moving_average_history_size) {
                    g.movingAverageHistory.shift()
                }
                g.movingAverageSpeed = SWFUpload.speed.calculateMovingAverage(g.movingAverageHistory);
                g.timeRemaining = (e.size - g.bytesUploaded) * 8 / g.movingAverageSpeed;
                g.timeElapsed = (c - g.startTime) / 1000;
                g.percentUploaded = (g.bytesUploaded / e.size * 100)
            }
        }
        return g
    };
    SWFUpload.speed.removeTracking = function (c, a) {
        try {
            a[c.id] = null;
            delete a[c.id]
        } catch (b) {
        }
    };
    SWFUpload.speed.formatUnits = function (h, c, b, j) {
        var e, g, a, l;
        if (h === 0) {
            return"0 " + b[b.length - 1]
        }
        if (j) {
            g = h;
            l = b.length >= c.length ? b[c.length - 1] : "";
            for (e = 0; e < c.length; e++) {
                if (h >= c[e]) {
                    g = (h / c[e]).toFixed(2);
                    l = b.length >= e ? " " + b[e] : "";
                    break
                }
            }
            return g + l
        } else {
            var f = [];
            var k = h;
            for (e = 0; e < c.length; e++) {
                a = c[e];
                l = b.length > e ? " " + b[e] : "";
                g = k / a;
                if (e < c.length - 1) {
                    g = Math.floor(g)
                } else {
                    g = g.toFixed(2)
                }
                if (g > 0) {
                    k = k % a;
                    f.push(g + l)
                }
            }
            return f.join(" ")
        }
    };
    SWFUpload.speed.formatBPS = function (b) {
        var c = [1073741824, 1048576, 1024, 1], a = ["Gbps", "Mbps", "Kbps", "bps"];
        return SWFUpload.speed.formatUnits(b, c, a, true)
    };
    SWFUpload.speed.formatTime = function (c) {
        var a = [86400, 3600, 60, 1], b = ["d", "h", "m", "s"];
        return SWFUpload.speed.formatUnits(c, a, b, false)
    };
    SWFUpload.speed.formatBytes = function (c) {
        var b = [1073741824, 1048576, 1024, 1], a = ["GB", "MB", "KB", "bytes"];
        return SWFUpload.speed.formatUnits(c, b, a, true)
    };
    SWFUpload.speed.formatPercent = function (a) {
        return a.toFixed(2) + " %"
    };
    SWFUpload.speed.calculateMovingAverage = function (j) {
        var k = [], m, h = 0, n = 0, f = 0, b = 0, e = 0;
        var g;
        var c = 0, l = 0;
        m = j.length;
        if (m >= 8) {
            for (g = 0; g < m; g++) {
                k[g] = j[g];
                h += k[g]
            }
            n = h / m;
            for (g = 0; g < m; g++) {
                f += Math.pow((k[g] - n), 2)
            }
            b = f / m;
            e = Math.sqrt(b);
            for (g = 0; g < m; g++) {
                k[g] = (k[g] - n) / e
            }
            var a = 2;
            for (g = 0; g < m; g++) {
                if (k[g] <= a && k[g] >= -a) {
                    l++;
                    c += j[g]
                }
            }
        } else {
            l = m;
            for (g = 0; g < m; g++) {
                c += j[g]
            }
        }
        return c / l
    }
}
var qq = qq || {};
qq.extend = function (b, a) {
    for (var c in a) {
        b[c] = a[c]
    }
};
qq.indexOf = function (b, c, e) {
    if (b.indexOf) {
        return b.indexOf(c, e)
    }
    e = e || 0;
    var a = b.length;
    if (e < 0) {
        e += a
    }
    for (; e < a; e++) {
        if (e in b && b[e] === c) {
            return e
        }
    }
    return -1
};
qq.getUniqueId = (function () {
    var a = 0;
    return function () {
        return a++
    }
})();
qq.attach = function (a, c, b) {
    if (a.addEventListener) {
        a.addEventListener(c, b, false)
    } else {
        if (a.attachEvent) {
            a.attachEvent("on" + c, b)
        }
    }
};
qq.detach = function (a, c, b) {
    if (a.removeEventListener) {
        a.removeEventListener(c, b, false)
    } else {
        if (a.attachEvent) {
            a.detachEvent("on" + c, b)
        }
    }
};
qq.preventDefault = function (a) {
    if (a.preventDefault) {
        a.preventDefault()
    } else {
        a.returnValue = false
    }
};
qq.insertBefore = function (e, c) {
    c.parentNode.insertBefore(e, c)
};
qq.remove = function (a) {
    a.parentNode.removeChild(a)
};
qq.contains = function (b, a) {
    if (b == a) {
        return true
    }
    if (b.contains) {
        return b.contains(a)
    } else {
        return !!(a.compareDocumentPosition(b) & 8)
    }
};
qq.toElement = (function () {
    var a = document.createElement("div");
    return function (c) {
        a.innerHTML = c;
        var b = a.firstChild;
        a.removeChild(b);
        return b
    }
})();
qq.css = function (a, b) {
    if (b.opacity != null) {
        if (typeof a.style.opacity != "string" && typeof(a.filters) != "undefined") {
            b.filter = "alpha(opacity=" + Math.round(100 * b.opacity) + ")"
        }
    }
    qq.extend(a.style, b)
};
qq.hasClass = function (b, a) {
    var c = new RegExp("(^| )" + a + "( |$)");
    return c.test(b.className)
};
qq.addClass = function (b, a) {
    if (!qq.hasClass(b, a)) {
        b.className += " " + a
    }
};
qq.removeClass = function (b, a) {
    var c = new RegExp("(^| )" + a + "( |$)");
    b.className = b.className.replace(c, " ").replace(/^\s+|\s+$/g, "")
};
qq.setText = function (a, b) {
    a.innerText = b;
    a.textContent = b
};
qq.children = function (b) {
    var a = [], c = b.firstChild;
    while (c) {
        if (c.nodeType == 1) {
            a.push(c)
        }
        c = c.nextSibling
    }
    return a
};
qq.getByClass = function (e, f) {
    if (e.querySelectorAll) {
        return e.querySelectorAll("." + f)
    }
    var b = [];
    var g = e.getElementsByTagName("*");
    var a = g.length;
    for (var c = 0; c < a; c++) {
        if (qq.hasClass(g[c], f)) {
            b.push(g[c])
        }
    }
    return b
};
qq.obj2url = function (g, b, j) {
    var h = [], e = "&", f = function (l, k) {
        var m = b ? (/\[\]$/.test(b)) ? b : b + "[" + k + "]" : k;
        if ((m != "undefined") && (k != "undefined")) {
            h.push((typeof l === "object") ? qq.obj2url(l, m, true) : (Object.prototype.toString.call(l) === "[object Function]") ? encodeURIComponent(m) + "=" + encodeURIComponent(l()) : encodeURIComponent(m) + "=" + encodeURIComponent(l))
        }
    };
    if (!j && b) {
        e = (/\?/.test(b)) ? (/\?$/.test(b)) ? "" : "&" : "?";
        h.push(b);
        h.push(qq.obj2url(g))
    } else {
        if ((Object.prototype.toString.call(g) === "[object Array]") && (typeof g != "undefined")) {
            for (var c = 0, a = g.length; c < a; ++c) {
                f(g[c], c)
            }
        } else {
            if ((typeof g != "undefined") && (g !== null) && (typeof g === "object")) {
                for (var c in g) {
                    f(g[c], c)
                }
            } else {
                h.push(encodeURIComponent(b) + "=" + encodeURIComponent(g))
            }
        }
    }
    return h.join(e).replace(/^&/, "").replace(/%20/g, "+")
};
var qq = qq || {};
qq.FileUploaderBasic = function (a) {
    this._options = {debug:false, action:"/server/upload", params:{}, button:null, multiple:true, maxConnections:3, allowedExtensions:[], sizeLimit:0, minSizeLimit:0, onSubmit:function (c, b) {
    }, onProgress:function (f, e, b, c) {
    }, onComplete:function (e, c, b) {
    }, onCancel:function (c, b) {
    }, messages:{typeError:"{file} has invalid extension. Only {extensions} are allowed.", sizeError:"{file} is too large, maximum file size is {sizeLimit}.", minSizeError:"{file} is too small, minimum file size is {minSizeLimit}.", emptyError:"{file} is empty, please select files again without it.", onLeave:"The files are being uploaded, if you leave now the upload will be cancelled."}, showMessage:function (b) {
        alert(b)
    }};
    qq.extend(this._options, a);
    this._filesInProgress = 0;
    this._handler = this._createUploadHandler();
    if (this._options.button) {
        this._button = this._createUploadButton(this._options.button)
    }
    this._preventLeaveInProgress()
};
qq.FileUploaderBasic.prototype = {setParams:function (a) {
    this._options.params = a
}, getInProgress:function () {
    return this._filesInProgress
}, _createUploadButton:function (b) {
    var a = this;
    return new qq.UploadButton({element:b, multiple:this._options.multiple && qq.UploadHandlerXhr.isSupported(), onChange:function (c) {
        a._onInputChange(c)
    }})
}, _createUploadHandler:function () {
    var a = this, c;
    if (qq.UploadHandlerXhr.isSupported()) {
        c = "UploadHandlerXhr"
    } else {
        c = "UploadHandlerForm"
    }
    var b = new qq[c]({debug:this._options.debug, action:this._options.action, maxConnections:this._options.maxConnections, onProgress:function (h, g, e, f) {
        a._onProgress(h, g, e, f);
        a._options.onProgress(h, g, e, f)
    }, onComplete:function (g, f, e) {
        a._onComplete(g, f, e);
        a._options.onComplete(g, f, e)
    }, onCancel:function (f, e) {
        a._onCancel(f, e);
        a._options.onCancel(f, e)
    }});
    return b
}, _preventLeaveInProgress:function () {
    var a = this;
    qq.attach(window, "beforeunload", function (b) {
        if (!a._filesInProgress) {
            return
        }
        var b = b || window.event;
        b.returnValue = a._options.messages.onLeave;
        return a._options.messages.onLeave
    })
}, _onSubmit:function (b, a) {
    this._filesInProgress++
}, _onProgress:function (e, c, a, b) {
}, _onComplete:function (c, b, a) {
    this._filesInProgress--;
    if (a.error) {
        this._options.showMessage(a.error)
    }
}, _onCancel:function (b, a) {
    this._filesInProgress--
}, _onInputChange:function (a) {
    if (this._handler instanceof qq.UploadHandlerXhr) {
        this._uploadFileList(a.files)
    } else {
        if (this._validateFile(a)) {
            this._uploadFile(a)
        }
    }
    this._button.reset()
}, _uploadFileList:function (b) {
    for (var a = 0; a < b.length; a++) {
        if (!this._validateFile(b[a])) {
            return
        }
    }
    for (var a = 0; a < b.length; a++) {
        this._uploadFile(b[a])
    }
}, _uploadFile:function (a) {
    var c = this._handler.add(a);
    var b = this._handler.getName(c);
    if (this._options.onSubmit(c, b) !== false) {
        this._onSubmit(c, b);
        this._handler.upload(c, this._options.params)
    }
}, _validateFile:function (c) {
    var a, b;
    if (c.value) {
        a = c.value.replace(/.*(\/|\\)/, "")
    } else {
        a = c.fileName != null ? c.fileName : c.name;
        b = c.fileSize != null ? c.fileSize : c.size
    }
    if (!this._isAllowedExtension(a)) {
        return false
    } else {
        if (b && this._options.sizeLimit && b > this._options.sizeLimit) {
            return false
        } else {
            if (b && b < this._options.minSizeLimit) {
                return false
            }
        }
    }
    return true
}, _error:function (c, e) {
    var b = this._options.messages[c];

    function a(f, g) {
        b = b.replace(f, g)
    }

    a("{file}", this._formatFileName(e));
    a("{extensions}", this._options.allowedExtensions.join(", "));
    a("{sizeLimit}", this._formatSize(this._options.sizeLimit));
    a("{minSizeLimit}", this._formatSize(this._options.minSizeLimit));
    this._options.showMessage(b)
}, _formatFileName:function (a) {
    if (a.length > 33) {
        a = a.slice(0, 19) + "..." + a.slice(-13)
    }
    return a
}, _isAllowedExtension:function (e) {
    var b = (-1 !== e.indexOf(".")) ? e.replace(/.*[.]/, "").toLowerCase() : "";
    var c = this._options.allowedExtensions;
    if (!c.length) {
        return true
    }
    for (var a = 0; a < c.length; a++) {
        if (c[a].toLowerCase() == b) {
            return true
        }
    }
    return false
}, _formatSize:function (a) {
    var b = -1;
    do {
        a = a / 1024;
        b++
    } while (a > 99);
    return Math.max(a, 0.1).toFixed(1) + ["kB", "MB", "GB", "TB", "PB", "EB"][b]
}};
qq.FileUploader = function (a) {
    qq.FileUploaderBasic.apply(this, arguments);
    qq.extend(this._options, {element:null, listElement:null, template:'<div class="qq-uploader"><div class="qq-upload-drop-area"><span>Drop files here to upload</span></div><div class="qq-upload-button">Upload a file</div><ul class="qq-upload-list"></ul></div>', fileTemplate:'<li><span class="qq-upload-file"></span><span class="qq-upload-spinner"></span><span class="qq-upload-size"></span><a class="qq-upload-cancel" href="#">Cancel</a><span class="qq-upload-failed-text">Failed</span></li>', classes:{button:"qq-upload-button", drop:"qq-upload-drop-area", dropActive:"qq-upload-drop-area-active", list:"qq-upload-list", file:"qq-upload-file", spinner:"qq-upload-spinner", size:"qq-upload-size", cancel:"qq-upload-cancel", success:"qq-upload-success", fail:"qq-upload-fail"}});
    qq.extend(this._options, a);
    this._element = this._options.element;
    this._element.innerHTML = this._options.template;
    this._listElement = this._options.listElement || this._find(this._element, "list");
    this._classes = this._options.classes;
    this._button = this._createUploadButton(this._find(this._element, "button"));
    this._bindCancelEvent();
    this._setupDragDrop()
};
qq.extend(qq.FileUploader.prototype, qq.FileUploaderBasic.prototype);
qq.extend(qq.FileUploader.prototype, {_find:function (c, b) {
    var a = qq.getByClass(c, this._options.classes[b])[0];
    if (!a) {
        throw new Error("element not found " + b)
    }
    return a
}, _setupDragDrop:function () {
    var b = this, c = this._find(this._element, "drop");
    var a = new qq.UploadDropZone({element:c, onEnter:function (f) {
        qq.addClass(c, b._classes.dropActive);
        f.stopPropagation()
    }, onLeave:function (f) {
        f.stopPropagation()
    }, onLeaveNotDescendants:function (f) {
        qq.removeClass(c, b._classes.dropActive)
    }, onDrop:function (f) {
        c.style.display = "none";
        qq.removeClass(c, b._classes.dropActive);
        b._uploadFileList(f.dataTransfer.files)
    }});
    c.style.display = "none";
    qq.attach(document, "dragenter", function (f) {
        if (!a._isValidFileDrag(f)) {
            return
        }
        c.style.display = "block"
    });
    qq.attach(document, "dragleave", function (g) {
        if (!a._isValidFileDrag(g)) {
            return
        }
        var f = document.elementFromPoint(g.clientX, g.clientY);
        if (!f || f.nodeName == "HTML") {
            c.style.display = "none"
        }
    })
}, _onSubmit:function (b, a) {
    qq.FileUploaderBasic.prototype._onSubmit.apply(this, arguments);
    this._addToList(b, a)
}, _onProgress:function (h, g, a, e) {
    qq.FileUploaderBasic.prototype._onProgress.apply(this, arguments);
    var c = this._getItemByFileId(h);
    var b = this._find(c, "size");
    b.style.display = "inline";
    var f;
    if (a != e) {
        f = Math.round(a / e * 100) + "% from " + this._formatSize(e)
    } else {
        f = this._formatSize(e)
    }
    qq.setText(b, f)
}, _onComplete:function (e, c, a) {
    qq.FileUploaderBasic.prototype._onComplete.apply(this, arguments);
    var b = this._getItemByFileId(e);
    qq.remove(this._find(b, "cancel"));
    qq.remove(this._find(b, "spinner"));
    if (a.success) {
        qq.addClass(b, this._classes.success)
    } else {
        qq.addClass(b, this._classes.fail)
    }
}, _addToList:function (e, c) {
    var a = qq.toElement(this._options.fileTemplate);
    a.qqFileId = e;
    var b = this._find(a, "file");
    qq.setText(b, this._formatFileName(c));
    this._find(a, "size").style.display = "none";
    this._listElement.appendChild(a)
}, _getItemByFileId:function (b) {
    var a = this._listElement.firstChild;
    while (a) {
        if (a.qqFileId == b) {
            return a
        }
        a = a.nextSibling
    }
}, _bindCancelEvent:function () {
    var a = this, b = this._listElement;
    qq.attach(b, "click", function (g) {
        g = g || window.event;
        var f = g.target || g.srcElement;
        if (qq.hasClass(f, a._classes.cancel)) {
            qq.preventDefault(g);
            var c = f.parentNode;
            a._handler.cancel(c.qqFileId);
            qq.remove(c)
        }
    })
}});
qq.UploadDropZone = function (a) {
    this._options = {element:null, onEnter:function (b) {
    }, onLeave:function (b) {
    }, onLeaveNotDescendants:function (b) {
    }, onDrop:function (b) {
    }};
    qq.extend(this._options, a);
    this._element = this._options.element;
    this._disableDropOutside();
    this._attachEvents()
};
qq.UploadDropZone.prototype = {_disableDropOutside:function (a) {
    if (!qq.UploadDropZone.dropOutsideDisabled) {
        qq.attach(document, "dragover", function (b) {
            if (b.dataTransfer) {
                b.dataTransfer.dropEffect = "none";
                b.preventDefault()
            }
        });
        qq.UploadDropZone.dropOutsideDisabled = true
    }
}, _attachEvents:function () {
    var a = this;
    qq.attach(a._element, "dragover", function (c) {
        if (!a._isValidFileDrag(c)) {
            return
        }
        var b = c.dataTransfer.effectAllowed;
        if (b == "move" || b == "linkMove") {
            c.dataTransfer.dropEffect = "move"
        } else {
            c.dataTransfer.dropEffect = "copy"
        }
        c.stopPropagation();
        c.preventDefault()
    });
    qq.attach(a._element, "dragenter", function (b) {
        if (!a._isValidFileDrag(b)) {
            return
        }
        a._options.onEnter(b)
    });
    qq.attach(a._element, "dragleave", function (c) {
        if (!a._isValidFileDrag(c)) {
            return
        }
        a._options.onLeave(c);
        var b = document.elementFromPoint(c.clientX, c.clientY);
        if (qq.contains(this, b)) {
            return
        }
        a._options.onLeaveNotDescendants(c)
    });
    qq.attach(a._element, "drop", function (b) {
        if (!a._isValidFileDrag(b)) {
            return
        }
        b.preventDefault();
        a._options.onDrop(b)
    })
}, _isValidFileDrag:function (c) {
    var b = c.dataTransfer, a = navigator.userAgent.indexOf("AppleWebKit") > -1;
    return b && b.effectAllowed != "none" && (b.files || (!a && b.types.contains && b.types.contains("Files")))
}};
qq.UploadButton = function (a) {
    this._options = {element:null, multiple:false, name:"file", onChange:function (b) {
    }, hoverClass:"qq-upload-button-hover", focusClass:"qq-upload-button-focus"};
    qq.extend(this._options, a);
    this._element = this._options.element;
    qq.css(this._element, {position:"relative", overflow:"hidden", direction:"ltr"});
    this._input = this._createInput()
};
qq.UploadButton.prototype = {getInput:function () {
    return this._input
}, reset:function () {
    if (this._input.parentNode) {
        qq.remove(this._input)
    }
    qq.removeClass(this._element, this._options.focusClass);
    this._input = this._createInput()
}, _createInput:function () {
    var b = document.createElement("input");
    if (this._options.multiple) {
        b.setAttribute("multiple", "multiple")
    }
    b.setAttribute("type", "file");
    b.setAttribute("name", this._options.name);
    qq.css(b, {position:"absolute", right:0, top:0, fontFamily:"Arial", fontSize:"118px", margin:0, padding:0, cursor:"pointer", opacity:0});
    this._element.appendChild(b);
    var a = this;
    qq.attach(b, "change", function () {
        a._options.onChange(b)
    });
    qq.attach(b, "mouseover", function () {
        qq.addClass(a._element, a._options.hoverClass)
    });
    qq.attach(b, "mouseout", function () {
        qq.removeClass(a._element, a._options.hoverClass)
    });
    qq.attach(b, "focus", function () {
        qq.addClass(a._element, a._options.focusClass)
    });
    qq.attach(b, "blur", function () {
        qq.removeClass(a._element, a._options.focusClass)
    });
    if (window.attachEvent) {
        b.setAttribute("tabIndex", "-1")
    }
    return b
}};
qq.UploadHandlerAbstract = function (a) {
    this._options = {debug:false, action:"upload.php.htm"/*tpa=http://192.168.119.101:8888/upload.php*/, maxConnections:999, onProgress:function (f, e, b, c) {
    }, onComplete:function (e, c, b) {
    }, onCancel:function (c, b) {
    }};
    qq.extend(this._options, a);
    this._queue = [];
    this._params = []
};
qq.UploadHandlerAbstract.prototype = {log:function (a) {
    if (this._options.debug && window.console) {
        console.log("[uploader] " + a)
    }
}, add:function (a) {
}, upload:function (e, b) {
    var a = this._queue.push(e);
    var c = {};
    qq.extend(c, b);
    this._params[e] = c;
    if (a <= this._options.maxConnections) {
        this._upload(e, this._params[e])
    }
}, cancel:function (a) {
    this._cancel(a);
    this._dequeue(a)
}, cancelAll:function () {
    for (var a = 0; a < this._queue.length; a++) {
        this._cancel(this._queue[a])
    }
    this._queue = []
}, getName:function (a) {
}, getSize:function (a) {
}, getQueue:function () {
    return this._queue
}, _upload:function (a) {
}, _cancel:function (a) {
}, _dequeue:function (f) {
    var b = qq.indexOf(this._queue, f);
    var e = this._queue;
    this._queue = _.reject(e, function (g) {
        return g == parseInt(f)
    });
    var a = this._options.maxConnections;
    if (this._queue.length >= a && b < a) {
        var c = this._queue[a - 1];
        this._upload(c, this._params[c])
    }
}};
qq.UploadHandlerForm = function (a) {
    qq.UploadHandlerAbstract.apply(this, arguments);
    this._inputs = {}
};
qq.extend(qq.UploadHandlerForm.prototype, qq.UploadHandlerAbstract.prototype);
qq.extend(qq.UploadHandlerForm.prototype, {add:function (a) {
    a.setAttribute("name", "qqfile");
    var b = "qq-upload-handler-iframe" + qq.getUniqueId();
    this._inputs[b] = a;
    if (a.parentNode) {
        qq.remove(a)
    }
    return b
}, getName:function (a) {
    return this._inputs[a].value.replace(/.*(\/|\\)/, "")
}, _cancel:function (b) {
    this._options.onCancel(b, this.getName(b));
    delete this._inputs[b];
    var a = document.getElementById(b);
    if (a) {
        a.setAttribute("src", "javascript:false;");
        qq.remove(a)
    }
}, _upload:function (h, f) {
    var b = this._inputs[h];
    if (!b) {
        throw new Error("file with passed id was not added, or already uploaded or cancelled")
    }
    var g = this.getName(h);
    var c = this._createIframe(h);
    var e = this._createForm(c, f);
    e.appendChild(b);
    var a = this;
    this._attachLoadEvent(c, function () {
        a.log("iframe loaded");
        var j = a._getIframeContentJSON(c);
        a._options.onComplete(h, g, j);
        a._dequeue(h);
        delete a._inputs[h];
        setTimeout(function () {
            qq.remove(c)
        }, 1)
    });
    e.submit();
    qq.remove(e);
    return h
}, _attachLoadEvent:function (a, b) {
    qq.attach(a, "load", function () {
        if (!a.parentNode) {
            return
        }
        if (a.contentDocument && a.contentDocument.body && a.contentDocument.body.innerHTML == "false") {
            return
        }
        b()
    })
}, _getIframeContentJSON:function (iframe) {
    var doc = iframe.contentDocument ? iframe.contentDocument : iframe.contentWindow.document, response;
    this.log("converting iframe's innerHTML to JSON");
    this.log("innerHTML = " + doc.body.innerHTML);
    try {
        response = eval("(" + doc.body.innerHTML + ")")
    } catch (err) {
        response = {}
    }
    return response
}, _createIframe:function (b) {
    var a = qq.toElement('<iframe src="javascript:false;" name="' + b + '" />');
    a.setAttribute("id", b);
    a.style.display = "none";
    document.body.appendChild(a);
    return a
}, _createForm:function (a, c) {
    var b = qq.toElement('<form method="post" enctype="multipart/form-data"></form>');
    var e = qq.obj2url(c, this._options.action);
    b.setAttribute("action", e);
    b.setAttribute("target", a.name);
    b.style.display = "none";
    document.body.appendChild(b);
    return b
}});
qq.UploadHandlerXhr = function (a) {
    qq.UploadHandlerAbstract.apply(this, arguments);
    this._files = [];
    this._xhrs = [];
    this._loaded = []
};
qq.UploadHandlerXhr.isSupported = function () {
    var a = document.createElement("input");
    a.type = "file";
    return("multiple" in a && typeof File != "undefined" && typeof(new XMLHttpRequest()).upload != "undefined")
};
qq.extend(qq.UploadHandlerXhr.prototype, qq.UploadHandlerAbstract.prototype);
qq.extend(qq.UploadHandlerXhr.prototype, {add:function (a) {
    if (!(a instanceof File)) {
        throw new Error("Passed obj in not a File (in qq.UploadHandlerXhr)")
    }
    return this._files.push(a) - 1
}, getName:function (b) {
    var a = this._files[b];
    return a.fileName != null ? a.fileName : a.name
}, getSize:function (b) {
    var a = this._files[b];
    return a.fileSize != null ? a.fileSize : a.size
}, getLoaded:function (a) {
    return this._loaded[a] || 0
}, _upload:function (j, g) {
    var e = this._files[j], b = this.getName(j), c = this.getSize(j);
    this._loaded[j] = 0;
    var f = this._xhrs[j] = new XMLHttpRequest();
    var a = this;
    f.upload.onprogress = function (k) {
        if (k.lengthComputable) {
            a._loaded[j] = k.loaded;
            a._options.onProgress(j, b, k.loaded, k.total)
        }
    };
    f.onreadystatechange = function () {
        if (f.readyState == 4) {
            a._onComplete(j, f)
        }
    };
    g = g || {};
    g.qqfile = b;
    var h = qq.obj2url(g, this._options.action);
    f.open("POST", h, true);
    f.setRequestHeader("X-Requested-With", "XMLHttpRequest");
    f.setRequestHeader("X-File-Name", encodeURIComponent(b));
    f.setRequestHeader("Content-Type", "application/octet-stream");
    f.send(e)
}, _onComplete:function (id, xhr) {
    if (!this._files[id]) {
        return
    }
    var name = this.getName(id);
    var size = this.getSize(id);
    this._options.onProgress(id, name, size, size);
    if (xhr.status == 200) {
        this.log("xhr - server response received");
        this.log("responseText = " + xhr.responseText);
        var response;
        try {
            response = eval("(" + xhr.responseText + ")")
        } catch (err) {
            response = {}
        }
        this._options.onComplete(id, name, response)
    } else {
        this._options.onComplete(id, name, {})
    }
    this._files[id] = null;
    this._xhrs[id] = null;
    this._dequeue(id)
}, _cancel:function (a) {
    this._options.onCancel(a, this.getName(a));
    this._files[a] = null;
    if (this._xhrs[a]) {
        this._xhrs[a].abort();
        this._xhrs[a] = null
    }
}});
qq.AppFileUploader = function (a) {
    qq.FileUploaderBasic.apply(this, arguments);
    qq.extend(this._options, {element:null, listElement:null, template:'<div class="qq-uploader"><div class="qq-upload-button">Install App</div></div>', classes:{button:"qq-upload-button"}});
    qq.extend(this._options, a);
    this._element = this._options.element;
    this._element.innerHTML = this._options.template;
    this._classes = this._options.classes;
    this._button = this._createUploadButton(this._find(this._element, "button"))
};
qq.extend(qq.AppFileUploader.prototype, qq.FileUploaderBasic.prototype);
qq.extend(qq.AppFileUploader.prototype, {_uploadFileList:function (f) {
    var c = 0;
    var b = [];
    for (var e = 0; e < f.length; e++) {
        if (!this._validateFile(f[e])) {
            c++
        } else {
            b.push(f[e])
        }
    }
    var a = this;
    if (b.length == 0) {
        showMsgBox("No .apk file selected.");
        return
    } else {
        if (b.length < f.length) {
            showMsgBox("Only .apk files will be uploaded.", function () {
                for (var g = 0; g < b.length; g++) {
                    a._uploadFile(b[g])
                }
            })
        } else {
            if (b.length == f.length) {
                for (var e = 0; e < b.length; e++) {
                    a._uploadFile(b[e])
                }
            }
        }
    }
}, _find:function (c, b) {
    var a = qq.getByClass(c, this._options.classes[b])[0];
    if (!a) {
        throw new Error("element not found " + b)
    }
    return a
}, _onSubmit:function (b, a) {
    qq.FileUploaderBasic.prototype._onSubmit.apply(this, arguments)
}, _onProgress:function (e, c, a, b) {
    qq.FileUploaderBasic.prototype._onProgress.apply(this, arguments)
}, _onComplete:function (c, b, a) {
    qq.FileUploaderBasic.prototype._onComplete.apply(this, arguments)
}});
qq.UploadDropZone = function (a) {
    this._options = {element:null, onEnter:function (b) {
    }, onLeave:function (b) {
    }, onLeaveNotDescendants:function (b) {
    }, onDrop:function (b) {
    }};
    qq.extend(this._options, a);
    this._element = this._options.element;
    this._disableDropOutside();
    this._attachEvents()
};
qq.UploadDropZone.prototype = {_disableDropOutside:function (a) {
    if (!qq.UploadDropZone.dropOutsideDisabled) {
        qq.attach(document, "dragover", function (b) {
            if (b.dataTransfer) {
                b.dataTransfer.dropEffect = "none";
                b.preventDefault()
            }
        });
        qq.UploadDropZone.dropOutsideDisabled = true
    }
}, _attachEvents:function () {
    var a = this;
    qq.attach(a._element, "dragover", function (c) {
        if (!a._isValidFileDrag(c)) {
            return
        }
        var b = c.dataTransfer.effectAllowed;
        if (b == "move" || b == "linkMove") {
            c.dataTransfer.dropEffect = "move"
        } else {
            c.dataTransfer.dropEffect = "copy"
        }
        c.stopPropagation();
        c.preventDefault()
    });
    qq.attach(a._element, "dragenter", function (b) {
        if (!a._isValidFileDrag(b)) {
            return
        }
        a._options.onEnter(b)
    });
    qq.attach(a._element, "dragleave", function (c) {
        if (!a._isValidFileDrag(c)) {
            return
        }
        a._options.onLeave(c);
        var b = document.elementFromPoint(c.clientX, c.clientY);
        if (qq.contains(this, b)) {
            return
        }
        a._options.onLeaveNotDescendants(c)
    });
    qq.attach(a._element, "drop", function (b) {
        if (!a._isValidFileDrag(b)) {
            return
        }
        b.preventDefault();
        a._options.onDrop(b)
    })
}, _isValidFileDrag:function (c) {
    var b = c.dataTransfer, a = navigator.userAgent.indexOf("AppleWebKit") > -1;
    return b && b.effectAllowed != "none" && (b.files || (!a && b.types.contains && b.types.contains("Files")))
}};
qq.Uploader = function (a) {
    qq.FileUploaderBasic.apply(this, arguments);
    qq.extend(this._options, {element:null, listElement:null, template:"", fileItemTemplate:uploadFileItemTemplate, classes:{button:"btn_blue90", drop:"upload_drop_area", dropActive:"upload_drop_area_active", list:"upload_list", dest_path:"upload_path"}});
    qq.extend(this._options, a);
    this._element = this._options.element;
    this._element.innerHTML = this._element.innerHTML + this._options.template;
    this._listElement = this._options.listElement || this._find(this._element, "list");
    this._classes = this._options.classes;
    this._button = this._createUploadButton(this._find(this._element, "button"));
    this.scrollAPI = $(this._element).find(".list_container").jScrollPane({animateScroll:true, mouseWheelSpeed:150}).data("jsp");
    this._bindEvent()
};
qq.extend(qq.Uploader.prototype, qq.FileUploaderBasic.prototype);
qq.extend(qq.Uploader.prototype, {_uploadFileList:function (g) {
    var a = [];
    for (var f = 0; f < g.length; f++) {
        if (!this._validateFile(g[f])) {
            a.push({file:g[f], allow:false})
        } else {
            a.push({file:g[f], allow:true})
        }
    }
    for (var f = 0; f < a.length; f++) {
        if (a[f].allow) {
            this._uploadFile(a[f].file)
        } else {
            var e = a[f].file;
            var b, c;
            if (e.value) {
                b = e.value.replace(/.*(\/|\\)/, "")
            } else {
                b = e.fileName != null ? e.fileName : e.name;
                c = e.fileSize != null ? e.fileSize : e.size
            }
            var h = $(this._options.fileItemTemplate);
            h.attr("status", "3").find(".upload_file_size").html(this._formatSize(c)).end().find(".uploadstatus").hide().siblings(".status").html(Airdroid.UsedLang.Upload._upload_type_not_suport).end().end().find(".upload_file_name").html(this._formatFileName(b)).end().find(".upload_opration a").html(Airdroid.UsedLang.Upload._menu_delete).end().appendTo($(this._listElement));
            $(".upload_list tr:even").attr("class", "even");
            $(".upload_list tr:odd").attr("class", "odd")
        }
    }
}, _find:function (c, b) {
    var a = qq.getByClass(c, this._options.classes[b])[0];
    if (!a) {
        throw new Error("element not found " + b)
    }
    return a
}, _updateScrollPanel:function () {
    if (!_.isUndefined(this.scrollAPI)) {
        this.scrollAPI.reinitialise()
    }
}, _setupDragDrop:function () {
    var b = this, c = this._find(this._element, "drop");
    var a = new qq.UploadDropZone({element:c, onEnter:function (f) {
        qq.addClass(c, b._classes.dropActive);
        f.stopPropagation()
    }, onLeave:function (f) {
        f.stopPropagation()
    }, onLeaveNotDescendants:function (f) {
        qq.removeClass(c, b._classes.dropActive)
    }, onDrop:function (f) {
        c.style.display = "none";
        qq.removeClass(c, b._classes.dropActive);
        b._uploadFileList(f.dataTransfer.files)
    }});
    c.style.display = "none";
    qq.attach(document, "dragenter", function (f) {
        if (!a._isValidFileDrag(f)) {
            return
        }
        c.style.display = "block"
    });
    qq.attach(document, "dragleave", function (g) {
        if (!a._isValidFileDrag(g)) {
            return
        }
        var f = document.elementFromPoint(g.clientX, g.clientY);
        if (!f || f.nodeName == "HTML") {
            c.style.display = "none"
        }
    })
}, _onSubmit:function (b, a) {
    this._find(this._element, "drop").style.display = "none";
    qq.FileUploaderBasic.prototype._onSubmit.apply(this, arguments);
    this._addToList(b, a);
    this._updateScrollPanel()
}, _onProgress:function (g, f, a, e) {
    qq.FileUploaderBasic.prototype._onProgress.apply(this, arguments);
    var c = Math.round(a / e * 100);
    var b = $(this._listElement).find("tr[fileId='" + g + "']");
    b.attr("status", 1).find(".upload_file_size").html(this._formatSize(e)).end().find(".upload_progress_ing").animate({width:c + "px"}, {queue:false, duration:300}).end().find(".upload_progress_percent").html(c + "%").end().find(".upload_opration a").attr("menu", "cancel").html(Airdroid.UsedLang.Upload._menu_cancel).end().find(".uploadstatus").show()
}, _onComplete:function (e, c, a) {
    qq.FileUploaderBasic.prototype._onComplete.apply(this, arguments);
    var b = $(this._listElement).find("tr[fileId='" + e + "']");
    if (a.result == 1) {
        b.find(".uploadstatus").hide().siblings(".status").html(Airdroid.UsedLang.Upload._upload_success);
        b.attr("status", "2")
    } else {
        b.find(".uploadstatus").hide().siblings(".status").html(Airdroid.UsedLang.Upload._upload_fail);
        b.attr("status", "3")
    }
    b.find(".upload_opration a").attr("menu", "delete").html(Airdroid.UsedLang.Upload._menu_delete);
    if ($(this._listElement).find("tr[status='1']").length == 0 && $(this._listElement).find("tr[status='0']").length == 0) {
        if (this._options.allUploadComplete && $(this._listElement).find("tr[status='2']").length > 0) {
            this._options.allUploadComplete()
        }
    }
}, _addToList:function (e, c) {
    var a = this;
    var b = $(this._options.fileItemTemplate);
    b.attr("fileId", e).attr("status", "0").find(".upload_file_name").html(this._formatFileName(c)).end().find(".upload_opration a").html(Airdroid.UsedLang.Upload._menu_delete).click(function () {
        if ($(this).attr("menu") == "cancel") {
            var f = $(this).parents("tr[row='upload_item']");
            a._handler.cancel(f.attr("fileId"));
            $(this).html(Airdroid.UsedLang.Upload._menu_delete).attr("menu", "delete")
        } else {
            $(this).parents("tr[row='upload_item']").remove();
            $(".upload_list tr:even").attr("class", "even");
            $(".upload_list tr:odd").css("class", "odd");
            a._updateScrollPanel()
        }
    }).end().appendTo($(this._listElement));
    $(".upload_list tr:even").attr("class", "even");
    $(".upload_list tr:odd").attr("class", "odd")
}, _bindEvent:function () {
    var a = this;
    $(".uploader_top a.btn_white90").click(function () {
        $(a._listElement).find("tr[status='2']").remove();
        $(a._listElement).find("tr[status='3']").remove();
        a._updateScrollPanel()
    })
}});
var uploadWinTemplate = '<div class="uploader_top"><div class="tipDiv"></div><div class="btn_blue90" style="float:right;margin-top:10px;margin-bottom:10px;margin-left:20px;"><%=usedLang._menu_select_files%></div><a class="btn_white90"  title="<%=usedLang._title_clear %>" href="#" style="float:right;margin-top:10px;"><%=usedLang._menu_clear %></a></div><div class="upload_drop_area" style="display:none"><span>Drop files here to upload</span></div><div class="upload_list_wrap"><table width="100%" class="head"><tr><td  width="250px"><div class="upload_file_name"><%=usedLang._col_name %></div></td><td  width="120px"><div class="upload_progress"><%=usedLang._col_progress %></div></td><td  width="100px"><div class="upload_file_size"><%=usedLang._col_size %></div></td><td>&nbsp;&nbsp;&nbsp;&nbsp;</td></tr></table><div class="list_container"> <table  width="100%"><tbody class="upload_list"></tbody> </table></div></div></div>';
var uploadFileItemTemplate = '<tr row="upload_item"><td width="250px"><div class="upload_file_name"></div></td><td  width="120px"><div class="uploadstatus"><div class="upload_progress"><div class="upload_progress_ing"></div><div class="upload_progress_percent"></div></div></div><div class="status"></div></td><td  width="100px"><div class="upload_file_size"></div></td><td><div class="upload_opration"><a href="#" menu="delete"></a></div></td></tr>';
function openUploaderWin(l, c, j) {
    var g = "";
    if (g == "" || _.isUndefined(j)) {
        g = "Import to " + l
    } else {
        g = j + " to " + l
    }
    var f = "upload" + l.replace(/\//g, "_").replace(/\./g, "-").replace(/\s+/g, "_").replace(/\*/g, "_").replace(/\#/g, "_");
    if ($("#" + f).length == 0) {
        var b;
        var k;
        var e;
        $("<div id='" + f + "' class='upload_win'></div>'").hide().appendTo($("#main_container"));
        Windownize($("#" + f), {title:j, icon:"ui/theme/default/images/icon_import_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_import_80.png*/, resize:function (r, q) {
            var p = q.helper;
            var o = p.width() - 23;
            var n = p.height() - 46;
            $("#" + f).css("width", o + "px").css("height", n + "px").find(".upload_list_wrap").css("height", n - 42 + "px").find(".list_container").css("height", n - 70 + "px");
            if (!_.isUndefined(b)) {
                b._updateScrollPanel()
            }
            if (!_.isUndefined(e)) {
                e.reinitialise()
            }
        }, minWidth:580, minHeight:400, beforeClose:function () {
            if (!_.isUndefined(b)) {
                if ($("#" + f + " .upload_list").find("tr[status='1']").length > 0) {
                    showConfirmBox(Airdroid.UsedLang.Upload._has_file_not_uploadcomplete, function () {
                        b._handler.cancelAll();
                        $.publish("/e/t/bid", ["remove", "w_" + f]);
                        $("#" + f + " .upload_list").empty()
                    })
                } else {
                    $("#" + f + " .upload_list").empty();
                    return true
                }
            } else {
                if (!_.isUndefined(k)) {
                    if ($("#" + f + " .upload_list").find("tr[status='1']").length > 0) {
                        showConfirmBox(Airdroid.UsedLang.Upload._has_file_not_uploadcomplete, function () {
                            $("#" + f + " .upload_list").find("tr[status='1']").each(function () {
                                k.cancelUpload($(this).attr("fileId"))
                            });
                            $.publish("/e/t/bid", ["remove", "w_" + f]);
                            $("#" + f + " .upload_list").empty()
                        })
                    } else {
                        $("#" + f + " .upload_list").empty();
                        return true
                    }
                }
            }
        }});
        $.publish("/e/w/o/bid", [
            {windowName:f, windowTitle:"Import", tipMsg:g}
        ]);
        center($("#w_" + f));
        $("#w_" + f).css("z-index", getTopperZIndex() + 2);
        if ($.browser.msie) {
            var h = "upload_bnt_" + f;
            $("#" + f).html(_.template(uploadWinTemplate, {usedLang:Airdroid.UsedLang.Upload})).find(".btn_blue90").css("width", "86px").css("height", "25px").html("<span id='" + h + "'>Select Files</span>");
            e = $("#" + f).find(".list_container").jScrollPane({animateScroll:true, mouseWheelSpeed:150}).data("jsp");
            $("#" + f + " .uploader_top a.btn_white90").click(function () {
                $("#" + f).find("tr[status='2']").remove();
                $("#" + f).find("tr[status='3']").remove();
                e.reinitialise()
            });
            var a = {flash_url:"js/base/swfupload.swf"/*tpa=http://192.168.119.101:8888/js/base/swfupload.swf*/, flash9_url:"js/base/swfupload_fp9.swf"/*tpa=http://192.168.119.101:8888/js/base/swfupload_fp9.swf*/, upload_url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/comm/upfile/", file_types:c.flash_file_types, file_types_description:c.flash_file_types_description, button_placeholder_id:h, button_image_url:"ui/theme/default/images/select_files.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/select_files.png*/, button_width:90, button_height:26, button_action:SWFUpload.BUTTON_ACTION.SELECT_FILES, button_cursor:SWFUpload.CURSOR.HAND, button_window_mode:SWFUpload.WINDOW_MODE.TRANSPARENT, file_dialog_complete_handler:function () {
                this.startUpload()
            }, file_queued_handler:function (o) {
                var n = this;
                $(uploadFileItemTemplate).attr("fileId", o.id).attr("status", "0").find(".upload_file_name").html(o.name).attr("title", o.name).end().find(".upload_file_size").html(bytesToSize(o.size)).end().find(".upload_opration a").html(Airdroid.UsedLang.Upload._menu_delete).click(function () {
                    if ($(this).attr("menu") == "cancel") {
                        n.cancelUpload(o.id);
                        $(this).attr("menu", "delete").html(Airdroid.UsedLang.Upload._menu_delete)
                    } else {
                        $(this).parents("tr[row='upload_item']").remove();
                        e.reinitialise()
                    }
                }).end().appendTo($("#" + f + " .upload_list"));
                $("#" + f + " .upload_list tr:even").attr("class", "even");
                $("#" + f + " .upload_list tr:odd").attr("class", "odd");
                if (!_.isUndefined(e)) {
                    e.reinitialise()
                }
            }, upload_start_handler:function (n) {
                this.setUploadURL("http://" + Airdroid.Env.ConnectionAddress + "/sdctl/comm/upfile/?loader=2&fname=" + n.name + "&fpath=" + l + "&after=0&rtype=0")
            }, upload_progress_handler:function (p, r, q) {
                var o = Math.round(r / q * 100);
                var n = $("#" + f + " .upload_list").find("tr[fileId='" + p.id + "']");
                n.attr("status", 1).find(".upload_progress_ing").animate({width:o + "px"}, {queue:false, duration:300}).end().find(".upload_progress_percent").html(o + "%").end().find(".upload_opration a").attr("menu", "cancel").html(Airdroid.UsedLang.Upload._menu_cancel).end().find(".uploadstatus").show()
            }, upload_error_handler:function (o, p, q) {
                var n = $("#" + f + " .upload_list").find("tr[fileId='" + o.id + "']");
                if (p == SWFUpload.UPLOAD_ERROR.FILE_CANCELLED) {
                } else {
                    n.attr("status", "3").find(".uploadstatus").hide().siblings(".status").html(Airdroid.UsedLang.Upload._upload_fail)
                }
                n.find(".upload_opration a").attr("menu", "delete").html(Airdroid.UsedLang.Upload._menu_delete)
            }, upload_success_handler:function (q, o, n) {
                var p = $("#" + f + " .upload_list").find("tr[fileId='" + q.id + "']");
                p.find(".upload_opration a").attr("menu", "delete").html(Airdroid.UsedLang.Upload._menu_delete);
                p.attr("status", "2").find(".uploadstatus").hide().siblings(".status").html(Airdroid.UsedLang.Upload._upload_success);
                if ($("#" + f).find("tr[status='1']").length == 0 && $("#" + f).find("tr[status='0']").length == 0) {
                    if (c.allUploadComplete && $("#" + f).find("tr[status='2']").length > 0) {
                        c.allUploadComplete()
                    }
                }
            }};
            k = new SWFUpload(a)
        } else {
            var m = {element:document.getElementById(f), destDir:l, winId:f, template:_.template(uploadWinTemplate, {usedLang:Airdroid.UsedLang.Upload}), action:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/comm/upfile/", debug:false, onSubmit:function (o, n) {
                b.setParams({loader:3, fname:n, fpath:l, after:0, rtype:0})
            }};
            qq.extend(m, c);
            b = new qq.Uploader(m)
        }
        $("#" + f + " .uploader_top .tipDiv").html(c.suportTypeMsg)
    } else {
        $.publish("/e/w/o/bid", [
            {windowName:f, windowTitle:"Import", tipMsg:g}
        ]);
        $("#w_" + f).css("z-index", getTopperZIndex() + 2)
    }
}
var Airdroid = {};
Airdroid.debug = false;
Airdroid.Env = {ConnectionAddress:"", websocket_port:"8889"};
Airdroid.Socket = {pollWayTimerInterval:5, mostConnectTimes:5, closedConnectInterval:5};
Airdroid.Version = "";
Airdroid.Config = {Cloudy:false, CloudyAddress:"", Theme:"default", SoftDefault:{sort:0, order:0, apktype:1}, DebounceTime:300, ThrottleTime:300};
console = {};
console.info = function () {
};
console.log = function () {
};
console.dir = function () {
};
var NetworkError = function (a) {
    a = _.isFunction(a) ? a : function () {
    };
    showMsgBox(Airdroid.Lang.Common._ERR_NETWORK, a)
};
var UrlParamsFix = function (a) {
    return a
};
Airdroid.LimitTimes = {};
String.prototype.format = function () {
    if (arguments.length == 0) {
        return this
    }
    for (var b = this, a = 0; a < arguments.length; a++) {
        b = b.replace(new RegExp("\\{" + a + "\\}", "g"), arguments[a])
    }
    return b
};
var parseXML = function (a) {
    if (window.ActiveXObject) {
        var b = new ActiveXObject("Microsoft.XMLDOM");
        b.loadXML(a);
        return b
    } else {
        if (window.DOMParser) {
            return(new DOMParser).parseFromString(a, "text/xml")
        }
    }
    return""
};
var DisableButton = function (b) {
    b.attr("disabled", "disabled");
    b.addClass("disabled");
    b.addClass("btn-state-disabled");
    try {
        var a = b.attr("class").indexOf("blue") != -1;
        if (a) {
            b.css("color", "#5CA1E8")
        }
    } catch (c) {
    }
};
var EnableButton = function (b) {
    b.removeAttr("disabled");
    b.removeClass("disabled");
    b.removeClass("btn-state-disabled");
    if (b.attr("class")) {
        var a = b.attr("class").indexOf("blue") != -1;
        if (a) {
            b.css("color", "white")
        }
    }
};
function isiPad() {
    return(navigator.platform.indexOf("iPad") != -1)
}
function isLandScape() {
    if (window.orientation % 180 == 0) {
        return false
    } else {
        return true
    }
}
(function (a) {
    a.fn.liveDraggable = function (b) {
        this.live("mouseover", function () {
            if (!a(this).data("init")) {
                a(this).data("init", true).draggable(b)
            }
        });
        return this
    }
}(jQuery));
var updateLoginProcess = function (a, b) {
    if (!b) {
        Airdroid.LoadingProcess.animate({width:a * 2 + "px"}, {queue:false, duration:100})
    } else {
        Airdroid.LoadingProcess.animate({width:a * 2 + "px"}, {queue:false, duration:300})
    }
    if (a == 100) {
        $.publish("[to:ui]/event/login/load/complete", [])
    }
};
Airdroid.CurDate = new Date();
var prettyDate = function (a) {
    var b = "";
    var e = new Date();
    e.setTime(a);
    if (e.getDate() == Airdroid.CurDate.getDate() && e.getMonth() == Airdroid.CurDate.getMonth() && e.getFullYear() == Airdroid.CurDate.getFullYear()) {
        b = "Today, "
    } else {
        if ((Airdroid.CurDate.getDate() - e.getDate()) == 1 && e.getMonth() == Airdroid.CurDate.getMonth() && e.getFullYear() == Airdroid.CurDate.getFullYear()) {
            b = "Yesterday, "
        } else {
            b = e.toDateString() + ", "
        }
    }
    var c = " AM";
    hour = e.getHours();
    if (hour > 11) {
        c = " PM"
    }
    if (hour > 12) {
        hour = hour - 12
    }
    if (hour == 0) {
        hour = 12
    }
    b += hour + ":" + e.getMinutes() + c;
    return b
};
var unique = function (j) {
    var b = [], a = {};
    try {
        for (var c = 0, f = j.length; c < f; c++) {
            var h = jQuery.array[c];
            if (!a[h]) {
                a[h] = true;
                b.push(j[c])
            }
        }
    } catch (g) {
        b = j
    }
    return b
};
function secondsToTime(b) {
    var e = Math.floor(b / 3600);
    var a = Math.floor((b - (e * 3600)) / 60);
    var c = Math.floor(b - (e * 3600) - (a * 60));
    e = e == 0 ? "" : (e + " hour ");
    a = a == 0 ? "" : (a + " min ");
    c = c == 0 ? "" : (c + " sec ");
    return e + a + c
}
var ajaxHelper = function (a, b, e, c) {
    $.jsonp({url:a, success:function (f) {
        if (_.isFunction(b)) {
            b(f)
        }
    }, error:function (f, g) {
        if (_.isFunction(e)) {
            e(g)
        }
    }, complete:function (f, g) {
        if (_.isFunction(c)) {
            c(g)
        }
    }})
};
var unescape = function (a) {
    return $.parseJSON(decodeURIComponent(decode64(a.content)))
};
function windowNameTrim(a) {
    return $.trim(a.replace(/\+/g, ""))
}
var SMSWordCounter = function (g) {
    return g.length;
    var e = 160;
    if (_.isEmpty(g)) {
        return e
    }
    for (var c = 0; c < g.length; c++) {
        if (g.charCodeAt(c) < 0 || g.charCodeAt(c) > 255) {
            e = 70;
            break
        }
    }
    var a = "";
    var b = e - g.length % e;
    var f = parseInt(g.length / e) + 1;
    a = b + (f == 1 ? "" : " / " + f);
    return a
};
Airdroid.Cache = {};
Airdroid.Cache.DetectPosition = 0;
Airdroid.Cache.ScrollTop = 0;
Airdroid.Cache.AutoLoadTriggerScrollHeight = 100;
Airdroid.Cache.AppDetailShow = false;
Airdroid.Cache.AppCanLoad = false;
Airdroid.Cache.NeedResize = true;
Airdroid.ScrollPane = {};
Airdroid.DesktopIcon = [];
Airdroid.CustomResizeFuncArray = [];
Airdroid.Timer = {};
Airdroid.Util = {};
Airdroid.Util.GetTemplate = function (a) {
    if (_.isUndefined(Airdroid.Cache.TemplateXML)) {
        Airdroid.Cache.TemplateXML = parseXML($.ajax({url:"ui/template/all.xml.htm"/*tpa=http://192.168.119.101:8888/ui/template/all.xml*/, dataType:"text", async:false, cache:true}).responseText)
    }
    return $(Airdroid.Cache.TemplateXML).find(a).text()
};
Airdroid.Util.Disable = function (a) {
    a.attr("disabled", "disabled")
};
Airdroid.Util.Enable = function (a) {
    a.removeAttr("disabled")
};
Airdroid.Util.Readonly = function (a) {
    a.attr("readonly", "readonly")
};
Airdroid.Util.Writable = function (a) {
    a.removeAttr("readonly")
};
function bytesToSize(a) {
    var c = ["Bytes", "KB", "MB", "GB", "TB"];
    if (a == 0) {
        return""
    }
    var b = parseInt(Math.floor(Math.log(a) / Math.log(1024)));
    return(a / Math.pow(1024, b)).toFixed(1) + " " + c[b]
}
function downloadApp(e, f, c, b, g) {
    if (!_.isUndefined(Airdroid.Cache.TaskManageModel)) {
        var a = Airdroid.Cache.TaskManageModel.tasks.getByTaskUrl(b);
        if (!_.isUndefined(a)) {
            showConfirmBox(c + " is already in download list, you want to download it again?", function () {
                doDownloadApp(e, f, c, b, g)
            });
            return
        }
    }
    doDownloadApp(e, f, c, b, g)
}
function doDownloadApp(c, f, b, a, h) {
    var g = "0";
    var e = b;
    if (_.isUndefined(b)) {
        e = "android App"
    }
    $.jsonp({url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/taskmanage/add/?type=" + c + "&fileext=" + f + "&name=" + encodeURI(e) + "&url=" + encodeURI(a) + "&remark=" + encodeURI(h) + "&opstr=" + g + "&callback=?", success:function (j) {
        if (j.err == 0) {
            if (!_.isUndefined(b)) {
                showTipMsg("Downloading [" + b + ']<br/>Check status in "Downloads".')
            } else {
                showTipMsg("add the task successed!")
            }
            if (!_.isUndefined(Airdroid.Cache.TaskManageModel)) {
                Airdroid.Cache.TaskManageModel.updateTasks()
            }
        } else {
            if (j.err == 1) {
            } else {
                showMsgBox("can not connect the server!")
            }
        }
    }, error:function () {
        showMsgBox("can not connect the server!")
    }})
}
function createSelection(c, e, b) {
    if (c.createTextRange) {
        var a = c.createTextRange();
        a.collapse(true);
        a.moveStart("character", e);
        a.moveEnd("character", b);
        a.select()
    } else {
        if (c.setSelectionRange) {
            c.setSelectionRange(e, b)
        } else {
            if (c.selectionStart) {
                c.selectionStart = e;
                c.selectionEnd = b
            }
        }
    }
    c.focus()
}
function showTipMsg(a) {
}
function showMsgBox(e, c, b) {
    var a = "<div id='msg'>                      <div class='msg_top'>                        <div class='msg_top_l'></div>                        <div class='msg_top_r'></div>                        <div class='msg_top_c'></div>                      </div>                      <div class='msg_container'>                        <div class='msg_container_l'></div>                        <div class='msg_container_r'></div>                        <div class='msg_container_c'>                            <div class='msg_container_text'>                                <span style='float:left;width:100%;text-align:left;padding-left:10px;'>Message</span>                                <hr style='float:left;width:100%;margin-top:5px;'>                                <span style='position: absolute; left: 6%; top: 30%;'>                                <a class='alert_icon' id='aicon'/>                                </span>                                <span style='text-align:left; position: absolute; top: 35%; left: 22%;width:75%;' id='msgZone'>                                </span>                            </div>                            <div class='msg_container_command'>                                <div class='btns'>                                <a class='btn_white75' id='okBtn' href='#' style='font-size:8pt;margin:0 auto;width:75px;'>OK</a>                                </div>                            </div>                      </div>                      <div class='msg_bottom'>                        <div class='msg_bottom_l'></div>                        <div class='msg_bottom_r'></div>                        <div class='msg_bottom_c'></div>                      </div>                    </div>";
    $(a).modal({position:["30%", ], overlayId:"message-overlay", containerId:"message-container", zIndex:1500, onShow:function (f) {
        var g = this;
        if (b == true) {
            $("#aicon", $(f.data)).attr("class", "finish_icon")
        } else {
            $("#aicon", $(f.data)).attr("class", "alert_icon")
        }
        $("#msgZone", $(f.data)).append(e);
        $("#okBtn", $(f.data)).click(function () {
            g.close();
            if (!_.isUndefined(c) && _.isFunction(c)) {
                c()
            }
        })
    }})
}
function showConfirmBox(c, f, a, e) {
    if (e == "" || _.isUndefined(e)) {
        e = "Confirm"
    }
    var b = "<div id='confirmMsg'>                      <div class='msg_top'>                        <div class='msg_top_l'></div>                        <div class='msg_top_r'></div>                        <div class='msg_top_c'></div>                      </div>                      <div class='msg_container'>                        <div class='msg_container_l'></div>                        <div class='msg_container_r'></div>                        <div class='msg_container_c'>                            <div class='msg_container_text'>                                <span id='confirm_title' style='float:left;width:100%;text-align:left;padding-left:10px;'>Confirm</span>                                <hr style='float:left;width:100%;margin-top:5px;'>                                <span style='position: absolute; left: 4%; top: 30%;'>                                <a class='confirm_icon'/>                                </span>                                <span style='text-align:left; position: absolute; top: 36%; left: 20%;width:75%;' id='msgZone'>                                </span>                            </div>                            <div class='msg_container_command'>                                <div class='btns'>                                <a class='btn_white75' id='confirmYesBtn' href='#' style='font-size:8pt;'>OK</a>                                <a class='btn_white75' id='confirmNoBtn' href='#' style='font-size:8pt;'>Cancel</a>                                </div>                            </div>                      </div>                      <div class='msg_bottom'>                        <div class='msg_bottom_l'></div>                        <div class='msg_bottom_r'></div>                        <div class='msg_bottom_c'></div>                      </div>                    </div>";
    $(b).modal({position:["30%", ], overlayId:"confirm-overlay", containerId:"confirm-container", zIndex:1500, onShow:function (g) {
        var h = this;
        $("#msgZone", $(g.data)).html(c);
        $("#confirm_title", $(g.data)).html(e);
        $("#confirmYesBtn", $(g.data)).click(function () {
            if ($.isFunction(f)) {
                f.apply()
            }
            h.close()
        });
        $("#confirmNoBtn", $(g.data)).click(function () {
            if ($.isFunction(a)) {
                a.apply()
            }
            h.close()
        })
    }})
}
function showUploadDialog(b) {
    var a = "<div id='uploadDialog'>                      <div class='dialog_top'>                        <div class='dialog_top_l'></div>                        <div class='dialog_top_r'></div>                        <div class='dialog_top_c'></div>                      </div>                      <div class='dialog_container'>                        <div class='dialog_container_l'></div>                        <div class='dialog_container_r'></div>                        <div class='dialog_container_c'>                            <div class='dialog_container_text' id='dialog_upload_area'>                                <span style='float:left;width:100%;text-align:left;padding-left:10px;'>" + b + "</span>                                <hr style='float:left;width:100%;margin-top:5px;'>                            </div>                            <div class='dialog_container_command'>                                <div class='btns'>                                <a class='btn_white75' id='upload_CloseBtn' href='#' style='font-size:8pt;'>Close</a>                                </div>                            </div>                      </div>                      <div class='dialog_bottom'>                        <div class='dialog_bottom_l'></div>                        <div class='dialog_bottom_r'></div>                        <div class='dialog_bottom_c'></div>                      </div>                    </div>";
    $(a).modal({position:["30%", ], overlayId:"confirm-overlay", containerId:"upload-container", onShow:function (c) {
        var e = this;
        $("#upload_CloseBtn", $(c.data)).click(function () {
            e.close()
        })
    }})
}
function showTxtView(b) {
    var a = "<div id='uploadDialog'>                      <div class='dialog_top'>                        <div class='dialog_top_l'></div>                        <div class='dialog_top_r'></div>                        <div class='dialog_top_c'></div>                      </div>                      <div class='dialog_container'>                        <div class='dialog_container_l'></div>                        <div class='dialog_container_r'></div>                        <div class='dialog_container_c'>                            <div class='dialog_container_text' id='dialog_upload_area'>                                <span style='float:left;width:100%;text-align:left;padding-left:10px;'>" + b + "</span>                                 <iframe  id='txt-content' style='width:596px;height:317px'>                                 </iframe>                            </div>                            <div class='dialog_container_command'>                                <div class='btns'>                                <a class='btn_white75' id='upload_CloseBtn' href='#' style='font-size:8pt;'>Close</a>                                </div>                            </div>                      </div>                      <div class='dialog_bottom'>                        <div class='dialog_bottom_l'></div>                        <div class='dialog_bottom_r'></div>                        <div class='dialog_bottom_c'></div>                      </div>                    </div>";
    $(a).modal({position:["30%", ], overlayId:"confirm-overlay", containerId:"upload-container", onShow:function (c) {
        var e = this;
        $("#upload_CloseBtn", $(c.data)).click(function () {
            e.close()
        })
    }})
}
function showPromptBox(f, h, b, g, a, c) {
    var e = "<div id='confirmMsg'>                      <div class='msg_top'>                        <div class='msg_top_l'></div>                        <div class='msg_top_r'></div>                        <div class='msg_top_c'></div>                      </div>                      <div class='msg_container'>                        <div class='msg_container_l'></div>                        <div class='msg_container_r'></div>                        <div class='msg_container_c'>                            <div class='msg_container_text'>                                <span style='float:left;width:100%;text-align:left;padding-left:10px;'>" + f + "</span>                                <hr style='float:left;width:100%;margin-top:5px;'>                                <span style='position: absolute; left: 4%; top:34%;'>" + h + ":</span>                                <span style='text-align:left; position: absolute; top: 36%; left: 26%;width:60%;' id='msgZone'><input type='text' id='prompInput' value='" + b + "' style='width:100%'/></span>                                <div class='msgDiv'>dddd</div>                            </div>                            <div class='msg_container_command'>                                <div class='btns'>                                <a class='btn_white75' id='promptYesBtn' href='#' style='font-size:8pt;'>OK</a>                                <a class='btn_white75' id='promptNoBtn' href='#' style='font-size:8pt;'>Cancel</a>                                </div>                            </div>                      </div>                      <div class='msg_bottom'>                        <div class='msg_bottom_l'></div>                        <div class='msg_bottom_r'></div>                        <div class='msg_bottom_c'></div>                      </div>                    </div>";
    $(e).modal({position:["30%", ], overlayId:"confirm-overlay", containerId:"confirm-container", onShow:function (j) {
        var k = this;
        $(".msgDiv", $(j.data)).html("");
        $("#prompInput").keyup(function (l) {
            if (l.keyCode == 13) {
                $("#promptYesBtn").trigger("click")
            }
        });
        $("#promptYesBtn", $(j.data)).click(function () {
            if ($.isFunction(c)) {
                var l = c.apply(this, [$("#prompInput", $(j.data)).val()]);
                if (l != null) {
                    $(".msgDiv", $(j.data)).html(l);
                    $("#prompInput").focus();
                    return
                }
            }
            k.close();
            if ($.isFunction(g)) {
                g.apply(this, [$("#prompInput", $(j.data)).val()])
            }
        });
        $("#promptNoBtn", $(j.data)).click(function () {
            k.close();
            if ($.isFunction(a)) {
                a.apply()
            }
        })
    }})
}
var IsModuleInActive = function (a) {
    var b = $("#taskbar_content").find("#m" + a);
    if (b.length == 1 && b.hasClass("active")) {
        return true
    } else {
        return
    }
    false
};
var DesktopMap = [];
var _icon_padding_left = 100;
var _icon_padding_top = 30;
var _icon_width = 114;
var _icon_height = 114;
var getDesktopIconMap = function () {
    var a = [];
    $("#main_container a.icon").each(function () {
        var c = $(this);
        var f = c.position().left + _icon_width / 2 - _icon_padding_left;
        var e = c.position().top + _icon_height / 2 - _icon_padding_top;
        var b = Math.floor(f / _icon_width);
        var g = Math.floor(e / _icon_height);
        a.push({e:c, x:b, y:g})
    });
    return a
};
var storeCurrentDesktopMap = function () {
    DesktopMap = null;
    DesktopMap = getDesktopIconMap()
};
var isDesktopIconOverflow = function () {
    var a = $("#main_container").height() - _icon_padding_top;
    var b = Math.floor(a / _icon_height) - 1;
    var c = 0;
    _.each(DesktopMap, function (e) {
        if (e.y > c) {
            c = e.y
        }
    });
    if (c > b) {
        return true
    } else {
        return false
    }
};
var getDesktopMaxVertical = function () {
    var a = $("#main_container").height() - _icon_padding_top;
    var b = Math.floor(a / _icon_height) - 1;
    return b
};
var getDesktopIconMaxVertical = function () {
    var a = 0;
    _.each(DesktopMap, function (b) {
        if (b.y > a) {
            a = b.y
        }
    });
    return a
};
var scrollResizeControll = function () {
    $("body").css("top", -$("body").scrollTop() + "px").css("left", -$("body").scrollLeft() + "px")
};
var smallWindow = false;
var maxWindowDOMs = [];
var resizeControll = function () {
    $(window).unbind("resize");
    $(window).resize(function () {
        if ($(window).width() < 800 && $(window).height() < 600) {
            $("#main_container").css("width", "800px");
            $("#main_container").css("height", 600 - 45 + "px");
            $(".window").addClass("window-rel");
            $("body").css("position", "absolute");
            $("body").css("width", "800px");
            $("body").css("height", 600 + "px");
            $("html").css("overflow", "scroll");
            $("body").css("overflow", "auto");
            $(window).unbind("scroll", scrollResizeControll).bind("scroll", scrollResizeControll);
            smallWindow = true
        } else {
            if ($(window).width() < 800 && $(window).height() >= 600) {
                $("#main_container").css("width", "800px");
                $("#main_container").css("height", $(window).height() - 45 + "px");
                $(".window").addClass("window-rel");
                $("body").css("position", "absolute");
                $("body").css("width", "800px");
                $("body").css("height", "100%");
                $("html").css("overflow", "scroll");
                $("body").css("overflow", "auto");
                $(window).unbind("scroll", scrollResizeControll).bind("scroll", scrollResizeControll);
                smallWindow = true
            } else {
                if ($(window).width() >= 800 && $(window).height() < 600) {
                    $("#main_container").css("height", 600 - 45 + "px");
                    $("#main_container").css("width", "100%");
                    $(".window").addClass("window-rel");
                    $("body").css("position", "absolute");
                    $("body").css("width", "100%");
                    $("body").css("height", "600px");
                    $("html").css("overflow", "scroll");
                    $("body").css("overflow", "auto");
                    $(window).unbind("scroll", scrollResizeControll).bind("scroll", scrollResizeControll);
                    smallWindow = true
                } else {
                    $("#main_container").css("width", "100%");
                    $("#main_container").css("height", $(window).height() - 45 + "px");
                    $(".window").removeClass("window-rel");
                    $("body").css("position", "absolute");
                    $("body").css("top", "0px").css("left", "0px");
                    $("body").css("width", "100%");
                    $("body").css("height", "100%");
                    $("html").css("overflow", "hidden");
                    smallWindow = false
                }
            }
        }
        $("#taskbar_content").css("width", $(window).width() - 175 + "px");
        var g = ($(window).height() - 45 - $("#shortcut_bar").height()) / 2;
        if (g < 0) {
            g = 0
        }
        $("#shortcut_bar").css("top", g + "px");
        var e = ($(window).width() - $("#pagelet_search_bar").width()) / 2;
        if (e < 0) {
            e = 0
        }
        $("#pagelet_search_bar").css("left", e + "px");
        var c = $("#main_container a.icon").length;
        var a = getDesktopMaxVertical() + 1 <= 0 ? 1 : getDesktopMaxVertical() + 1;
        if (c < a) {
            for (var f = 0; f < c; f++) {
                $("#main_container a.icon").eq(f).css({left:_icon_padding_left + 0 * _icon_width, top:_icon_padding_top + f * _icon_height})
            }
        } else {
            for (var b = 0; b < Math.ceil(c / a); b++) {
                for (var f = 0; f < a; f++) {
                    if (b * a > c) {
                        break
                    }
                    $("#main_container a.icon").eq(b * a + f).css({left:_icon_padding_left + b * _icon_width, top:_icon_padding_top + f * _icon_height})
                }
            }
        }
        _.each(maxWindowDOMs, function (k) {
            var j = $("#main_container").width() - 60;
            var h = $("#main_container").height() + 3;
            resizeTo(k, j, h);
            k.trigger("cresize")
        })
    })
};
var dateFormat = function () {
    var a = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g, b = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g, e = /[^-+\dA-Z]/g, c = function (g, f) {
        g = String(g);
        f = f || 2;
        while (g.length < f) {
            g = "0" + g
        }
        return g
    };
    return function (k, x, t) {
        var h = dateFormat;
        if (arguments.length == 1 && Object.prototype.toString.call(k) == "[object String]" && !/\d/.test(k)) {
            x = k;
            k = undefined
        }
        k = k ? new Date(k) : new Date;
        if (isNaN(k)) {
            throw SyntaxError("invalid date")
        }
        x = String(h.masks[x] || x || h.masks["default"]);
        if (x.slice(0, 4) == "UTC:") {
            x = x.slice(4);
            t = true
        }
        var v = t ? "getUTC" : "get", p = k[v + "Date"](), f = k[v + "Day"](), l = k[v + "Month"](), r = k[v + "FullYear"](), u = k[v + "Hours"](), n = k[v + "Minutes"](), w = k[v + "Seconds"](), q = k[v + "Milliseconds"](), g = t ? 0 : k.getTimezoneOffset(), j = {d:p, dd:c(p), ddd:h.i18n.dayNames[f], dddd:h.i18n.dayNames[f + 7], m:l + 1, mm:c(l + 1), mmm:h.i18n.monthNames[l], mmmm:h.i18n.monthNames[l + 12], yy:String(r).slice(2), yyyy:r, h:u % 12 || 12, hh:c(u % 12 || 12), H:u, HH:c(u), M:n, MM:c(n), s:w, ss:c(w), l:c(q, 3), L:c(q > 99 ? Math.round(q / 10) : q), t:u < 12 ? "a" : "p", tt:u < 12 ? "am" : "pm", T:u < 12 ? "A" : "P", TT:u < 12 ? "AM" : "PM", Z:t ? "UTC" : (String(k).match(b) || [""]).pop().replace(e, ""), o:(g > 0 ? "-" : "+") + c(Math.floor(Math.abs(g) / 60) * 100 + Math.abs(g) % 60, 4), S:["th", "st", "nd", "rd"][p % 10 > 3 ? 0 : (p % 100 - p % 10 != 10) * p % 10]};
        return x.replace(a, function (m) {
            return m in j ? j[m] : m.slice(1, m.length - 1)
        })
    }
}();
dateFormat.masks = {"default":"yyyy/mm/dd HH:MM", shortDate:"m/d/yy", mediumDate:"mmm d, yyyy", longDate:"mmmm d, yyyy", fullDate:"dddd, mmmm d, yyyy", shortTime:"h:MM TT", mediumTime:"h:MM:ss TT", longTime:"h:MM:ss TT Z", isoDate:"yyyy-mm-dd", isoTime:"HH:MM:ss", isoDateTime:"yyyy-mm-dd'T'HH:MM:ss", isoUtcDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"};
dateFormat.i18n = {dayNames:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], monthNames:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]};
Date.prototype.format = function (a, b) {
    return dateFormat(this, a, b)
};
Airdroid.Cache.TipsTemplate = undefined;
var showMaskTip = function (g, k, n, o, h, l, c, m, j) {
    if (_.isUndefined(Airdroid.Cache.TipsTemplate)) {
        var f = Airdroid.Util.GetTemplate("tips");
        Airdroid.Cache.TipsTemplate = _.template(f)
    }
    var a = g.offset().top + g.height() + 20;
    if (g.offset().top + g.height() + 240 > $(window).height()) {
        a = g.offset().top - 240
    }
    var e = {tipType:k, leftWidth:g.offset().left - 10, targetTop:g.offset().top, targetHeight:g.height(), targetWidth:g.width() + 20, rightWidth:$(window).width() - g.offset().left - g.width() - 10, imgTop:a, imgRight:$(window).width() - g.offset().left - g.width()};
    var b = $(Airdroid.Cache.TipsTemplate(e));
    if ($(".waiting", g).length == 0) {
        $(".app_list_item_col_command", g).append('<div class="waiting" style="margin-right:20px;display:inline-block;"><a style="width: 25px;height: 70px;display: block;background: transparent url(./ui/theme/default/images/until.png) no-repeat 0px -306px;float: left;"></a><span style=" float: left; ">' + h + '</span><span style="float:left;margin-left:10px; cursor:pointer;" class="restoreit">' + c + "</span></div>");
        if (!_.isUndefined(m) && m == true) {
            $(".restoreit", g).click(function () {
                g.remove()
            })
        } else {
            $(".restoreit", g).click(function () {
                var p = $(this).parents(".app_list_item_col_command");
                p.find(".waiting").remove();
                p.find(".app_list_item_command_line").css("display", "")
            })
        }
    }
    $(".app_list_item_command_line", g).hide();
    $(".waiting", g).show();
    if (_.isUndefined(store.get(n)) && j != false) {
        if ($("#clew_light").length == 0 && $("#" + o).closest(".window").is(":visible")) {
            $(".close", b).click(function (p) {
                store.set(n, "1")
            });
            b.click(function (p) {
                $(this).remove()
            });
            $("body").append(b)
        }
    }
    $(g).find(".waiting").click(function () {
        var p = g.offset().top + g.height() + 20;
        if (g.offset().top + g.height() + 240 > $(window).height()) {
            p = g.offset().top - 240
        }
        var r = {tipType:k, leftWidth:g.offset().left - 10, targetTop:g.offset().top, targetHeight:g.height(), targetWidth:g.width() + 20, rightWidth:$(window).width() - g.offset().left - g.width() - 10, imgTop:p, imgRight:$(window).width() - g.offset().left - g.width()};
        var q = $(Airdroid.Cache.TipsTemplate(r));
        if ($("#clew_light").length == 0) {
            $(".close", q).click(function (s) {
                store.set(n, "1")
            });
            q.click(function (s) {
                $(this).remove()
            });
            $("body").append(q)
        }
    })
};
var showDownloadMaskTip = function (g, k, n, o, h, l, c, m, j) {
    if (_.isUndefined(Airdroid.Cache.TipsTemplate)) {
        var f = Airdroid.Util.GetTemplate("tips");
        Airdroid.Cache.TipsTemplate = _.template(f)
    }
    var a = g.offset().top + g.height() + 20;
    if (g.offset().top + g.height() + 240 > $(window).height()) {
        a = g.offset().top - 240
    }
    var e = {tipType:k, leftWidth:g.offset().left - 10, targetTop:g.offset().top, targetHeight:g.height(), targetWidth:g.width() + 20, rightWidth:$(window).width() - g.offset().left - g.width() - 10, imgTop:a, imgRight:$(window).width() - g.offset().left - g.width()};
    var b = $(Airdroid.Cache.TipsTemplate(e));
    if ($(".waiting", g).length == 0) {
        $(".download_speed", g).html('<div class="waiting" style="margin-right:20px;display:inline-block;"><a style="width:25px; height:36px; display:block;  top:-13px;  background:transparent url(./ui/theme/default/images/until.png) no-repeat 0px -321px; position: absolute;"></a><span style=" float: left;">' + h + "</span></div>")
    }
    $(".waiting", g).show();
    if (_.isUndefined(store.get(n)) && j != false) {
        if ($("#clew_light").length == 0 && $("#" + o).closest(".window").is(":visible")) {
            $(".close", b).click(function (p) {
                store.set(n, "1")
            });
            b.click(function (p) {
                $(this).remove()
            });
            $("body").append(b)
        }
    }
    $(g).find(".waiting").click(function () {
        var p = g.offset().top + g.height() + 20;
        if (g.offset().top + g.height() + 240 > $(window).height()) {
            p = g.offset().top - 240
        }
        var r = {tipType:k, leftWidth:g.offset().left - 10, targetTop:g.offset().top, targetHeight:g.height(), targetWidth:g.width() + 20, rightWidth:$(window).width() - g.offset().left - g.width() - 10, imgTop:p, imgRight:$(window).width() - g.offset().left - g.width()};
        var q = $(Airdroid.Cache.TipsTemplate(r));
        if ($("#clew_light").length == 0) {
            $(".close", q).click(function (s) {
                store.set(n, "1")
            });
            q.click(function (s) {
                $(this).remove()
            });
            $("body").append(q)
        }
    })
};
var clearMaskTip = function () {
    if ($("#clew_light").length != 0) {
        $("#clew_light").remove()
    }
};
var showWaitingTip = function (b, a) {
    if ($(".app_item_tip", b).length == 0) {
        $(".app_list_item_col_command", b).append("<div class='app_item_tip' style='text-align:center'>" + a + "</div>")
    } else {
        $(".app_item_tip", b).html(a)
    }
    $(".app_list_item_command_line", b).hide()
};
var clearWaitingTip = function (a) {
    $(".app_item_tip", a).remove();
    $(".app_list_item_command_line", a).css("display", "")
};
var errorHandle = function (l, h, e) {
    showMsgBox("Network Connection Error !");
    return false;
    switch (l) {
        case 1:
            h = "AJAX Fail";
            e = "Application encounter an error during communicating with server";
            break
    }
    var j = document.body;
    var f = document.createElement("div");
    f.style.cssText = "position:absolute;z-index:32766;width:100%;height:100%;background-color:#000000;opacity:0.75";
    f.style.filter = "alpha(opacity=75)";
    j.appendChild(f);
    var a = document.createElement("div");
    a.style.cssText = "position:absolute;z-index:32767;width:100%;height:100%;overflow:hidden;";
    j.appendChild(a);
    var c = document.createElement("div");
    c.style.cssText = "color:#ffffff;padding:20px 40px 0px;border-bottom:4px solid #af1f1f;background-color:#5f1f1f;";
    var k = document.createElement("div");
    k.style.cssText = "font-weight: bold; margin-bottom:20px;";
    k.appendChild(document.createTextNode(h));
    c.appendChild(k);
    var g = document.createElement("div");
    g.style.cssText = "max-height:10em;overflow:auto;margin-bottom:20px;";
    g.appendChild(document.createTextNode(e));
    c.appendChild(g);
    a.appendChild(c);
    var b = document.createElement("div");
    b.id = "failRestart";
    b.tabIndex = "0";
    b.style.cssText = "margin-bottom:20px;cursor:pointer;font-weight:bold;padding:2px 10px;border: 1px outset #af2f2f;background-color:#af2f2f;";
    b.appendChild(document.createTextNode("Restart App"));
    c.appendChild(b);
    $("#failRestart").click(function () {
        location.reload(true)
    })
};
(function (a) {
    a.fn.clickAndDblClick = function (b) {
        return this.each(function () {
            var c = a.extend({}, a.fn.clickAndDblClick.Default, b || {});
            var e = this;
            do_click = function (f) {
                clearTimeout(c.timer);
                c.timer = setTimeout(function () {
                    c.oneclick.call(e, f)
                }, 300)
            }, do_dblclick = function (f) {
                clearTimeout(c.timer);
                c.dblclick.call(e, f)
            };
            a(this).click(do_click).dblclick(do_dblclick)
        })
    };
    a.fn.clickAndDblClick.Default = {timer:null, oneclick:a.noop, dblclick:a.noop}
})(jQuery);
var zIndexMem = 2;
function getTopperZIndex() {
    zIndexMem++;
    return zIndexMem
}
var idFilter = function (a) {
    a = a.toString().replace(/\./g, "");
    return a
};
var resizeTo = function (b, a, e, c) {
    b.css("width", a + "px");
    b.css("height", e + "px");
    if (a < parseInt(b.attr("mw")) || e < parseInt(b.attr("mh"))) {
        return
    }
    if (_.isFunction(c)) {
        c({}, {helper:b})
    }
};
var WindowDisableResize = function (a) {
    a.attr("resize", "false");
    a.find(".window-bottom-c").addClass("window-resize-s-disable");
    a.find(".window-bottom-r").addClass("window-resize-se-disable");
    a.find(".window-body-r").addClass("window-resize-e-disable");
    a.resizable("disable")
};
var WindowRestoreResize = function (a) {
    a.attr("resize", "true");
    a.find(".window-bottom-c").removeClass("window-resize-s-disable");
    a.find(".window-bottom-r").removeClass("window-resize-se-disable");
    a.find(".window-body-r").removeClass("window-resize-e-disable");
    a.resizable("enable")
};
var Windownize = function (e, k) {
    if (e.parent().hasClass("window-body-c")) {
        return
    }
    if (_.isUndefined(Airdroid.Cache.WindowTemplate)) {
        var c = Airdroid.Util.GetTemplate("window");
        Airdroid.Cache.WindowTemplate = _.template(c)
    }
    var h = e.attr("id");
    var j = $(Airdroid.Cache.WindowTemplate({content_id:h}));
    if (smallWindow) {
        j.addClass("window-rel")
    }
    var f = j.find(".window-body-c");
    $(".window-_", j).click(function () {
        $.publish("/e/t/bid", ["min", h])
    });
    $(".window-x", j).click(function () {
        if (_.isFunction(k.beforeClose)) {
            var l = k.beforeClose.apply(null);
            if (l) {
                $.publish("/e/t/bid", ["remove", h])
            }
        } else {
            $.publish("/e/t/bid", ["remove", h])
        }
    });
    $(".window-o", j).click(function () {
        var p = j.attr("max").toString();
        var q = function () {
            var s = $("#main_container").width() - 60;
            var r = $("#main_container").height() + 3;
            resizeTo(j, s, r, k.resize)
        };
        if (p == "false") {
            WindowDisableResize(j);
            j.attr("max", "true");
            j.attr("oWidth", j.width());
            j.attr("oHeight", j.height());
            j.attr("oLeft", j.offset().left);
            j.attr("oTop", j.offset().top);
            j.css("left", "60px");
            j.css("top", "0px");
            $(".window-drag-handle", j).css("cursor", "default");
            $(".window-o", j).addClass("window-O");
            Airdroid.CustomResizeFuncArray.push({wid:h, wResize:q()});
            q();
            if (!_.any(maxWindowDOMs, function (r) {
                return r == j
            })) {
                maxWindowDOMs.push(j)
            }
        } else {
            WindowRestoreResize(j);
            maxWindowDOMs = _.reject(maxWindowDOMs, function (r) {
                return r == j
            });
            j.attr("max", "false");
            var n = j.attr("oWidth");
            var o = j.attr("oHeight");
            var l = j.attr("oLeft");
            var m = j.attr("oTop");
            j.css("left", l + "px");
            j.css("top", m + "px");
            $(".window-drag-handle", j).css("cursor", "move");
            $(".window-o", j).removeClass("window-O");
            Airdroid.CustomResizeFuncArray = _.reject(Airdroid.CustomResizeFuncArray, function (r) {
                return r.wid == h && r.wResize == q
            });
            resizeTo(j, n, o, k.resize)
        }
    });
    $(".window-title-c", j).bind("dblclick", function () {
        $(".window-o", j).trigger("click")
    });
    j.appendTo(e.parent());
    e.appendTo(f);
    if (_.isFunction(k.resize)) {
        j.bind("cresize", function () {
            k.resize({}, {helper:j})
        })
    }
    if (!_.isUndefined(k.title)) {
        j.find(".window-title").html(k.title)
    }
    if (!_.isUndefined(k.icon)) {
        j.find(".window-icon").attr("src", k.icon);
        j.find(".window-icon").show()
    }
    if (!_.isUndefined(k.dispatchTheme)) {
        switch (k.dispatchTheme) {
            case"gray":
                j.find(".window-body-l").append("<div class='window-body-l-gray'></div>");
                j.find(".window-bottom-c").addClass("window-bottom-c-gray");
                j.find(".window-body-r").append("<div class='window-body-r-gray'></div>");
                break
        }
    }
    if (!_.isUndefined(k.closeEvent) && _.isFunction(k.closeEvent)) {
        j.find(".window-x").bind("click", k.closeEvent)
    }
    var g = false;
    if (!_.isUndefined(k.disabled) && k.disabled == true) {
        g = true;
        WindowDisableResize(j)
    }
    var b = _.isUndefined(k.minWidth) ? 200 : k.minWidth;
    var a = _.isUndefined(k.minHeight) ? 100 : k.minHeight;
    j.attr("mw", b).attr("mh", a);
    j.click(function () {
        $(this).css("z-index", getTopperZIndex())
    }).resizable({disabled:g, helper:"resizeHelper", minWidth:b, minHeight:a, stop:function (m, l) {
        if (l.size.width < b || l.size.height < a) {
            return
        }
        j.trigger("cresize")
    }}).draggable({handle:".window-drag-handle", zIndex:10000, start:function () {
        if ($(this).attr("max") == "true") {
            return false
        }
    }, stop:function (p, m) {
        $(this).css("z-index", getTopperZIndex());
        var l = m.helper;
        var o = l.position().top;
        var n = l.position().left;
        if (o < 0) {
            l.css({top:"0px"})
        } else {
            if (o > $("#main_container").height() - 35) {
                l.css({top:$("#main_container").height() - 35 + "px"})
            }
        }
        if (n < -(l.width() - 180)) {
            l.css({left:-(l.width() - 180) + "px"})
        } else {
            if (n > $("#main_container").width() - 180) {
                l.css({left:$("#main_container").width() - 180 + "px"})
            }
        }
    }})
};
function center(j) {
    var a = parseFloat($.bodyWidth()) - 80;
    var b = parseFloat($.bodyHeight()) - 60;
    var k = j.width();
    var e = j.height();
    if (k >= a) {
        k = a
    }
    if (e >= b) {
        e = b
    }
    var c = (a - k) / 2 < 60 ? 60 : (a - k) / 2;
    var g = (b - e) / 2 < 0 ? 0 : (b - e) / 2;
    j.css({left:c + "px", top:g + "px"});
    var l = parseInt(j.attr("mw"));
    var f = parseInt(j.attr("mh"));
    if (k < l) {
        k = l
    }
    if (e < f) {
        e = f
    }
    resizeTo(j, k, e);
    j.trigger("cresize")
}
function horiCenter(a) {
    var b = parseFloat($.bodyWidth());
    if (a.width() >= b) {
        a.css("width", b - 50 + "px")
    }
    a.css({left:(b - a.width()) / 2 + "px"})
}
function verticalCenter(a) {
    var b = parseFloat($.bodyHeight()) - 50;
    if (a.height() >= b - 50) {
        a.css("height", b - 50 + "px")
    }
    a.css({top:(b - a.height()) / 2 + "px"})
}
function supportHtml5() {
    var a = new XMLHttpRequest();
    return !!(a && ("upload" in a) && ("onprogress" in a.upload))
}
function stopEvent(a) {
    if (a && a.stopPropagation) {
        a.stopPropagation()
    } else {
        window.event.cancelBubble = true
    }
}
jQuery.cookie = function (b, k, n) {
    if (typeof k != "undefined") {
        n = n || {};
        if (k === null) {
            k = "";
            n.expires = -1
        }
        var f = "";
        if (n.expires && (typeof n.expires == "number" || n.expires.toUTCString)) {
            var g;
            if (typeof n.expires == "number") {
                g = new Date();
                g.setTime(g.getTime() + (n.expires * 24 * 60 * 60 * 1000))
            } else {
                g = n.expires
            }
            f = "; expires=" + g.toUTCString()
        }
        var m = n.path -
    .
        htm
        "/*tpa=http://192.168.119.101:8888/+g.toUTCString()}var m=n.path?*/; path=" + (n.path)
    :
        "";
        var h = n.domain ? "; domain=" + (n.domain) : "";
        var a = n.secure ? "; secure" : "";
        document.cookie = [b, "=", encodeURIComponent(k), f, m, h, a].join("")
    } else {
        var e = null;
        if (document.cookie && document.cookie != "") {
            var l = document.cookie.split(";");
            for (var j = 0; j < l.length; j++) {
                var c = jQuery.trim(l[j]);
                if (c.substring(0, b.length + 1) == (b + "=")) {
                    e = decodeURIComponent(c.substring(b.length + 1));
                    break
                }
            }
        }
        return e
    }
};
function showSupportBrowserTip() {
    var a = Airdroid.Util.GetTemplate("support-browser");
    var b = $(a).find(".use_current").click(function () {
        $("#login").show();
        b.remove()
    }).end().find(".browser_name").hover(function () {
        $(this).parents(".browser").addClass("nav_current")
    },function () {
        $(this).parents(".browser").removeClass("nav_current")
    }).end().appendTo($("body"));
    b.css({top:($("body").height() - b.height()) / 2 + "px", left:($("body").width() - b.width()) / 2 + "px"})
}
function showDelayMask(e, h, b, j, k, f) {
    var c = $("#mask_tip_sample").clone();
    var a = _.uniqueId("mask_tip_");
    c.attr("id", a);
    b = _.isNumber(b) ? b : 3000;
    var g = function () {
        c.html(e);
        if (h != undefined) {
            if (f) {
                c.appendTo(f)
            }
            var m = h.position().left + h.width() / 2 - c.width() / 2;
            var l = h.position().top + h.height() / 2 - c.height() / 2;
            c.css("left", m + "px").css("top", l + "px").show();
            setTimeout(function () {
                if (_.isFunction(j)) {
                    j()
                }
                c.remove();
                if (_.isFunction(k)) {
                    k()
                }
            }, b)
        }
    };
    if (!f) {
        c.appendTo($("#main_container"))
    }
    g()
}
Airdroid.UsedLang = {};
Airdroid.Lang = {};
Airdroid.Lang.Login = {_button_login:"Login", _plain_text_version:"Version:", _plain_text_connecting:"Connecting your device...", _plain_text_need_password:"Please input password.", _plain_text_locked:"Locked. Please input password.", _nf1_plain_text_ntimetry:"The password is incorrect.<br>({0} time(s) left)", _nf1_plain_text_locked_waiting:"Password incorrect, please retry after{0}.", _plain_text_system_another_already_login:"AirDroid is already logged in somewhere else.", _plain_text_network_error:"Failed to connect. Please check your network."};
Airdroid.Lang.Workspace = {_tip_shortcut_icon_new_sms:"New Message", _tip_shortcut_icon_new_contact:"New Contact", _tip_shortcut_icon_show_desktop:"Show Desktop", _tip_shortcut_icon_lock_sys:"Lock", _tip_shortcut_icon_log_off:"Log Off", _tip_shortcut_icon_more_menu:"More", _tip_shortcut_icon_help_doc:"Help", _tip_shortcut_icon_about_us:"About Us", _tip_searchbar_google:"Search Google Android Market...", _module_name_summary:"Summary", _module_name_applications:"Apps", _module_name_taskmanage:"Tasks", _module_name_webbrowser:"Browser", _module_name_filemanage:"Files", _module_name_fileupload:"Upload Files", _module_name_photo:"Photos", _module_name_music:"Music", _module_name_ringtone:"Ringtones", _module_name_smslist:"Messages", _module_name_contacts:"Contacts", _module_name_market:"Market", _module_name_calllog:"Call Log", _module_name_clipboard:"Clipboard", _summary_widget_detail:"Detail...", _confirm_box_text_shutdown_app:"Sure to exit AirDroid?", _webbrowser_tab_name_help_doc:"User Guide", _webbrowser_tab_name_about:"About Us", _webbrowser_tab_name_facebook:"Facebook", _webbrowser_tab_name_twitter:"Twitter", _webbrowser_tab_name_feedback:"Feedback", _webbrowser_tab_name_blog:"Blog", _nf1_notice_receive_N_sms_from_N:"Received {1} message(s) from {0}", _notice_receive_N_sms_view:"View", _player_prev:"Prev", _player_next:"Next", _player_play:"Play", _player_pause:"Pause", _player_mute:"Mute", _player_unmute:"Unmute", _play_type_repeat_one:"Repeat One", _play_type_loop_off:"Loop Off", _play_type_loop_on:"Loop On", _player_need_update_title:"Error", _player_need_update_desc:"Player not supported. Please update your browser to a higher version.", _more_menu_lock:"Lock", _more_menu_add_to_favi:"Add to Favorites", _more_menu_feedback:"Feedback", _more_menu_facebook:"Like us on Facebook", _more_menu_twitter:"Follow us on Twitter", _more_menu_help:"Help", _more_menu_blog:"AirDroid Team Blog", _more_menu_about_us:"About", _favorite_title:"AirDroid", _add_favorite_ok:"Successfully added to Favorites.", _add_favorite_tip:"Please press {0} to add this page to your Favorite.", _not_support_add_favorite:"Your browser does not support adding this page to your Favorite. Please manually add it.", _tip_clear_all_notice:"Clear all notices.", _update_tip:"Please proceed on your device."};
Airdroid.Lang.Summary = {_plain_text_capacity:"Internal Storage", _plain_text_avail:"Availvable", _plain_text_sdcard:"SD Card", _plain_text_music:"Music", _plain_text_video:"Videos", _plain_text_photo:"Photos", _plain_text_other:"Other", _plain_text_contacts:"Contacts", _plain_text_messages:"Messages", _plain_text_apps:"Apps", _plain_text_books:"Books"};
Airdroid.Lang.Applications = {_msgbox_text_ipad_not_supported:"iPad is not yet supported.", _msgbox_text_one_or_more_2_backup:"Select app(s) to backup.", _msgbox_text_one_or_more_2_uninstall:"Select app(s) to uninstall.", _confirmbox_text_delete_this_app:"Uninstall selected app(s)?", _plain_text_send_uninstall_query:"Uninstalling...", _msgbox_text_uninstall_error:"App not installed or already uninstalled.", _msgbox_text_uninstall_suc:"Uninstall success.", _plain_text_uninstalling:"Uninstalling...", _plain_text_clear:"Clear", _plain_text_processing:"Processing", _plain_text_remote_cancel:"Cancelled by device", _nf1_plain_text_install_N:"Installing {0}", _nf1_plain_text_uninstall_N:"Uninstalling {0}", _plain_text_ok:"OK", _plain_text_failed:"Failed", _confirmbox_text_delete_these_N_app:"Uninstall the selected {0} app(s)?", _plain_text_uninstall:"Uninstall", _nf1_plain_text_upload_N:"Uploading {0}", _plain_text_uploading:"Uploading...", _nf1_plain_text_click_ok_on_phone:"Tap on your device to install {0}", _tab_text_installed_app:"User", _tab_text_system_app:"System", _tab_text_more_app:"Recommends", _button_text_install_app:"Install App", _button_text_uninstall_app:"Uninstall", _button_text_export_app:"Export", _button_text_refresh:"Refresh", _col_text_name:"Name", _col_text_size:"Size", _col_text_date:"Date Installed", _plain_text_cancel:"Cancel", _plain_text_cancelled:"Cancelled", _confirmbox_close_cancel_all:"Will stop uploading, are you sure to close the window?", _plain_text_tap_on_device:"Tap on device", _button_app_unknown_source_guide:"User Guide", _button_app_unknown_source_tip_text:'To allow install of non-Market applications, please enable "Unknown sources" on your device.'};
Airdroid.Lang.SMS = {_common_network_error:"Network Failure.", _module_name_edit_contact:"Edit Contact", _msgbox_no_edit_contact_info_cannot_edit:"Can't edit contact while loading.", _msgbox_edit_contact_suc:"Contact info saved.", _msgbox_edit_contact_fail:"Failed to modify contact.", _module_name_new_contact:"New Contact", _confirmbox_create_contact:"Create new contact?", _msgbox_new_contact_suc:"Contact created.", _msgbox_new_contact_fail:"Failed to create contact.", _msgbox_read_contact_info_fail:"Error while loading contact info.", _msgbox_sms_loading_cannot_operate:"Loading messages, please wait...", _confirmbox_delete_this_calllog:"Are you sure to delete this call log?", _plain_text_loading:"Loading...", _msgbox_sms_sending_suc:"Message sent.", _msgbox_sms_sending_error:"Failed to send message.", _plain_text_no_record:"No records.", _plain_text_no_info:"No messages.", _msgbox_new_sms_reading_error:"Failed to load new message.", _msgbox_nothing_selected:"Select message(s) to delete.", _confirmbox_delete_this_thread:"Are you sure to delete selected thread(s)?", _confirmbox_clear_new_sms_window_content:"Are you sure to delete all inputed content?", _plain_text_new_sms_tip_msg:"Input names or numbers and separate them with comma.", _plain_text_sending:"Sending...", _msgbox_no_number:"Please specify at least one recipient.", _plain_text_sending_suc:"OK", _plain_text_sending_fail:"Failed", _msgbox_contact_have_no_number:"These is no phone number for this contact.", _confirmbox_delete_all_calllog:"Are you sure to delete all call logs?", _msgbox_refresh_group_fail:"Failed to load groups.", _msgbox_read_calllog_fail:"Failed to load call logs.", _msgbox_clear_calllog_fail:"Failed to delete all call logs.", _module_name_contacts:"Contacts", _plain_text_no_matches:"No Matches", _button_mcontacts_add_contact:"Add", _button_mcontacts_calllog:"Call Log", _col_mcalllog_type:"Call", _col_mcalllog_name:"Name", _col_mcalllog_phone:"Number", _col_mcalllog_date:"Time", _col_mcalllog_duration:"Duration", _plain_text_clear_all:"Delete All", _tip_delete_this_contact:"Delete this contact", _tip_edit_this_contact:"Edit this contact", _tab_mchat_chat:"Chat", _tab_mchat_contact_info:"Contact Info", _tab_mchat_calllog:"Call Log", _plain_text_mchat_refresh:"Refresh", _button_mchat_send:"Send", _plain_text_mchat_send_tip:"[Enter] to Send", _plain_text_mcontactinfo_name:"Name:", _plain_text_mcontactinfo_phone:"Phone:", _plain_text_mcontactinfo_email:"E-mail:", _plain_text_mcontactinfo_note:"Note:", _button_msmslist_new_sms:"New Message", _button_msmslist_delete:"Delete", _button_msmslist_refresh:"Refresh", _button_msmslist_loading_more:"Older Threads", _plain_text_msmslistitem_forward:"Forward", _plain_text_msmslistitem_delete:"Delete", _plain_text_mnewcontact_name:"Name:", _plain_text_mnewcontact_empty:"Empty", _plain_text_mnewcontact_group:"Group:", _plain_text_mnewcontact_phone:"Number:", _plain_text_mnewcontact_phone_type_mobile:"Mobile", _plain_text_mnewcontact_phone_type_home:"Home", _plain_text_mnewcontact_phone_type_work:"Work", _plain_text_mnewcontact_phone_type_homefax:"Home Fax", _plain_text_mnewcontact_phone_type_workfax:"Work Fax", _plain_text_mnewcontact_phone_type_pager:"Pager", _plain_text_mnewcontact_phone_type_other:"Other", _plain_text_mnewcontact_note:"Note", _button_mnewcontact_cancel:"Cancel", _button_mnewcontact_create:"Create", _plain_text_meditcontact_name:"Name:", _plain_text_meditcontact_empty:"Emtpy!", _plain_text_meditcontact_group:"Group:", _plain_text_meditcontact_phone:"Number:", _plain_text_meditcontact_phone_type_mobile:"Mobile", _plain_text_meditcontact_phone_type_home:"Home", _plain_text_meditcontact_phone_type_work:"Work", _plain_text_meditcontact_phone_type_homefax:"Home Fax", _plain_text_meditcontact_phone_type_workfax:"Work Fax", _plain_text_meditcontact_phone_type_pager:"Pager", _plain_text_meditcontact_phone_type_other:"Other", _plain_text_meditcontact_note:"Note", _button_meditcontact_cancel:"Cancel", _button_meditcontact_save:"Save", _button_mnewsms_select_contact:"Contacts", _button_mnewsms_send:"Send", _plain_text_mnewsms_send_tip:"[Enter] to Send", _plain_text_mselectcontact_group:"Group:", _plain_text_mselectcontact_search:"Search:", _col_mselectcontact_name:"Name", _col_mselectcontact_phone:"Number", _button_mselectcontact_ok:"OK", _plain_text_phone_selected:" number(s) has been selected.", _plain_text_contactinfo_name:"Name", _plain_text_contactinfo_empty:"Empty!", _plain_text_contactinfo_phone_type_mobile:"Mobile", _plain_text_contactinfo_phone_type_home:"Home", _plain_text_contactinfo_phone_type_work:"Work", _plain_text_contactinfo_phone_type_homefax:"Home Fax", _plain_text_contactinfo_phone_type_workfax:"Work Fax", _plain_text_contactinfo_phone_type_pager:"Pager", _plain_text_contactinfo_phone_type_other:"Other", _plain_text_contactinfo_note:"Note", _confirmbox_save_contact_modify_content:"Sure to save made changes?", _msgbox_save_contact_modify_error:"Failed to save.", _title_click_open_chat_window:"One-click to chat", _plain_text_thread_delete_error:"Failed to delete thread.", _plain_text_del_contact_fail:"Failed to delete contact.", _confirmbox_redirect_to_create:"These is no phone number with this contact, edit?", _plain_text_newsms_receiver:"To", _confirmbox_del_single_sms:"Are you sure to delete this message?", _tip_partly_load:"Loading error. Not all contacts in this group loaded.", _nf1_delete_n_calllog:"Are you sure to delete the selected {0} call logs?", _calllogs_delete_part_err:"Error. Only part of the selected call logs deleted.", _title_delete_this_calllog:"Delete this call log.", _title_create_contact_for_this_calllog:"Create new contact with this number."};
Airdroid.Lang.Upload = {_upload_suport:"Support {0}", _has_file_not_uploadcomplete:"Will stop uploading, are you sure to close the window?", _file_types_desc_files:"Select Files", _file_types_desc_photos:"Select Photos", _file_types_desc_musics:"Select Music", _file_types_desc_ringtones:"Select Ringtones", _win_title_ringtone:"Import Ringtones", _win_title_music:"Import Music", _win_title_photo:"Import Photos", _win_title_files:"Import Files", _col_name:"Name", _col_progress:"Progress", _col_size:"Size", _menu_select_files:"Select Files", _menu_clear:"Clear Succeed", _menu_delete:"Delete", _menu_cancel:"Cancel", _title_clear:"Clear Imported Files", _upload_success:"Success", _upload_fail:"Failed", _upload_type_not_suport:"Not Supported"};
Airdroid.Lang.Filemanage = {_export_zip_name:"Files_Exported_By_AirDroid", _opration_fail:"Failed", _sdcard_summary:"SD Card Free Space: {0} free of {1}", _connect_server_error:"Connection failed. Please make sure AirDroid is started on the device.", _create_dir_fail:"Failed to create folder {0}.", _add_dir_fail_fileexist:"A folder named {0} already exists, please use another name.", _delete_file_fail:"Failed to delete {0}.", _confirm_delete_single_file:"Are you sure you want to delete this file?", _confirm_delete_multi_file:"Are you sure you want to delete these {0} files?", _list_dir_fail:"Failed to load folder {0}.", _rename_file_fail:"Failed to rename {0}.", _not_select_item:"No files selected.", _comfirm_do_command:"Are you sure to {0} selected file(s)?", _delete_selected_file_fail:"Failed to delete selected file(s).", _add_dir_title:"New Folder", _add_dir_input_name:"Folder Name", _add_dir_fail:"Failed to create folder {0}.", _rename_title:"Rename", _rename_input_name:"New Name", _illegal_character:"A file name can't contain any of the following characters: \\ / : * ? \" < > | ", _name_not_changed:"File name remain the same.", _name_is_null:"You need to type a file name.", _name_exist:"A file with the same name already exists.", _menu_open:"Open", _menu_import:"Import", _menu_new_folder:"New Folder", _menu_refresh:"Refresh", _menu_delete:"Delete", _menu_paste:"Paste", _menu_copy:"Copy", _menu_cut:"Cut", _menu_export:"Export", _menu_export_as_zip:"Export as ZIP", _menu_rename:"Rename", _drag_helper:"{0} files selected", _empty_folder:"This folder is empty.", _file_name:"Name: ", _file_size:"Size: ", _menu_drop:"Move", _tip_copy_cut_ok:"{0} {1} from {2} to {3} success."};
Airdroid.Lang.Common = {_title_select_all:"Select All", _menu_title_facebook:"Share to Facebook", _menu_title_twitter:"Share to Twitter", _menu_title_setting_bg:"Set as wallpaper", _menu_title_download:"Download", _menu_title_prev:"Prev", _menu_title_next:"Next", _menu_title_rotate_left:"Rotate Left", _menu_title_rotate_right:"Rotate Right", _menu_title_delete:"Delete", _menu_import:"Import", _menu_export:"Export", _menu_refresh:"Refresh", _menu_delete:"Delete", _player_not_suport_type:"File format not supported.", _ERR_NETWORK:"Failed with network error."};
Airdroid.Lang.Photo = {_export_zip_name:"Photos_Exported_By_AirDroid", _camera:"Camera Roll", _wallpaper:"Wallpaper", _other:"Other", _menu_title_down_load:"Download", _menu_title_setting_bg:"Set as wallpaper", _menu_title_delete:"Delete", _file_name:"Name: ", _file_size:"Size: ", _not_select_folder:"Select a folder to upload.", _navi_home:"Photos", _navi_others:"Other", _navi_photo_view:"View Image", _confirm_delete_photo:"Are you sure to delete selected photo(s)?", _fail_delete_photo:"Failed to delete selected photo(s).", _can_not_do_command:"Loading photos, please wait.", _confirm_set_wallpaper:"Are you sure to set this picture as wallpaper?", _set_wallpaper_ok:"Set as wallpaper success.", _confirm_delete:"Are you sure to delete this photo?", _fail_delete:"Failed to delete selected photo(s).", _title_nav_pre_page:"Page Up", _title_nav_next_page:"Page Down", _title_nav_pre:"Previous", _title_nav_next:"Next", _menu_title_rotate_left:"Rotate Left", _menu_title_rotate_right:"Rotate Right"};
Airdroid.Lang.Music = {_export_zip_name:"Music_Exported_By_AirDroid", _navi_album:"Album", _title_album_name:"Album: ", _title_album_artist:"Artist: ", _title_album_songs:"Tracks: ", _title_song_name:"Name: ", _title_song_artist:"Artist: ", _title_song_time:"Time: ", _title_song_album:"Album: ", _title_song_size:"Size: ", _title_list_type_songs:"Sort by Songs", _title_list_type_albums:"Sort by Albums", _menu_set_telephone:"phone ringtone", _menu_set_notification:"notification ringtone", _menu_set_alarm:"alarm ringtone", _menu_set_as:"Set as", _col_name:"Name", _col_time:"Time", _col_artist:"Artist", _col_album:"Album", _col_size:"Size", _confirm_delete:"Are you sure to delete this song?", _fail_delete:"Fail to delete.", _confirm_delete_songs:"Are you sure to delete selected songs?", _fail_delete_songs:"Failed to delete the selected songs.", _already_is_telephone:"This song was already set as phone ringtone.", _already_is_notification:"This song was already set as notification ringtone.", _already_is_alarm:"This song was already set as alarm ringtone.", _set_telephone_ok:"New phone ringtone set.", _set_telephone_fail:"Failed to set new phone ringtone.", _set_notification_ok:"New notification ringtone set.", _set_notification_fail:"Failed to set new notification ringtone.", _set_alarm_ok:"New alarm ringtone set.", _set_alarm_fail:"Failed to set as alarm ringtone."};
Airdroid.Lang.Ringtone = {_tab_ringtone:"Phone", _tab_notification:"Notification", _tab_alarm:"Alarm", _export_zip_name:"Ringtone_Exported_By_AirDroid", _menu_setting:"Set", _title_ringtone_name:"Name: ", _title_ringtone_time:"Time: ", _title_ringtone_size:"Size: ", _already_ringtone:"This ringtone is in use.", _setting_ok:"New ringtone set.", _setting_fail:"Failed to set new ringtone.", _can_not_delete:"Can't delete system ringtones.", _confirm_delete:"Are you sure to delete this ringtone?", _confirm_delete_ringtones:"Are you sure to delete selected ringtones?", _fail_delete:"Failed to delete", _col_name:"Name", _col_time:"Time", _col_size:"Size"};
Airdroid.Lang.Browser = {_new_tab:"New Tab", _title_back:"Back", _title_forward:"Farward", _title_refresh:"Refresh", _title_add_tab:"New Tab", _title_list_all_tabs:"All Tabs"};
Airdroid.Lang.Clipboard = {_msgbox_readfail:"Failed to read clip from device.", _msgbox_pushfail:"Failed to send clip to device.", _plain_tip_pushsuc:"Sent to device clipboard.", _plain_tip_empty:"Device clipboard is empty.", _button_push2phone:"To Device", _button_readfromphone:"From Device", _plain_tip_too_long:"Error. Content too long.<br/>{0} exceeded characters."};
Airdroid.Lang.TitleWidget = {_nf1_n_msg_receive:"Receive {0} New Message - ", _nf1_cur_n_msg_unread:"({0} Unread) - "};
Airdroid.UsedLang = Airdroid.Lang;
var noticeMsg = {setup:function () {
    $(".noticeWidget").hide();
    $(".noticeWidget .noticeWidget-body-c").html("<ul></ul>")
}, setTop:function () {
    $(".noticeWidget").css("z-index", getTopperZIndex())
}, displayMsg:function (e, f, b) {
    if (!$(".noticeWidget").is(":visible")) {
        $(".noticeWidget").show()
    }
    if ($(".noticeWidget-body-c").find("#" + e).size() == 0) {
        $(".noticeWidget-body-c").children("ul").prepend('<li id="' + e + '">' + f + "</li>").children("li:first").slideDown(300)
    } else {
        $(".noticeWidget-body-c").find("#" + e).html(f)
    }
    this.setTop();
    var a = this;
    try {
        if (b.delayRemove == true) {
            setTimeout(function () {
                a.removeMsg(e)
            }, b.delayRemoveTime)
        }
    } catch (c) {
    }
}, removeMsg:function (c) {
    var b = $(".noticeWidget-body-c").find("#" + c).size();
    var a = $(".noticeWidget-body-c > ul > li").size();
    if (b == a) {
        $(".noticeWidget").hide(300, function () {
            $(".noticeWidget-body-c").find("#" + c).remove()
        })
    } else {
        $(".noticeWidget-body-c").find("#" + c).hide(300, function () {
            $(this).remove()
        })
    }
}};
var NoticeWidgetUILogic = Core.extend({_tpl_content:null, _tpl_nw_theme_apk_icon:null, _tpl_nw_theme_custom_icon:null, _tpl_nw_theme_default_icon:null, $construct:function () {
    $(".noticeWidget").hide();
    $(".noticeWidget .noticeWidget-body-c").html("<ul></ul>");
    $(".noticeWidget").click(function () {
        $(this).css("z-index", getTopperZIndex())
    });
    this._tpl_content = Airdroid.Util.GetTemplate("noticeWidget");
    $("body").append($(this._tpl_content));
    this._tpl_nw_theme_apk_icon = _.template($("#nw-theme-apk-icon").html());
    this._tpl_nw_theme_custom_icon = _.template($("#nw-theme-custom-icon").html());
    this._tpl_nw_theme_default_icon = _.template($("#nw-theme-default-icon").html());
    this._tpl_nw_theme_sms_icon = _.template($("#nw-theme-sms-icon").html());
    this._tpl_nw_battery_20 = _.template($("#nw-special-low-battery-20").html());
    this._tpl_nw_battery_5 = _.template($("#nw-special-low-battery-5").html());
    $(".notice-body").live("click", function () {
        $(this).parent().find(".notice-status").children().eq(0).trigger("click")
    });
    $(".noticeWidget-clear").live("click", function () {
        $(".noticeWidget-body-c li").remove();
        $(".noticeWidget").hide();
        $.publish('[to:wdg]/event/title/clear/dym', []);
    })
}, setTop:function () {
    $(".noticeWidget").css("z-index", getTopperZIndex())
}, displayMsg:function (a, e, c, k) {
    var j = this;
    if (!$(".noticeWidget").is(":visible")) {
        $(".noticeWidget").show()
    }
    var b = "";
    if (e == "apk") {
        b = this._tpl_nw_theme_apk_icon(c)
    } else {
        if (e == "custom") {
            b = this._tpl_nw_theme_custom_icon(c)
        } else {
            if (e == "sms") {
                b = this._tpl_nw_theme_sms_icon(c)
            } else {
                if (e == "low20") {
                    b = this._tpl_nw_battery_20(c)
                } else {
                    if (e == "low5") {
                        b = this._tpl_nw_battery_5(c)
                    } else {
                        b = this._tpl_nw_theme_default_icon(c)
                    }
                }
            }
        }
    }
    var f = $(b);
    f.find(".msgAction").append(c.msgStatus);
    var h = $('<li id="' + a + '"></li>').append(f);
    if ($(".noticeWidget-body-c").find("#" + a).size() == 0) {
        $(".noticeWidget-body-c").children("ul").prepend(h).children("li:first").slideDown(300)
    } else {
        $(".noticeWidget-body-c").find("#" + a).html(f)
    }
    this.setTop();
    try {
        if (k.delayRemove == true) {
            setTimeout(function () {
                j.removeMsg(a)
            }, k.delayRemoveTime)
        }
    } catch (g) {
    }
    if ($(".noticeWidget-body-c").find("li").size() == 0) {
        $(".noticeWidget").hide()
    }
}, removeMsg:function (c) {
    var b = $(".noticeWidget-body-c").find("#" + c).size();
    var a = $(".noticeWidget-body-c > ul > li").size();
    if (b == a) {
        $(".noticeWidget").hide(300, function () {
            $(".noticeWidget-body-c").find("#" + c).remove()
        })
    } else {
        $(".noticeWidget-body-c").find("#" + c).hide(300, function () {
            $(this).remove()
        })
    }
    if ($(".noticeWidget-body-c").find("li").size() == 0) {
        $(".noticeWidget").hide()
    }
}, StartListen:function () {
    $(".notice-close img").live("click", function () {
        $(this).closest("li").remove();
        if ($(".noticeWidget-body-c").find("li").size() == 0) {
            $(".noticeWidget").hide()
        }
    });
    var a = this;
    $.subscribe("[to:ui]/e/nw/dpl", function (e, b, f, c) {
        a.displayMsg(e, b, f, c)
    });
    $.subscribe("[to:ui]/e/nw/dpl/remove", function (f, c, b) {
        if (!_.isEmpty(b)) {
            $(".noticeWidget-body-c").find("#" + f).find(".notice-status").html(b)
        }
        var e = 0;
        if (!_.isEmpty(c)) {
            e = parseInt(c)
        }
        setTimeout(function () {
            a.removeMsg(f)
        }, e)
    });
    $.subscribe("[to:ui]/e/nw/dpl/mod", function (c, e, b) {
        if (!_.isEmpty(e)) {
            $(".noticeWidget-body-c").find("#" + c).find(".notice-body").html(e)
        }
        if (!_.isEmpty(b)) {
            $(".noticeWidget-body-c").find("#" + c).find(".notice-status").html(b)
        }
    })
}});
(function (a) {
    a.fn.extend({autocomplete:function (b, c) {
        var e = typeof b == "string";
        c = a.extend({}, a.Autocompleter.defaults, {url:e ? b : null, data:e ? null : b, delay:e ? a.Autocompleter.defaults.delay : 10, max:c && !c.scroll ? 10 : 150}, c);
        c.highlight = c.highlight || function (f) {
            return f
        };
        c.formatMatch = c.formatMatch || c.formatItem;
        return this.each(function () {
            new a.Autocompleter(this, c)
        })
    }, result:function (b) {
        return this.bind("result", b)
    }, search:function (b) {
        return this.trigger("search", [b])
    }, flushCache:function () {
        return this.trigger("flushCache")
    }, setOptions:function (b) {
        return this.trigger("setOptions", [b])
    }, unautocomplete:function () {
        return this.trigger("unautocomplete")
    }});
    a.Autocompleter = function (n, h) {
        var c = {UP:38, DOWN:40, DEL:46, TAB:9, RETURN:13, ESC:27, COMMA:188, PAGEUP:33, PAGEDOWN:34, BACKSPACE:8};
        var b = a(n).attr("autocomplete", "off").addClass(h.inputClass);
        var l;
        var r = "";
        var o = a.Autocompleter.Cache(h);
        var f = 0;
        var w;
        var z = {mouseDownOnSelect:false};
        var t = a.Autocompleter.Select(h, n, e, z);
        var y;
        a.browser.opera && a(n.form).bind("submit.autocomplete", function () {
            if (y) {
                y = false;
                return false
            }
        });
        b.bind((a.browser.opera ? "keypress" : "keydown") + ".autocomplete",function (A) {
            f = 1;
            w = A.keyCode;
            switch (A.keyCode) {
                case c.UP:
                    A.preventDefault();
                    if (t.visible()) {
                        t.prev()
                    } else {
                        v(0, true)
                    }
                    break;
                case c.DOWN:
                    A.preventDefault();
                    if (t.visible()) {
                        t.next()
                    } else {
                        v(0, true)
                    }
                    break;
                case c.PAGEUP:
                    A.preventDefault();
                    if (t.visible()) {
                        t.pageUp()
                    } else {
                        v(0, true)
                    }
                    break;
                case c.PAGEDOWN:
                    A.preventDefault();
                    if (t.visible()) {
                        t.pageDown()
                    } else {
                        v(0, true)
                    }
                    break;
                case h.multiple && a.trim(h.multipleSeparator) == "," && c.COMMA:
                case c.TAB:
                case c.RETURN:
                    if (e()) {
                        A.preventDefault();
                        y = true;
                        return false
                    }
                    break;
                case c.ESC:
                    t.hide();
                    break;
                default:
                    clearTimeout(l);
                    l = setTimeout(v, h.delay);
                    break
            }
        }).focus(function () {
            f++
        }).blur(function () {
            f = 0;
            if (!z.mouseDownOnSelect) {
                u()
            }
        }).click(function () {
            if (f++ > 1 && !t.visible()) {
                v(0, true)
            }
        }).bind("search",function () {
            var A = (arguments.length > 1) ? arguments[1] : null;

            function B(F, E) {
                var C;
                if (E && E.length) {
                    for (var D = 0; D < E.length; D++) {
                        if (E[D].result.toLowerCase() == F.toLowerCase()) {
                            C = E[D];
                            break
                        }
                    }
                }
                if (typeof A == "function") {
                    A(C)
                } else {
                    b.trigger("result", C && [C.data, C.value])
                }
            }

            a.each(j(b.val()), function (C, D) {
                g(D, B, B)
            })
        }).bind("flushCache",function () {
            o.flush()
        }).bind("setOptions",function () {
            a.extend(h, arguments[1]);
            if ("data" in arguments[1]) {
                o.populate()
            }
        }).bind("unautocomplete", function () {
            t.unbind();
            b.unbind();
            a(n.form).unbind(".autocomplete")
        });
        function e() {
            var D = t.selected();
            if (!D) {
                return false
            }
            var A = D.result;
            r = A;
            if (h.multiple) {
                var G = j(b.val());
                if (G.length > 1) {
                    var C = h.multipleSeparator.length;
                    var F = a(n).selection().start;
                    var E, B = 0;
                    a.each(G, function (H, I) {
                        B += I.length;
                        if (F <= B) {
                            E = H;
                            return false
                        }
                        B += C
                    });
                    G[E] = A;
                    A = G.join(h.multipleSeparator)
                }
                A += h.multipleSeparator
            }
            b.val(A);
            x();
            b.trigger("result", [D.data, D.value]);
            return true
        }

        function v(C, B) {
            if (w == c.DEL) {
                t.hide();
                return
            }
            var A = b.val();
            if (!B && A == r) {
                return
            }
            r = A;
            A = k(A);
            if (A.length >= h.minChars) {
                b.addClass(h.loadingClass);
                if (!h.matchCase) {
                    A = A.toLowerCase()
                }
                g(A, m, x)
            } else {
                p();
                t.hide()
            }
        }

        function j(A) {
            if (!A) {
                return[""]
            }
            if (!h.multiple) {
                return[a.trim(A)]
            }
            return a.map(A.split(h.multipleSeparator), function (B) {
                return a.trim(A).length ? a.trim(B) : null
            })
        }

        function k(A) {
            if (!h.multiple) {
                return A
            }
            var C = j(A);
            if (C.length == 1) {
                return C[0]
            }
            var B = a(n).selection().start;
            if (B == A.length) {
                C = j(A)
            } else {
                C = j(A.replace(A.substring(B), ""))
            }
            return C[C.length - 1]
        }

        function s(A, B) {
            if (h.autoFill && (k(b.val()).toLowerCase() == A.toLowerCase()) && w != c.BACKSPACE) {
            }
        }

        function u() {
            clearTimeout(l);
            l = setTimeout(x, 200)
        }

        function x() {
            var A = t.visible();
            t.hide();
            clearTimeout(l);
            p();
            if (h.mustMatch) {
                b.search(function (B) {
                    if (!B) {
                        if (h.multiple) {
                            var C = j(b.val()).slice(0, -1);
                            b.val(C.join(h.multipleSeparator) + (C.length ? h.multipleSeparator : ""))
                        } else {
                            b.val("");
                            b.trigger("result", null)
                        }
                    }
                })
            }
        }

        function m(B, A) {
            if (A && A.length && f) {
                p();
                t.display(A, B);
                s(B, A[0].value);
                t.show()
            } else {
                x()
            }
        }

        function g(B, D, A) {
            if (!h.matchCase) {
                B = B.toLowerCase()
            }
            var C = o.load(B);
            if (C && C.length) {
                D(B, C)
            } else {
                if ((typeof h.url == "string") && (h.url.length > 0)) {
                    var E = {timestamp:+new Date()};
                    a.each(h.extraParams, function (F, G) {
                        E[F] = typeof G == "function" ? G() : G
                    });
                    a.ajax({mode:"abort", port:"autocomplete" + n.name, dataType:h.dataType, url:h.url, data:a.extend({q:k(B), limit:h.max}, E), success:function (G) {
                        var F = h.parse && h.parse(G) || q(G);
                        o.add(B, F);
                        D(B, F)
                    }})
                } else {
                    t.emptyList();
                    A(B)
                }
            }
        }

        function q(D) {
            var A = [];
            var C = D.split("\n");
            for (var B = 0; B < C.length; B++) {
                var E = a.trim(C[B]);
                if (E) {
                    E = E.split("|");
                    A[A.length] = {data:E, value:E[0], result:h.formatResult && h.formatResult(E, E[0]) || E[0]}
                }
            }
            return A
        }

        function p() {
            b.removeClass(h.loadingClass)
        }
    };
    a.Autocompleter.defaults = {inputClass:"ac_input", resultsClass:"ac_results", loadingClass:"ac_loading", minChars:1, delay:400, matchCase:false, matchSubset:true, matchContains:false, cacheLength:10, max:100, mustMatch:false, extraParams:{}, selectFirst:true, formatItem:function (b) {
        return b[0]
    }, formatMatch:null, autoFill:false, width:0, multiple:false, multipleSeparator:", ", highlight:function (c, b) {
        return c.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + b.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>")
    }, scroll:true, scrollHeight:180};
    a.Autocompleter.Cache = function (c) {
        var g = {};
        var e = 0;

        function j(m, l) {
            if (!c.matchCase) {
                m = m.toLowerCase()
            }
            var k = m.indexOf(l);
            if (c.matchContains == "word") {
                k = m.toLowerCase().search("\\b" + l.toLowerCase())
            }
            if (k == -1) {
                return false
            }
            return k == 0 || c.matchContains
        }

        function h(l, k) {
            if (e > c.cacheLength) {
                b()
            }
            if (!g[l]) {
                e++
            }
            g[l] = k
        }

        function f() {
            if (!c.data) {
                return false
            }
            var l = {}, k = 0;
            if (!c.url) {
                c.cacheLength = 1
            }
            l[""] = [];
            for (var n = 0, m = c.data.length; n < m; n++) {
                var q = c.data[n];
                q = (typeof q == "string") ? [q] : q;
                var p = c.formatMatch(q, n + 1, c.data.length);
                if (p === false) {
                    continue
                }
                var o = p.charAt(0).toLowerCase();
                if (!l[o]) {
                    l[o] = []
                }
                var r = {value:p, data:q, result:c.formatResult && c.formatResult(q) || p};
                l[o].push(r);
                if (k++ < c.max) {
                    l[""].push(r)
                }
            }
            a.each(l, function (s, t) {
                c.cacheLength++;
                h(s, t)
            })
        }

        setTimeout(f, 25);
        function b() {
            g = {};
            e = 0
        }

        return{flush:b, add:h, populate:f, load:function (o) {
            if (!c.cacheLength || !e) {
                return null
            }
            if (!c.url && c.matchContains) {
                var n = [];
                for (var l in g) {
                    if (l.length > 0) {
                        var p = g[l];
                        a.each(p, function (q, k) {
                            if (j(k.value, o)) {
                                n.push(k)
                            }
                        })
                    }
                }
                return n
            } else {
                if (g[o]) {
                    return g[o]
                } else {
                    if (c.matchSubset) {
                        for (var m = o.length - 1; m >= c.minChars; m--) {
                            var p = g[o.substr(0, m)];
                            if (p) {
                                var n = [];
                                a.each(p, function (q, k) {
                                    if (j(k.value, o)) {
                                        n[n.length] = k
                                    }
                                });
                                return n
                            }
                        }
                    }
                }
            }
            return null
        }}
    };
    a.Autocompleter.Select = function (f, l, n, r) {
        var k = {ACTIVE:"ac_over"};
        var m, g = -1, t, o = "", u = true, c, q;

        function p() {
            if (!u) {
                return
            }
            c = a("<div/>").hide().addClass(f.resultsClass).css("position", "absolute").appendTo(document.body);
            q = a("<ul/>").appendTo(c).mouseover(function (v) {
                if (s(v).nodeName && s(v).nodeName.toUpperCase() == "LI") {
                    g = a("li", q).removeClass(k.ACTIVE).index(s(v));
                    a(s(v)).addClass(k.ACTIVE)
                }
            }).click(function (v) {
                a(s(v)).addClass(k.ACTIVE);
                n();
                l.focus();
                return false
            }).mousedown(function () {
                r.mouseDownOnSelect = true
            }).mouseup(function () {
                r.mouseDownOnSelect = false
            });
            if (f.width > 0) {
                c.css("width", f.width)
            }
            u = false
        }

        function s(w) {
            var v = w.target;
            while (v && v.tagName != "LI") {
                v = v.parentNode
            }
            if (!v) {
                return[]
            }
            return v
        }

        function j(v) {
            m.slice(g, g + 1).removeClass(k.ACTIVE);
            h(v);
            var x = m.slice(g, g + 1).addClass(k.ACTIVE);
            if (f.scroll) {
                var w = 0;
                m.slice(0, g).each(function () {
                    w += this.offsetHeight
                });
                if ((w + x[0].offsetHeight - q.scrollTop()) > q[0].clientHeight) {
                    q.scrollTop(w + x[0].offsetHeight - q.innerHeight())
                } else {
                    if (w < q.scrollTop()) {
                        q.scrollTop(w)
                    }
                }
            }
        }

        function h(v) {
            g += v;
            if (g < 0) {
                g = m.size() - 1
            } else {
                if (g >= m.size()) {
                    g = 0
                }
            }
        }

        function b(v) {
            return f.max && f.max < v ? f.max : v
        }

        function e() {
            q.empty();
            var w = b(t.length);
            for (var x = 0; x < w; x++) {
                if (!t[x]) {
                    continue
                }
                var y = f.formatItem(t[x].data, x + 1, w, t[x].value, o);
                if (y === false) {
                    continue
                }
                var v = a("<li/>").html(f.highlight(y, o)).addClass(x % 2 == 0 ? "ac_even" : "ac_odd").appendTo(q)[0];
                a.data(v, "ac_data", t[x])
            }
            m = q.find("li");
            if (f.selectFirst) {
                m.slice(0, 1).addClass(k.ACTIVE);
                g = 0
            }
            if (a.fn.bgiframe) {
                q.bgiframe()
            }
        }

        return{display:function (w, v) {
            p();
            t = w;
            o = v;
            e()
        }, next:function () {
            j(1)
        }, prev:function () {
            j(-1)
        }, pageUp:function () {
            if (g != 0 && g - 8 < 0) {
                j(-g)
            } else {
                j(-8)
            }
        }, pageDown:function () {
            if (g != m.size() - 1 && g + 8 > m.size()) {
                j(m.size() - 1 - g)
            } else {
                j(8)
            }
        }, hide:function () {
            c && c.hide();
            m && m.removeClass(k.ACTIVE);
            g = -1
        }, visible:function () {
            return c && c.is(":visible")
        }, current:function () {
            return this.visible() && (m.filter("." + k.ACTIVE)[0] || f.selectFirst && m[0])
        }, show:function () {
            var x = a(l).offset();
            c.css({width:typeof f.width == "string" || f.width > 0 ? f.width : a(l).width(), top:x.top + l.offsetHeight, left:x.left}).show();
            if (f.scroll) {
                q.scrollTop(0);
                q.css({maxHeight:f.scrollHeight, overflow:"auto"});
                if (a.browser.msie && typeof document.body.style.maxHeight === "undefined") {
                    var v = 0;
                    m.each(function () {
                        v += this.offsetHeight
                    });
                    var w = v > f.scrollHeight;
                    q.css("height", w ? f.scrollHeight : v);
                    if (!w) {
                        m.width(q.width() - parseInt(m.css("padding-left")) - parseInt(m.css("padding-right")))
                    }
                }
            }
        }, selected:function () {
            var v = m && m.filter("." + k.ACTIVE).removeClass(k.ACTIVE);
            return v && v.length && a.data(v[0], "ac_data")
        }, emptyList:function () {
            q && q.empty()
        }, unbind:function () {
            c && c.remove()
        }}
    };
    a.fn.selection = function (k, b) {
        if (k !== undefined) {
            return this.each(function () {
                if (this.createTextRange) {
                    var l = this.createTextRange();
                    if (b === undefined || k == b) {
                        l.move("character", k);
                        l.select()
                    } else {
                        l.collapse(true);
                        l.moveStart("character", k);
                        l.moveEnd("character", b);
                        l.select()
                    }
                } else {
                    if (this.setSelectionRange) {
                        this.setSelectionRange(k, b)
                    } else {
                        if (this.selectionStart) {
                            this.selectionStart = k;
                            this.selectionEnd = b
                        }
                    }
                }
            })
        }
        var h = this[0];
        if (h.createTextRange) {
            var c = document.selection.createRange(), j = h.value, g = "<->", e = c.text.length;
            c.text = g;
            var f = h.value.indexOf(g);
            h.value = j;
            this.selection(f, f + e);
            return{start:f, end:f + e}
        } else {
            if (h.selectionStart !== undefined) {
                return{start:h.selectionStart, end:h.selectionEnd}
            }
        }
    }
})(jQuery);
function jSocket(e, b, c, a) {
    this.onReady = e;
    this.onConnect = b;
    this.onData = c;
    this.onClose = a;
    this.id = "jSocket_" + (++jSocket.last_id);
    jSocket.sockets[this.id] = this;
    this.connected = false
}
jSocket.swf = "js/socket/jsocket.swf"/*tpa=http://192.168.119.101:8888/js/socket/jsocket.swf*/;
jSocket.sockets = {};
jSocket.last_id = 0;
jSocket.variableTest = "xt";
jSocket.prototype.findSwf = function () {
    return document.getElementById(this.target)
};
jSocket.prototype.setup = function (b, a) {
    if (typeof(swfobject) == "undefined") {
        throw"SWFObject not found! Please download from http://code.google.com/p/swfobject/"
    }
    if (typeof(this.target) != "undefined") {
        throw"Can only call setup on a jSocket Object once."
    }
    this.target = b;
    return swfobject.embedSWF((a ? a : jSocket.swf) + "?" + this.id, this.target, "0", "0", "9.0.0", "expressInstall.swf"/*tpa=http://192.168.119.101:8888/expressInstall.swf*/, {}, {menu:"false"}, {})
};
jSocket.prototype.connect = function (b, a) {
    if (!this.movie) {
        throw"jSocket isn't ready yet, use the onReady event"
    }
    if (this.connected) {
        this.movie.close()
    }
    this.movie.connect(b, a)
};
jSocket.prototype.close = function () {
    this.connected = false;
    if (this.movie) {
        this.movie.close()
    }
};
jSocket.prototype.write = function (a) {
    this.assertConnected();
    this.movie.write(a)
};
jSocket.prototype.assertConnected = function () {
    if (!this.connected || !this.movie) {
        throw"jSocket is not connected, use the onConnect event "
    }
};
jSocket.flashCallback = function (a, e, c) {
    var b = function () {
        jSocket.executeFlashCallback(a, e, c)
    };
    setTimeout(b, 0);
    return
};
jSocket.executeFlashCallback = function (c, h, g) {
    var a = jSocket.sockets[h];
    switch (c) {
        case"init":
            var b = jSocket.variableTest;
            var e = function () {
                var j = true;
                try {
                    var f = a.findSwf();
                    f.SetVariable(b, "t");
                    if ("t" != f.GetVariable(b)) {
                        throw null
                    }
                    f.SetVariable(b, "");
                    a.movie = f;
                    j = false
                } catch (k) {
                    setTimeout(e, 0)
                }
                if (!j && typeof a.onReady == "function") {
                    a.onReady()
                }
            };
            setTimeout(e, 0);
            break;
        case"data":
            if (typeof a.onData == "function") {
                a.onData(g)
            }
            break;
        case"connect":
            a.connected = true;
            if (typeof a.onConnect == "function") {
                a.onConnect(true)
            }
            break;
        case"error":
            if (typeof a.onConnect == "function") {
                a.onConnect(false, g)
            }
            break;
        case"close":
            a.connected = false;
            if (typeof a.onClose == "function") {
                a.onClose()
            }
            break;
        default:
            throw"jSocket: unknown callback '" + c + "' used"
    }
};
Airdroid.Socket = {isReady:false, isConnect:false, connectCount:0, support:false, isPollResponse:true, mostConnectTimes:Airdroid.Socket.mostConnectTimes, closedConnectInterval:Airdroid.Socket.closedConnectInterval, socketConnectTimer:null, isFirst:true, pollTimer:null, socketSetting:{host:"", port:8889}, pollFun:function () {
    if (!Airdroid.Socket.isPollResponse) {
        return
    }
    if (Airdroid.Socket.isFirst) {
        changeid = 0
    } else {
        changeid = 1
    }
    $.jsonp({url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/comm/querypushdata/?changed=" + changeid + "&callback=?", dataType:"jsonp", success:function (a) {
        Airdroid.Socket.isFirst = false;
        Airdroid.Socket.onPollData(a)
    }, error:function (a) {
    }});
    Airdroid.Socket.isPollResponse = false
}, pollChangeData:function () {
    this.pollTimer = setInterval(this.pollFun, Airdroid.Socket.pollWayTimerInterval * 1000)
}, onReady:function () {
    this.isReady = true;
    this.connectSocket()
}, onConnect:function (c, b) {
    if (c) {
        this.support = true;
        clearInterval(this.pollTimer);
        this.isConnect = true;
        this.send("Hello world");
        var a = {event:"device_status", send:"web", data:""};
        this.send(JSON.stringify(a))
    } else {
        if (this.connectCount <= this.mostConnectTimes) {
            this.connectSocket()
        } else {
            this.support = false;
            this.pollChangeData()
        }
    }
}, onData:function (c) {
    if (c == null || c.indexOf("event") < 0) {
        return
    }
    var e = c.split("(][)");
    var a = false;
    var b = [];
    _.each(e, function (g) {
        if (g != null && g != "") {
            eventData = $.parseJSON(g);
            if (eventData.event == "download_progress") {
                if (Airdroid.Cache.TaskManageModel) {
                    Airdroid.Cache.TaskManageModel.addData(eventData.data)
                }
            } else {
                if (eventData.event == "device_status") {
                    if (Airdroid.Cache.WorkSpaceView) {
                        Airdroid.Cache.WorkSpaceView.changeDeviceStatus(eventData.data)
                    }
                } else {
                    if (eventData.event == "uninstall") {
                        if (eventData.data.operat == 1 && Airdroid.Cache.ApplicationsView) {
                            Airdroid.Cache.ApplicationsView.e_CancelRemoveAppBySid(eventData.data.apkid)
                        } else {
                            if (eventData.data.operat == 2 && Airdroid.Cache.ApplicationsView) {
                                Airdroid.Cache.ApplicationsView.e_RemoveAppBySid(eventData.data.apkid);
                                Airdroid.Cache.AppDetailShow = false;
                                $("#app_info").hide();
                                $(window).trigger("resize")
                            }
                        }
                    } else {
                        if (eventData.event == "install") {
                            if (eventData.data.operat == 1 && Airdroid.Cache.ApplicationsView) {
                                Airdroid.Cache.ApplicationsView.e_CancelInstallAppBySid(eventData.data.apkid, eventData.data.apkname)
                            } else {
                                if (eventData.data.operat == 2 && Airdroid.Cache.ApplicationsView) {
                                    Airdroid.Cache.ApplicationsView.e_InstallAppBySid(eventData.data.apkid, eventData.data.apkname)
                                } else {
                                    if (eventData.data.operat == 0 && Airdroid.Cache.ApplicationsView) {
                                        var f = $('#applications #app_list_view_processing .app_list_item[sid="' + eventData.data.apkid + '"]');
                                        clearWaitingTip(f);
                                        if (Airdroid.Cache.ApplicationsView.atApp) {
                                            showMaskTip(f, "install", "tips_wait_for_install_confirm", "applications", "Installing...", 280, "Clear", true)
                                        } else {
                                            showMaskTip(f, "install", "tips_wait_for_install_confirm", "applications", "Installing...", 280, "Clear", true, false)
                                        }
                                    }
                                }
                            }
                        } else {
                            if (eventData.event == "sms_sendresult") {
                                $.publish("[to:ui]/event/socket/sms/send/result", [eventData.data])
                            } else {
                                if (eventData.event == "sms_received") {
                                    b.push(eventData.data.threadId);
                                    $.publish("[to:ui]/event/socket/sms/receive", [eventData.data])
                                } else {
                                    if (eventData.event == "sms_changed") {
                                        if (_.any(b, function (h) {
                                            return h == eventData.data.threadId
                                        })) {
                                            a = true
                                        }
                                        $.publish("[to:ui]/event/socket/sms/changed", [eventData.data, a])
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    })
}, onPollData:function (c) {
    Airdroid.Socket.isPollResponse = true;
    var a = false;
    var b = [];
    _.each(c, function (e) {
        if (e.event == "download_progress") {
            if (Airdroid.Cache.TaskManageModel) {
                Airdroid.Cache.TaskManageModel.addData(e.data)
            }
        } else {
            if (e.event == "device_status") {
                if (Airdroid.Cache.WorkSpaceView) {
                    Airdroid.Cache.WorkSpaceView.changeDeviceStatus(e.data)
                }
            } else {
                if (e.event == "uninstall") {
                    if (e.data.operat == 1 && Airdroid.Cache.ApplicationsView) {
                        Airdroid.Cache.ApplicationsView.e_CancelRemoveAppBySid(e.data.apkid)
                    } else {
                        if (e.data.operat == 2 && Airdroid.Cache.ApplicationsView) {
                            Airdroid.Cache.ApplicationsView.e_RemoveAppBySid(e.data.apkid);
                            Airdroid.Cache.AppDetailShow = false;
                            $("#app_info").hide();
                            $(window).trigger("resize")
                        }
                    }
                } else {
                    if (e.event == "install") {
                        if (e.data.operat == 1 && Airdroid.Cache.ApplicationsView) {
                            Airdroid.Cache.ApplicationsView.e_CancelInstallAppBySid(e.data.apkid, e.data.apkname)
                        } else {
                            if (e.data.operat == 2 && Airdroid.Cache.ApplicationsView) {
                                Airdroid.Cache.ApplicationsView.e_InstallAppBySid(e.data.apkid, e.data.apkname)
                            } else {
                                if (e.data.operat == 0 && Airdroid.Cache.ApplicationsView) {
                                    var f = $('#applications #app_list_view_processing .app_list_item[sid="' + e.data.apkid + '"]');
                                    clearWaitingTip(f);
                                    if (Airdroid.Cache.ApplicationsView.atApp) {
                                        showMaskTip(f, "install", "tips_wait_for_install_confirm", "applications", "Installing...", 280, "Clear", true)
                                    } else {
                                        showMaskTip(f, "install", "tips_wait_for_install_confirm", "applications", "Installing...", 280, "Clear", true, false)
                                    }
                                }
                            }
                        }
                    } else {
                        if (e.event == "sms_sendresult") {
                            $.publish("[to:ui]/event/socket/sms/send/result", [e.data])
                        } else {
                            if (e.event == "sms_received") {
                                b.push(e.data.threadId);
                                $.publish("[to:ui]/event/socket/sms/receive", [e.data])
                            } else {
                                if (e.event == "sms_changed") {
                                    if (_.any(b, function (g) {
                                        return g == e.data.threadId
                                    })) {
                                        a = true
                                    }
                                    $.publish("[to:ui]/event/socket/sms/changed", [e.data, a])
                                }
                            }
                        }
                    }
                }
            }
        }
    })
}, onClose:function () {
    this.isConnect = false;
    this.socketConnectTimer = setInterval(function () {
        if (this.isConnect) {
            clearInterval(this.socketConnectTimer);
            this.socketConnectTimer = null
        } else {
            this.connectSocket()
        }
    }.bind(this), this.closedConnectInterval * 1000)
}, closeSocket:function () {
    this.send('{"event":"close_socket","data":""}')
}, send:function (a) {
    if (this.isConnect) {
        this.AirdroidSocket.write(a)
    }
}, connectSocket:function () {
    if (this.isReady) {
        if (this.socketConnectTimer) {
            this.connectCount++
        }
        this.AirdroidSocket.connect(this.socketSetting.host, this.socketSetting.port)
    }
}, AirdroidSocket:null, initSocket:function () {
    _.bindAll(this, "onReady", "onConnect", "onData", "onClose");
    this.socketSetting.host = Airdroid.Env.ConnectionAddress.split(":")[0];
    this.socketSetting.port = Airdroid.Env.websocket_port;
    this.AirdroidSocket = new jSocket(this.onReady, this.onConnect, this.onData, this.onClose);
    this.AirdroidSocket.setup("tbSocket")
}};
$(function () {
});
$(window).unload(function () {
    Airdroid.Socket.closeSocket()
});
(function (a, e) {
    a.fn.jPlayer = function (b) {
        var h = typeof b === "string", g = Array.prototype.slice.call(arguments, 1), f = this, b = !h && g.length ? a.extend.apply(null, [!0, b].concat(g)) : b;
        if (h && b.charAt(0) === "_") {
            return f
        }
        h ? this.each(function () {
            var k = a.data(this, "jPlayer"), j = k && a.isFunction(k[b]) ? k[b].apply(k, g) : k;
            if (j !== k && j !== e) {
                return f = j, !1
            }
        }) : this.each(function () {
            var j = a.data(this, "jPlayer");
            j ? j.option(b || {}) : a.data(this, "jPlayer", new a.jPlayer(b, this))
        });
        return f
    };
    a.jPlayer = function (b, g) {
        if (arguments.length) {
            this.element = a(g);
            this.options = a.extend(!0, {}, this.options, b);
            var f = this;
            this.element.bind("remove.jPlayer", function () {
                f.destroy()
            });
            this._init()
        }
    };
    a.jPlayer.emulateMethods = "load play pause";
    a.jPlayer.emulateStatus = "src readyState networkState currentTime duration paused ended playbackRate";
    a.jPlayer.emulateOptions = "muted volume";
    a.jPlayer.reservedEvent = "ready flashreset resize repeat error warning";
    a.jPlayer.event = {ready:"jPlayer_ready", flashreset:"jPlayer_flashreset", resize:"jPlayer_resize", repeat:"jPlayer_repeat", click:"jPlayer_click", error:"jPlayer_error", warning:"jPlayer_warning", loadstart:"jPlayer_loadstart", progress:"jPlayer_progress", suspend:"jPlayer_suspend", abort:"jPlayer_abort", emptied:"jPlayer_emptied", stalled:"jPlayer_stalled", play:"jPlayer_play", pause:"jPlayer_pause", loadedmetadata:"jPlayer_loadedmetadata", loadeddata:"jPlayer_loadeddata", waiting:"jPlayer_waiting", playing:"jPlayer_playing", canplay:"jPlayer_canplay", canplaythrough:"jPlayer_canplaythrough", seeking:"jPlayer_seeking", seeked:"jPlayer_seeked", timeupdate:"jPlayer_timeupdate", ended:"jPlayer_ended", ratechange:"jPlayer_ratechange", durationchange:"jPlayer_durationchange", volumechange:"jPlayer_volumechange"};
    a.jPlayer.htmlEvent = "loadstart,abort,emptied,stalled,loadedmetadata,loadeddata,canplay,canplaythrough,ratechange".split(",");
    a.jPlayer.pause = function () {
        a.each(a.jPlayer.prototype.instances, function (g, f) {
            f.data("jPlayer").status.srcSet && f.jPlayer("pause")
        })
    };
    a.jPlayer.timeFormat = {showHour:!1, showMin:!0, showSec:!0, padHour:!1, padMin:!0, padSec:!0, sepHour:":", sepMin:":", sepSec:""};
    a.jPlayer.convertTime = function (b) {
        var g = new Date(b * 1000), f = g.getUTCHours(), b = g.getUTCMinutes(), g = g.getUTCSeconds(), f = a.jPlayer.timeFormat.padHour && f < 10 ? "0" + f : f, b = a.jPlayer.timeFormat.padMin && b < 10 ? "0" + b : b, g = a.jPlayer.timeFormat.padSec && g < 10 ? "0" + g : g;
        return(a.jPlayer.timeFormat.showHour ? f + a.jPlayer.timeFormat.sepHour : "") + (a.jPlayer.timeFormat.showMin ? b + a.jPlayer.timeFormat.sepMin : "") + (a.jPlayer.timeFormat.showSec ? g + a.jPlayer.timeFormat.sepSec : "")
    };
    a.jPlayer.uaBrowser = function (g) {
        var g = g.toLowerCase(), f = /(opera)(?:.*version)?[ \/]([\w.]+)/, j = /(msie) ([\w.]+)/, h = /(mozilla)(?:.*? rv:([\w.]+))?/, g = /(webkit)[ \/]([\w.]+)/.exec(g) || f.exec(g) || j.exec(g) || g.indexOf("compatible") < 0 && h.exec(g) || [];
        return{browser:g[1] || "", version:g[2] || "0"}
    };
    a.jPlayer.uaPlatform = function (g) {
        var f = g.toLowerCase(), j = /(android)/, h = /(mobile)/, g = /(ipad|iphone|ipod|android|blackberry|playbook|windows ce|webos)/.exec(f) || [], f = /(ipad|playbook)/.exec(f) || !h.exec(f) && j.exec(f) || [];
        g[1] && (g[1] = g[1].replace(/\s/g, "_"));
        return{platform:g[1] || "", tablet:f[1] || ""}
    };
    a.jPlayer.browser = {};
    a.jPlayer.platform = {};
    var c = a.jPlayer.uaBrowser(navigator.userAgent);
    if (c.browser) {
        a.jPlayer.browser[c.browser] = !0, a.jPlayer.browser.version = c.version
    }
    c = a.jPlayer.uaPlatform(navigator.userAgent);
    if (c.platform) {
        a.jPlayer.platform[c.platform] = !0, a.jPlayer.platform.mobile = !c.tablet, a.jPlayer.platform.tablet = !!c.tablet
    }
    a.jPlayer.prototype = {count:0, version:{script:"2.1.0", needFlash:"2.1.0", flash:"unknown"}, options:{swfPath:"js", solution:"html, flash", supplied:"mp3", preload:"metadata", volume:0.8, muted:!1, wmode:"opaque", backgroundColor:"#000000", cssSelectorAncestor:"#jp_container_1", cssSelector:{videoPlay:".jp-video-play", play:".jp-play", pause:".jp-pause", stop:".jp-stop", seekBar:".jp-seek-bar", playBar:".jp-play-bar", mute:".jp-mute", unmute:".jp-unmute", volumeBar:".jp-volume-bar", volumeBarValue:".jp-volume-bar-value", volumeMax:".jp-volume-max", currentTime:".jp-current-time", duration:".jp-duration", fullScreen:".jp-full-screen", restoreScreen:".jp-restore-screen", repeat:".jp-repeat", repeatOff:".jp-repeat-off", gui:".jp-gui", noSolution:".jp-no-solution"}, fullScreen:!1, autohide:{restored:!1, full:!0, fadeIn:200, fadeOut:600, hold:1000}, loop:!1, repeat:function (b) {
        b.jPlayer.options.loop ? a(this).unbind(".jPlayerRepeat").bind(a.jPlayer.event.ended + ".jPlayer.jPlayerRepeat", function () {
            a(this).jPlayer("play")
        }) : a(this).unbind(".jPlayerRepeat")
    }, nativeVideoControls:{}, noFullScreen:{msie:/msie [0-6]/, ipad:/ipad.*?os [0-4]/, iphone:/iphone/, ipod:/ipod/, android_pad:/android [0-3](?!.*?mobile)/, android_phone:/android.*?mobile/, blackberry:/blackberry/, windows_ce:/windows ce/, webos:/webos/}, noVolume:{ipad:/ipad/, iphone:/iphone/, ipod:/ipod/, android_pad:/android(?!.*?mobile)/, android_phone:/android.*?mobile/, blackberry:/blackberry/, windows_ce:/windows ce/, webos:/webos/, playbook:/playbook/}, verticalVolume:!1, idPrefix:"jp", noConflict:"jQuery", emulateHtml:!1, errorAlerts:!1, warningAlerts:!1}, optionsAudio:{size:{width:"0px", height:"0px", cssClass:""}, sizeFull:{width:"0px", height:"0px", cssClass:""}}, optionsVideo:{size:{width:"480px", height:"270px", cssClass:"jp-video-270p"}, sizeFull:{width:"100%", height:"100%", cssClass:"jp-video-full"}}, instances:{}, status:{src:"", media:{}, paused:!0, format:{}, formatType:"", waitForPlay:!0, waitForLoad:!0, srcSet:!1, video:!1, seekPercent:0, currentPercentRelative:0, currentPercentAbsolute:0, currentTime:0, duration:0, readyState:0, networkState:0, playbackRate:1, ended:0}, internal:{ready:!1}, solution:{html:!0, flash:!0}, format:{mp3:{codec:'audio/mpeg; codecs="mp3"', flashCanPlay:!0, media:"audio"}, m4a:{codec:'audio/mp4; codecs="mp4a.40.2"', flashCanPlay:!0, media:"audio"}, oga:{codec:'audio/ogg; codecs="vorbis"', flashCanPlay:!1, media:"audio"}, wav:{codec:'audio/wav; codecs="1"', flashCanPlay:!1, media:"audio"}, webma:{codec:'audio/webm; codecs="vorbis"', flashCanPlay:!1, media:"audio"}, fla:{codec:"audio/x-flv", flashCanPlay:!0, media:"audio"}, m4v:{codec:'video/mp4; codecs="avc1.42E01E, mp4a.40.2"', flashCanPlay:!0, media:"video"}, ogv:{codec:'video/ogg; codecs="theora, vorbis"', flashCanPlay:!1, media:"video"}, webmv:{codec:'video/webm; codecs="vorbis, vp8"', flashCanPlay:!1, media:"video"}, flv:{codec:"video/x-flv", flashCanPlay:!0, media:"video"}}, _init:function () {
        var b = this;
        this.element.empty();
        this.status = a.extend({}, this.status);
        this.internal = a.extend({}, this.internal);
        this.internal.domNode = this.element.get(0);
        this.formats = [];
        this.solutions = [];
        this.require = {};
        this.htmlElement = {};
        this.html = {};
        this.html.audio = {};
        this.html.video = {};
        this.flash = {};
        this.css = {};
        this.css.cs = {};
        this.css.jq = {};
        this.ancestorJq = [];
        this.options.volume = this._limitValue(this.options.volume, 0, 1);
        a.each(this.options.supplied.toLowerCase().split(","), function (m, l) {
            var k = l.replace(/^\s+|\s+$/g, "");
            if (b.format[k]) {
                var j = !1;
                a.each(b.formats, function (o, n) {
                    if (k === n) {
                        return j = !0, !1
                    }
                });
                j || b.formats.push(k)
            }
        });
        a.each(this.options.solution.toLowerCase().split(","), function (m, l) {
            var k = l.replace(/^\s+|\s+$/g, "");
            if (b.solution[k]) {
                var j = !1;
                a.each(b.solutions, function (o, n) {
                    if (k === n) {
                        return j = !0, !1
                    }
                });
                j || b.solutions.push(k)
            }
        });
        this.internal.instance = "jp_" + this.count;
        this.instances[this.internal.instance] = this.element;
        this.element.attr("id") || this.element.attr("id", this.options.idPrefix + "_jplayer_" + this.count);
        this.internal.self = a.extend({}, {id:this.element.attr("id"), jq:this.element});
        this.internal.audio = a.extend({}, {id:this.options.idPrefix + "_audio_" + this.count, jq:e});
        this.internal.video = a.extend({}, {id:this.options.idPrefix + "_video_" + this.count, jq:e});
        this.internal.flash = a.extend({}, {id:this.options.idPrefix + "_flash_" + this.count, jq:e, swf:this.options.swfPath + (this.options.swfPath.toLowerCase().slice(-4) !== ".swf" ? (this.options.swfPath && this.options.swfPath.slice(-1) !== "/" ? "/" : "") + "Jplayer.swf" : "")});
        this.internal.poster = a.extend({}, {id:this.options.idPrefix + "_poster_" + this.count, jq:e});
        a.each(a.jPlayer.event, function (j, k) {
            b.options[j] !== e && (b.element.bind(k + ".jPlayer", b.options[j]), b.options[j] = e)
        });
        this.require.audio = !1;
        this.require.video = !1;
        a.each(this.formats, function (j, k) {
            b.require[b.format[k].media] = !0
        });
        this.options = this.require.video ? a.extend(!0, {}, this.optionsVideo, this.options) : a.extend(!0, {}, this.optionsAudio, this.options);
        this._setSize();
        this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
        this.status.noFullScreen = this._uaBlocklist(this.options.noFullScreen);
        this.status.noVolume = this._uaBlocklist(this.options.noVolume);
        this._restrictNativeVideoControls();
        this.htmlElement.poster = document.createElement("img");
        this.htmlElement.poster.id = this.internal.poster.id;
        this.htmlElement.poster.onload = function () {
            (!b.status.video || b.status.waitForPlay) && b.internal.poster.jq.show()
        };
        this.element.append(this.htmlElement.poster);
        this.internal.poster.jq = a("#" + this.internal.poster.id);
        this.internal.poster.jq.css({width:this.status.width, height:this.status.height});
        this.internal.poster.jq.hide();
        this.internal.poster.jq.bind("click.jPlayer", function () {
            b._trigger(a.jPlayer.event.click)
        });
        this.html.audio.available = !1;
        if (this.require.audio) {
            this.htmlElement.audio = document.createElement("audio"), this.htmlElement.audio.id = this.internal.audio.id, this.html.audio.available = !!this.htmlElement.audio.canPlayType && this._testCanPlayType(this.htmlElement.audio)
        }
        this.html.video.available = !1;
        if (this.require.video) {
            this.htmlElement.video = document.createElement("video"), this.htmlElement.video.id = this.internal.video.id, this.html.video.available = !!this.htmlElement.video.canPlayType && this._testCanPlayType(this.htmlElement.video)
        }
        this.flash.available = this._checkForFlash(10);
        this.html.canPlay = {};
        this.flash.canPlay = {};
        a.each(this.formats, function (j, k) {
            b.html.canPlay[k] = b.html[b.format[k].media].available && "" !== b.htmlElement[b.format[k].media].canPlayType(b.format[k].codec);
            b.flash.canPlay[k] = b.format[k].flashCanPlay && b.flash.available
        });
        this.html.desired = !1;
        this.flash.desired = !1;
        a.each(this.solutions, function (m, l) {
            if (m === 0) {
                b[l].desired = !0
            } else {
                var k = !1, j = !1;
                a.each(b.formats, function (n, o) {
                    b[b.solutions[0]].canPlay[o] && (b.format[o].media === "video" ? j = !0 : k = !0)
                });
                b[l].desired = b.require.audio && !k || b.require.video && !j
            }
        });
        this.html.support = {};
        this.flash.support = {};
        a.each(this.formats, function (j, k) {
            b.html.support[k] = b.html.canPlay[k] && b.html.desired;
            b.flash.support[k] = b.flash.canPlay[k] && b.flash.desired
        });
        this.html.used = !1;
        this.flash.used = !1;
        a.each(this.solutions, function (k, j) {
            a.each(b.formats, function (l, m) {
                if (b[j].support[m]) {
                    return b[j].used = !0, !1
                }
            })
        });
        this._resetActive();
        this._resetGate();
        this._cssSelectorAncestor(this.options.cssSelectorAncestor);
        !this.html.used && !this.flash.used ? (this._error({type:a.jPlayer.error.NO_SOLUTION, context:"{solution:'" + this.options.solution + "', supplied:'" + this.options.supplied + "'}", message:a.jPlayer.errorMsg.NO_SOLUTION, hint:a.jPlayer.errorHint.NO_SOLUTION}), this.css.jq.noSolution.length && this.css.jq.noSolution.show()) : this.css.jq.noSolution.length && this.css.jq.noSolution.hide();
        if (this.flash.used) {
            var h, g = "jQuery=" + encodeURI(this.options.noConflict) + "&id=" + encodeURI(this.internal.self.id) + "&vol=" + this.options.volume + "&muted=" + this.options.muted;
            if (a.browser.msie && Number(a.browser.version) <= 8) {
                g = ['<param name="movie" value="' + this.internal.flash.swf + '" />', '<param name="FlashVars" value="' + g + '" />', '<param name="allowScriptAccess" value="always" />', '<param name="bgcolor" value="' + this.options.backgroundColor + '" />', '<param name="wmode" value="' + this.options.wmode + '" />'];
                h = document.createElement('<object id="' + this.internal.flash.id + '" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="0" height="0"></object>');
                for (var f = 0; f < g.length; f++) {
                    h.appendChild(document.createElement(g[f]))
                }
            } else {
                f = function (k, j, m) {
                    var l = document.createElement("param");
                    l.setAttribute("name", j);
                    l.setAttribute("value", m);
                    k.appendChild(l)
                }, h = document.createElement("object"), h.setAttribute("id", this.internal.flash.id), h.setAttribute("data", this.internal.flash.swf), h.setAttribute("type", "application/x-shockwave-flash"), h.setAttribute("width", "1"), h.setAttribute("height", "1"), f(h, "flashvars", g), f(h, "allowscriptaccess", "always"), f(h, "bgcolor", this.options.backgroundColor), f(h, "wmode", this.options.wmode)
            }
            this.element.append(h);
            this.internal.flash.jq = a(h)
        }
        if (this.html.used) {
            if (this.html.audio.available) {
                this._addHtmlEventListeners(this.htmlElement.audio, this.html.audio), this.element.append(this.htmlElement.audio), this.internal.audio.jq = a("#" + this.internal.audio.id)
            }
            if (this.html.video.available) {
                this._addHtmlEventListeners(this.htmlElement.video, this.html.video), this.element.append(this.htmlElement.video), this.internal.video.jq = a("#" + this.internal.video.id), this.status.nativeVideoControls ? this.internal.video.jq.css({width:this.status.width, height:this.status.height}) : this.internal.video.jq.css({width:"0px", height:"0px"}), this.internal.video.jq.bind("click.jPlayer", function () {
                    b._trigger(a.jPlayer.event.click)
                })
            }
        }
        this.options.emulateHtml && this._emulateHtmlBridge();
        this.html.used && !this.flash.used && setTimeout(function () {
            b.internal.ready = !0;
            b.version.flash = "n/a";
            b._trigger(a.jPlayer.event.repeat);
            b._trigger(a.jPlayer.event.ready)
        }, 100);
        this._updateNativeVideoControls();
        this._updateInterface();
        this._updateButtons(!1);
        this._updateAutohide();
        this._updateVolume(this.options.volume);
        this._updateMute(this.options.muted);
        this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide();
        a.jPlayer.prototype.count++
    }, destroy:function () {
        this.clearMedia();
        this._removeUiClass();
        this.css.jq.currentTime.length && this.css.jq.currentTime.text("");
        this.css.jq.duration.length && this.css.jq.duration.text("");
        a.each(this.css.jq, function (g, f) {
            f.length && f.unbind(".jPlayer")
        });
        this.internal.poster.jq.unbind(".jPlayer");
        this.internal.video.jq && this.internal.video.jq.unbind(".jPlayer");
        this.options.emulateHtml && this._destroyHtmlBridge();
        this.element.removeData("jPlayer");
        this.element.unbind(".jPlayer");
        this.element.empty();
        delete this.instances[this.internal.instance]
    }, enable:function () {
    }, disable:function () {
    }, _testCanPlayType:function (g) {
        try {
            return g.canPlayType(this.format.mp3.codec), !0
        } catch (f) {
            return !1
        }
    }, _uaBlocklist:function (b) {
        var g = navigator.userAgent.toLowerCase(), f = !1;
        a.each(b, function (j, h) {
            if (h && h.test(g)) {
                return f = !0, !1
            }
        });
        return f
    }, _restrictNativeVideoControls:function () {
        if (this.require.audio && this.status.nativeVideoControls) {
            this.status.nativeVideoControls = !1, this.status.noFullScreen = !0
        }
    }, _updateNativeVideoControls:function () {
        if (this.html.video.available && this.html.used) {
            this.htmlElement.video.controls = this.status.nativeVideoControls, this._updateAutohide(), this.status.nativeVideoControls && this.require.video ? (this.internal.poster.jq.hide(), this.internal.video.jq.css({width:this.status.width, height:this.status.height})) : this.status.waitForPlay && this.status.video && (this.internal.poster.jq.show(), this.internal.video.jq.css({width:"0px", height:"0px"}))
        }
    }, _addHtmlEventListeners:function (b, g) {
        var f = this;
        b.preload = this.options.preload;
        b.muted = this.options.muted;
        b.volume = this.options.volume;
        b.addEventListener("progress", function () {
            g.gate && (f._getHtmlStatus(b), f._updateInterface(), f._trigger(a.jPlayer.event.progress))
        }, !1);
        b.addEventListener("timeupdate", function () {
            g.gate && (f._getHtmlStatus(b), f._updateInterface(), f._trigger(a.jPlayer.event.timeupdate))
        }, !1);
        b.addEventListener("durationchange", function () {
            if (g.gate) {
                f.status.duration = this.duration, f._getHtmlStatus(b), f._updateInterface(), f._trigger(a.jPlayer.event.durationchange)
            }
        }, !1);
        b.addEventListener("play", function () {
            g.gate && (f._updateButtons(!0), f._html_checkWaitForPlay(), f._trigger(a.jPlayer.event.play))
        }, !1);
        b.addEventListener("playing", function () {
            g.gate && (f._updateButtons(!0), f._seeked(), f._trigger(a.jPlayer.event.playing))
        }, !1);
        b.addEventListener("pause", function () {
            g.gate && (f._updateButtons(!1), f._trigger(a.jPlayer.event.pause))
        }, !1);
        b.addEventListener("waiting", function () {
            g.gate && (f._seeking(), f._trigger(a.jPlayer.event.waiting))
        }, !1);
        b.addEventListener("seeking", function () {
            g.gate && (f._seeking(), f._trigger(a.jPlayer.event.seeking))
        }, !1);
        b.addEventListener("seeked", function () {
            g.gate && (f._seeked(), f._trigger(a.jPlayer.event.seeked))
        }, !1);
        b.addEventListener("volumechange", function () {
            if (g.gate) {
                f.options.volume = b.volume, f.options.muted = b.muted, f._updateMute(), f._updateVolume(), f._trigger(a.jPlayer.event.volumechange)
            }
        }, !1);
        b.addEventListener("suspend", function () {
            g.gate && (f._seeked(), f._trigger(a.jPlayer.event.suspend))
        }, !1);
        b.addEventListener("ended", function () {
            if (g.gate) {
                if (!a.jPlayer.browser.webkit) {
                    f.htmlElement.media.currentTime = 0
                }
                f.htmlElement.media.pause();
                f._updateButtons(!1);
                f._getHtmlStatus(b, !0);
                f._updateInterface();
                f._trigger(a.jPlayer.event.ended)
            }
        }, !1);
        b.addEventListener("error", function () {
            if (g.gate && (f._updateButtons(!1), f._seeked(), f.status.srcSet)) {
                clearTimeout(f.internal.htmlDlyCmdId), f.status.waitForLoad = !0, f.status.waitForPlay = !0, f.status.video && !f.status.nativeVideoControls && f.internal.video.jq.css({width:"0px", height:"0px"}), f._validString(f.status.media.poster) && !f.status.nativeVideoControls && f.internal.poster.jq.show(), f.css.jq.videoPlay.length && f.css.jq.videoPlay.show(), f._error({type:a.jPlayer.error.URL, context:f.status.src, message:a.jPlayer.errorMsg.URL, hint:a.jPlayer.errorHint.URL})
            }
        }, !1);
        a.each(a.jPlayer.htmlEvent, function (j, h) {
            b.addEventListener(this, function () {
                g.gate && f._trigger(a.jPlayer.event[h])
            }, !1)
        })
    }, _getHtmlStatus:function (j, h) {
        var n = 0, m = 0, k = 0, l = 0;
        if (j.duration) {
            this.status.duration = j.duration
        }
        n = j.currentTime;
        m = this.status.duration > 0 ? 100 * n / this.status.duration : 0;
        typeof j.seekable === "object" && j.seekable.length > 0 ? (k = this.status.duration > 0 ? 100 * j.seekable.end(j.seekable.length - 1) / this.status.duration : 100, l = 100 * j.currentTime / j.seekable.end(j.seekable.length - 1)) : (k = 100, l = m);
        h && (m = l = n = 0);
        this.status.seekPercent = k;
        this.status.currentPercentRelative = l;
        this.status.currentPercentAbsolute = m;
        this.status.currentTime = n;
        this.status.readyState = j.readyState;
        this.status.networkState = j.networkState;
        this.status.playbackRate = j.playbackRate;
        this.status.ended = j.ended
    }, _resetStatus:function () {
        this.status = a.extend({}, this.status, a.jPlayer.prototype.status)
    }, _trigger:function (b, g, f) {
        b = a.Event(b);
        b.jPlayer = {};
        b.jPlayer.version = a.extend({}, this.version);
        b.jPlayer.options = a.extend(!0, {}, this.options);
        b.jPlayer.status = a.extend(!0, {}, this.status);
        b.jPlayer.html = a.extend(!0, {}, this.html);
        b.jPlayer.flash = a.extend(!0, {}, this.flash);
        if (g) {
            b.jPlayer.error = a.extend({}, g)
        }
        if (f) {
            b.jPlayer.warning = a.extend({}, f)
        }
        this.element.trigger(b)
    }, jPlayerFlashEvent:function (b, h) {
        if (b === a.jPlayer.event.ready) {
            if (this.internal.ready) {
                if (this.flash.gate) {
                    if (this.status.srcSet) {
                        var g = this.status.currentTime, f = this.status.paused;
                        this.setMedia(this.status.media);
                        g > 0 && (f ? this.pause(g) : this.play(g))
                    }
                    this._trigger(a.jPlayer.event.flashreset)
                }
            } else {
                this.internal.ready = !0, this.internal.flash.jq.css({width:"0px", height:"0px"}), this.version.flash = h.version, this.version.needFlash !== this.version.flash && this._error({type:a.jPlayer.error.VERSION, context:this.version.flash, message:a.jPlayer.errorMsg.VERSION + this.version.flash, hint:a.jPlayer.errorHint.VERSION}), this._trigger(a.jPlayer.event.repeat), this._trigger(b)
            }
        }
        if (this.flash.gate) {
            switch (b) {
                case a.jPlayer.event.progress:
                    this._getFlashStatus(h);
                    this._updateInterface();
                    this._trigger(b);
                    break;
                case a.jPlayer.event.timeupdate:
                    this._getFlashStatus(h);
                    this._updateInterface();
                    this._trigger(b);
                    break;
                case a.jPlayer.event.play:
                    this._seeked();
                    this._updateButtons(!0);
                    this._trigger(b);
                    break;
                case a.jPlayer.event.pause:
                    this._updateButtons(!1);
                    this._trigger(b);
                    break;
                case a.jPlayer.event.ended:
                    this._updateButtons(!1);
                    this._trigger(b);
                    break;
                case a.jPlayer.event.click:
                    this._trigger(b);
                    break;
                case a.jPlayer.event.error:
                    this.status.waitForLoad = !0;
                    this.status.waitForPlay = !0;
                    this.status.video && this.internal.flash.jq.css({width:"0px", height:"0px"});
                    this._validString(this.status.media.poster) && this.internal.poster.jq.show();
                    this.css.jq.videoPlay.length && this.status.video && this.css.jq.videoPlay.show();
                    this.status.video ? this._flash_setVideo(this.status.media) : this._flash_setAudio(this.status.media);
                    this._updateButtons(!1);
                    this._error({type:a.jPlayer.error.URL, context:h.src, message:a.jPlayer.errorMsg.URL, hint:a.jPlayer.errorHint.URL});
                    break;
                case a.jPlayer.event.seeking:
                    this._seeking();
                    this._trigger(b);
                    break;
                case a.jPlayer.event.seeked:
                    this._seeked();
                    this._trigger(b);
                    break;
                case a.jPlayer.event.ready:
                    break;
                default:
                    this._trigger(b)
            }
        }
        return !1
    }, _getFlashStatus:function (b) {
        this.status.seekPercent = b.seekPercent;
        this.status.currentPercentRelative = b.currentPercentRelative;
        this.status.currentPercentAbsolute = b.currentPercentAbsolute;
        this.status.currentTime = b.currentTime;
        this.status.duration = b.duration;
        this.status.readyState = 4;
        this.status.networkState = 0;
        this.status.playbackRate = 1;
        this.status.ended = !1
    }, _updateButtons:function (b) {
        if (b !== e) {
            this.status.paused = !b, this.css.jq.play.length && this.css.jq.pause.length && (b ? (this.css.jq.play.hide(), this.css.jq.pause.show()) : (this.css.jq.play.show(), this.css.jq.pause.hide()))
        }
        this.css.jq.restoreScreen.length && this.css.jq.fullScreen.length && (this.status.noFullScreen ? (this.css.jq.fullScreen.hide(), this.css.jq.restoreScreen.hide()) : this.options.fullScreen ? (this.css.jq.fullScreen.hide(), this.css.jq.restoreScreen.show()) : (this.css.jq.fullScreen.show(), this.css.jq.restoreScreen.hide()));
        this.css.jq.repeat.length && this.css.jq.repeatOff.length && (this.options.loop ? (this.css.jq.repeat.hide(), this.css.jq.repeatOff.show()) : (this.css.jq.repeat.show(), this.css.jq.repeatOff.hide()))
    }, _updateInterface:function () {
        this.css.jq.seekBar.length && this.css.jq.seekBar.width(this.status.seekPercent + "%");
        this.css.jq.playBar.length && this.css.jq.playBar.width(this.status.currentPercentRelative + "%");
        this.css.jq.currentTime.length && this.css.jq.currentTime.text(a.jPlayer.convertTime(this.status.currentTime));
        this.css.jq.duration.length && this.css.jq.duration.text(a.jPlayer.convertTime(this.status.duration))
    }, _seeking:function () {
        this.css.jq.seekBar.length && this.css.jq.seekBar.addClass("jp-seeking-bg")
    }, _seeked:function () {
        this.css.jq.seekBar.length && this.css.jq.seekBar.removeClass("jp-seeking-bg")
    }, _resetGate:function () {
        this.html.audio.gate = !1;
        this.html.video.gate = !1;
        this.flash.gate = !1
    }, _resetActive:function () {
        this.html.active = !1;
        this.flash.active = !1
    }, setMedia:function (b) {
        var h = this, g = !1, f = this.status.media.poster !== b.poster;
        this._resetMedia();
        this._resetGate();
        this._resetActive();
        a.each(this.formats, function (l, k) {
            var j = h.format[k].media === "video";
            a.each(h.solutions, function (m, o) {
                if (h[o].support[k] && h._validString(b[k])) {
                    var n = o === "html";
                    j ? (n ? (h.html.video.gate = !0, h._html_setVideo(b), h.html.active = !0) : (h.flash.gate = !0, h._flash_setVideo(b), h.flash.active = !0), h.css.jq.videoPlay.length && h.css.jq.videoPlay.show(), h.status.video = !0) : (n ? (h.html.audio.gate = !0, h._html_setAudio(b), h.html.active = !0) : (h.flash.gate = !0, h._flash_setAudio(b), h.flash.active = !0), h.css.jq.videoPlay.length && h.css.jq.videoPlay.hide(), h.status.video = !1);
                    g = !0;
                    return !1
                }
            });
            if (g) {
                return !1
            }
        });
        if (g) {
            if ((!this.status.nativeVideoControls || !this.html.video.gate) && this._validString(b.poster)) {
                f ? this.htmlElement.poster.src = b.poster : this.internal.poster.jq.show()
            }
            this.status.srcSet = !0;
            this.status.media = a.extend({}, b);
            this._updateButtons(!1);
            this._updateInterface()
        } else {
            this._error({type:a.jPlayer.error.NO_SUPPORT, context:"{supplied:'" + this.options.supplied + "'}", message:a.jPlayer.errorMsg.NO_SUPPORT, hint:a.jPlayer.errorHint.NO_SUPPORT})
        }
    }, _resetMedia:function () {
        this._resetStatus();
        this._updateButtons(!1);
        this._updateInterface();
        this._seeked();
        this.internal.poster.jq.hide();
        clearTimeout(this.internal.htmlDlyCmdId);
        this.html.active ? this._html_resetMedia() : this.flash.active && this._flash_resetMedia()
    }, clearMedia:function () {
        this._resetMedia();
        this.html.active ? this._html_clearMedia() : this.flash.active && this._flash_clearMedia();
        this._resetGate();
        this._resetActive()
    }, load:function () {
        this.status.srcSet ? this.html.active ? this._html_load() : this.flash.active && this._flash_load() : this._urlNotSetError("load")
    }, play:function (b) {
        b = typeof b === "number" ? b : NaN;
        this.status.srcSet ? this.html.active ? this._html_play(b) : this.flash.active && this._flash_play(b) : this._urlNotSetError("play")
    }, videoPlay:function () {
        this.play()
    }, pause:function (b) {
        b = typeof b === "number" ? b : NaN;
        this.status.srcSet ? this.html.active ? this._html_pause(b) : this.flash.active && this._flash_pause(b) : this._urlNotSetError("pause")
    }, pauseOthers:function () {
        var b = this;
        a.each(this.instances, function (f, g) {
            b.element !== g && g.data("jPlayer").status.srcSet && g.jPlayer("pause")
        })
    }, stop:function () {
        this.status.srcSet ? this.html.active ? this._html_pause(0) : this.flash.active && this._flash_pause(0) : this._urlNotSetError("stop")
    }, playHead:function (b) {
        b = this._limitValue(b, 0, 100);
        this.status.srcSet ? this.html.active ? this._html_playHead(b) : this.flash.active && this._flash_playHead(b) : this._urlNotSetError("playHead")
    }, _muted:function (b) {
        this.options.muted = b;
        this.html.used && this._html_mute(b);
        this.flash.used && this._flash_mute(b);
        !this.html.video.gate && !this.html.audio.gate && (this._updateMute(b), this._updateVolume(this.options.volume), this._trigger(a.jPlayer.event.volumechange))
    }, mute:function (b) {
        b = b === e ? !0 : !!b;
        this._muted(b)
    }, unmute:function (b) {
        b = b === e ? !0 : !!b;
        this._muted(!b)
    }, _updateMute:function (b) {
        if (b === e) {
            b = this.options.muted
        }
        this.css.jq.mute.length && this.css.jq.unmute.length && (this.status.noVolume ? (this.css.jq.mute.hide(), this.css.jq.unmute.hide()) : b ? (this.css.jq.mute.hide(), this.css.jq.unmute.show()) : (this.css.jq.mute.show(), this.css.jq.unmute.hide()))
    }, volume:function (b) {
        b = this._limitValue(b, 0, 1);
        this.options.volume = b;
        this.html.used && this._html_volume(b);
        this.flash.used && this._flash_volume(b);
        !this.html.video.gate && !this.html.audio.gate && (this._updateVolume(b), this._trigger(a.jPlayer.event.volumechange))
    }, volumeBar:function (g) {
        if (this.css.jq.volumeBar.length) {
            var f = this.css.jq.volumeBar.offset(), j = g.pageX - f.left, h = this.css.jq.volumeBar.width(), g = this.css.jq.volumeBar.height() - g.pageY + f.top, f = this.css.jq.volumeBar.height();
            this.options.verticalVolume ? this.volume(g / f) : this.volume(j / h)
        }
        this.options.muted && this._muted(!1)
    }, volumeBarValue:function (b) {
        this.volumeBar(b)
    }, _updateVolume:function (b) {
        if (b === e) {
            b = this.options.volume
        }
        b = this.options.muted ? 0 : b;
        this.status.noVolume ? (this.css.jq.volumeBar.length && this.css.jq.volumeBar.hide(), this.css.jq.volumeBarValue.length && this.css.jq.volumeBarValue.hide(), this.css.jq.volumeMax.length && this.css.jq.volumeMax.hide()) : (this.css.jq.volumeBar.length && this.css.jq.volumeBar.show(), this.css.jq.volumeBarValue.length && (this.css.jq.volumeBarValue.show(), this.css.jq.volumeBarValue[this.options.verticalVolume ? "height" : "width"](b * 100 + "%")), this.css.jq.volumeMax.length && this.css.jq.volumeMax.show())
    }, volumeMax:function () {
        this.volume(1);
        this.options.muted && this._muted(!1)
    }, _cssSelectorAncestor:function (b) {
        var f = this;
        this.options.cssSelectorAncestor = b;
        this._removeUiClass();
        this.ancestorJq = b ? a(b) : [];
        b && this.ancestorJq.length !== 1 && this._warning({type:a.jPlayer.warning.CSS_SELECTOR_COUNT, context:b, message:a.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.ancestorJq.length + " found for cssSelectorAncestor.", hint:a.jPlayer.warningHint.CSS_SELECTOR_COUNT});
        this._addUiClass();
        a.each(this.options.cssSelector, function (h, g) {
            f._cssSelector(h, g)
        })
    }, _cssSelector:function (b, g) {
        var f = this;
        typeof g === "string" ? a.jPlayer.prototype.options.cssSelector[b] ? (this.css.jq[b] && this.css.jq[b].length && this.css.jq[b].unbind(".jPlayer"), this.options.cssSelector[b] = g, this.css.cs[b] = this.options.cssSelectorAncestor + " " + g, this.css.jq[b] = g ? a(this.css.cs[b]) : [], this.css.jq[b].length && this.css.jq[b].bind("click.jPlayer", function (h) {
            f[b](h);
            a(this).blur();
            return !1
        }), g && this.css.jq[b].length !== 1 && this._warning({type:a.jPlayer.warning.CSS_SELECTOR_COUNT, context:this.css.cs[b], message:a.jPlayer.warningMsg.CSS_SELECTOR_COUNT + this.css.jq[b].length + " found for " + b + " method.", hint:a.jPlayer.warningHint.CSS_SELECTOR_COUNT})) : this._warning({type:a.jPlayer.warning.CSS_SELECTOR_METHOD, context:b, message:a.jPlayer.warningMsg.CSS_SELECTOR_METHOD, hint:a.jPlayer.warningHint.CSS_SELECTOR_METHOD}) : this._warning({type:a.jPlayer.warning.CSS_SELECTOR_STRING, context:g, message:a.jPlayer.warningMsg.CSS_SELECTOR_STRING, hint:a.jPlayer.warningHint.CSS_SELECTOR_STRING})
    }, seekBar:function (g) {
        if (this.css.jq.seekBar) {
            var f = this.css.jq.seekBar.offset(), g = g.pageX - f.left, f = this.css.jq.seekBar.width();
            this.playHead(100 * g / f)
        }
    }, playBar:function (b) {
        this.seekBar(b)
    }, repeat:function () {
        this._loop(!0)
    }, repeatOff:function () {
        this._loop(!1)
    }, _loop:function (b) {
        if (this.options.loop !== b) {
            this.options.loop = b, this._updateButtons(), this._trigger(a.jPlayer.event.repeat)
        }
    }, currentTime:function () {
    }, duration:function () {
    }, gui:function () {
    }, noSolution:function () {
    }, option:function (b, m) {
        var l = b;
        if (arguments.length === 0) {
            return a.extend(!0, {}, this.options)
        }
        if (typeof b === "string") {
            var k = b.split(".");
            if (m === e) {
                for (var l = a.extend(!0, {}, this.options), j = 0; j < k.length; j++) {
                    if (l[k[j]] !== e) {
                        l = l[k[j]]
                    } else {
                        return this._warning({type:a.jPlayer.warning.OPTION_KEY, context:b, message:a.jPlayer.warningMsg.OPTION_KEY, hint:a.jPlayer.warningHint.OPTION_KEY}), e
                    }
                }
                return l
            }
            for (var j = l = {}, f = 0; f < k.length; f++) {
                f < k.length - 1 ? (j[k[f]] = {}, j = j[k[f]]) : j[k[f]] = m
            }
        }
        this._setOptions(l);
        return this
    }, _setOptions:function (b) {
        var f = this;
        a.each(b, function (h, g) {
            f._setOption(h, g)
        });
        return this
    }, _setOption:function (b, g) {
        var f = this;
        switch (b) {
            case"volume":
                this.volume(g);
                break;
            case"muted":
                this._muted(g);
                break;
            case"cssSelectorAncestor":
                this._cssSelectorAncestor(g);
                break;
            case"cssSelector":
                a.each(g, function (j, h) {
                    f._cssSelector(j, h)
                });
                break;
            case"fullScreen":
                this.options[b] !== g && (this._removeUiClass(), this.options[b] = g, this._refreshSize());
                break;
            case"size":
                !this.options.fullScreen && this.options[b].cssClass !== g.cssClass && this._removeUiClass();
                this.options[b] = a.extend({}, this.options[b], g);
                this._refreshSize();
                break;
            case"sizeFull":
                this.options.fullScreen && this.options[b].cssClass !== g.cssClass && this._removeUiClass();
                this.options[b] = a.extend({}, this.options[b], g);
                this._refreshSize();
                break;
            case"autohide":
                this.options[b] = a.extend({}, this.options[b], g);
                this._updateAutohide();
                break;
            case"loop":
                this._loop(g);
                break;
            case"nativeVideoControls":
                this.options[b] = a.extend({}, this.options[b], g);
                this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
                this._restrictNativeVideoControls();
                this._updateNativeVideoControls();
                break;
            case"noFullScreen":
                this.options[b] = a.extend({}, this.options[b], g);
                this.status.nativeVideoControls = this._uaBlocklist(this.options.nativeVideoControls);
                this.status.noFullScreen = this._uaBlocklist(this.options.noFullScreen);
                this._restrictNativeVideoControls();
                this._updateButtons();
                break;
            case"noVolume":
                this.options[b] = a.extend({}, this.options[b], g);
                this.status.noVolume = this._uaBlocklist(this.options.noVolume);
                this._updateVolume();
                this._updateMute();
                break;
            case"emulateHtml":
                this.options[b] !== g && ((this.options[b] = g) ? this._emulateHtmlBridge() : this._destroyHtmlBridge())
        }
        return this
    }, _refreshSize:function () {
        this._setSize();
        this._addUiClass();
        this._updateSize();
        this._updateButtons();
        this._updateAutohide();
        this._trigger(a.jPlayer.event.resize)
    }, _setSize:function () {
        this.options.fullScreen ? (this.status.width = this.options.sizeFull.width, this.status.height = this.options.sizeFull.height, this.status.cssClass = this.options.sizeFull.cssClass) : (this.status.width = this.options.size.width, this.status.height = this.options.size.height, this.status.cssClass = this.options.size.cssClass);
        this.element.css({width:this.status.width, height:this.status.height})
    }, _addUiClass:function () {
        this.ancestorJq.length && this.ancestorJq.addClass(this.status.cssClass)
    }, _removeUiClass:function () {
        this.ancestorJq.length && this.ancestorJq.removeClass(this.status.cssClass)
    }, _updateSize:function () {
        this.internal.poster.jq.css({width:this.status.width, height:this.status.height});
        !this.status.waitForPlay && this.html.active && this.status.video || this.html.video.available && this.html.used && this.status.nativeVideoControls ? this.internal.video.jq.css({width:this.status.width, height:this.status.height}) : !this.status.waitForPlay && this.flash.active && this.status.video && this.internal.flash.jq.css({width:this.status.width, height:this.status.height})
    }, _updateAutohide:function () {
        var g = this, f = function () {
            g.css.jq.gui.fadeIn(g.options.autohide.fadeIn, function () {
                clearTimeout(g.internal.autohideId);
                g.internal.autohideId = setTimeout(function () {
                    g.css.jq.gui.fadeOut(g.options.autohide.fadeOut)
                }, g.options.autohide.hold)
            })
        };
        this.css.jq.gui.length && (this.css.jq.gui.stop(!0, !0), clearTimeout(this.internal.autohideId), this.element.unbind(".jPlayerAutohide"), this.css.jq.gui.unbind(".jPlayerAutohide"), this.status.nativeVideoControls ? this.css.jq.gui.hide() : this.options.fullScreen && this.options.autohide.full || !this.options.fullScreen && this.options.autohide.restored ? (this.element.bind("mousemove.jPlayer.jPlayerAutohide", f), this.css.jq.gui.bind("mousemove.jPlayer.jPlayerAutohide", f), this.css.jq.gui.hide()) : this.css.jq.gui.show())
    }, fullScreen:function () {
        this._setOption("fullScreen", !0)
    }, restoreScreen:function () {
        this._setOption("fullScreen", !1)
    }, _html_initMedia:function () {
        this.htmlElement.media.src = this.status.src;
        this.options.preload !== "none" && this._html_load();
        this._trigger(a.jPlayer.event.timeupdate)
    }, _html_setAudio:function (b) {
        var f = this;
        a.each(this.formats, function (g, h) {
            if (f.html.support[h] && b[h]) {
                return f.status.src = b[h], f.status.format[h] = !0, f.status.formatType = h, !1
            }
        });
        this.htmlElement.media = this.htmlElement.audio;
        this._html_initMedia()
    }, _html_setVideo:function (b) {
        var f = this;
        a.each(this.formats, function (g, h) {
            if (f.html.support[h] && b[h]) {
                return f.status.src = b[h], f.status.format[h] = !0, f.status.formatType = h, !1
            }
        });
        if (this.status.nativeVideoControls) {
            this.htmlElement.video.poster = this._validString(b.poster) ? b.poster : ""
        }
        this.htmlElement.media = this.htmlElement.video;
        this._html_initMedia()
    }, _html_resetMedia:function () {
        this.htmlElement.media && (this.htmlElement.media.id === this.internal.video.id && !this.status.nativeVideoControls && this.internal.video.jq.css({width:"0px", height:"0px"}), this.htmlElement.media.pause())
    }, _html_clearMedia:function () {
        if (this.htmlElement.media) {
            this.htmlElement.media.src = "", this.htmlElement.media.load()
        }
    }, _html_load:function () {
        if (this.status.waitForLoad) {
            this.status.waitForLoad = !1, this.htmlElement.media.load()
        }
        clearTimeout(this.internal.htmlDlyCmdId)
    }, _html_play:function (g) {
        var f = this;
        this._html_load();
        this.htmlElement.media.play();
        if (!isNaN(g)) {
            try {
                this.htmlElement.media.currentTime = g
            } catch (h) {
                this.internal.htmlDlyCmdId = setTimeout(function () {
                    f.play(g)
                }, 100);
                return
            }
        }
        this._html_checkWaitForPlay()
    }, _html_pause:function (g) {
        var f = this;
        g > 0 ? this._html_load() : clearTimeout(this.internal.htmlDlyCmdId);
        this.htmlElement.media.pause();
        if (!isNaN(g)) {
            try {
                this.htmlElement.media.currentTime = g
            } catch (h) {
                this.internal.htmlDlyCmdId = setTimeout(function () {
                    f.pause(g)
                }, 100);
                return
            }
        }
        g > 0 && this._html_checkWaitForPlay()
    }, _html_playHead:function (g) {
        var f = this;
        this._html_load();
        try {
            if (typeof this.htmlElement.media.seekable === "object" && this.htmlElement.media.seekable.length > 0) {
                this.htmlElement.media.currentTime = g * this.htmlElement.media.seekable.end(this.htmlElement.media.seekable.length - 1) / 100
            } else {
                if (this.htmlElement.media.duration > 0 && !isNaN(this.htmlElement.media.duration)) {
                    this.htmlElement.media.currentTime = g * this.htmlElement.media.duration / 100
                } else {
                    throw"e"
                }
            }
        } catch (h) {
            this.internal.htmlDlyCmdId = setTimeout(function () {
                f.playHead(g)
            }, 100);
            return
        }
        this.status.waitForLoad || this._html_checkWaitForPlay()
    }, _html_checkWaitForPlay:function () {
        if (this.status.waitForPlay) {
            this.status.waitForPlay = !1, this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide(), this.status.video && (this.internal.poster.jq.hide(), this.internal.video.jq.css({width:this.status.width, height:this.status.height}))
        }
    }, _html_volume:function (b) {
        if (this.html.audio.available) {
            this.htmlElement.audio.volume = b
        }
        if (this.html.video.available) {
            this.htmlElement.video.volume = b
        }
    }, _html_mute:function (b) {
        if (this.html.audio.available) {
            this.htmlElement.audio.muted = b
        }
        if (this.html.video.available) {
            this.htmlElement.video.muted = b
        }
    }, _flash_setAudio:function (b) {
        var g = this;
        try {
            if (a.each(this.formats, function (h, j) {
                if (g.flash.support[j] && b[j]) {
                    switch (j) {
                        case"m4a":
                        case"fla":
                            g._getMovie().fl_setAudio_m4a(b[j]);
                            break;
                        case"mp3":
                            g._getMovie().fl_setAudio_mp3(b[j])
                    }
                    g.status.src = b[j];
                    g.status.format[j] = !0;
                    g.status.formatType = j;
                    return !1
                }
            }), this.options.preload === "auto") {
                this._flash_load(), this.status.waitForLoad = !1
            }
        } catch (f) {
            this._flashError(f)
        }
    }, _flash_setVideo:function (b) {
        var g = this;
        try {
            if (a.each(this.formats, function (h, j) {
                if (g.flash.support[j] && b[j]) {
                    switch (j) {
                        case"m4v":
                        case"flv":
                            g._getMovie().fl_setVideo_m4v(b[j])
                    }
                    g.status.src = b[j];
                    g.status.format[j] = !0;
                    g.status.formatType = j;
                    return !1
                }
            }), this.options.preload === "auto") {
                this._flash_load(), this.status.waitForLoad = !1
            }
        } catch (f) {
            this._flashError(f)
        }
    }, _flash_resetMedia:function () {
        this.internal.flash.jq.css({width:"0px", height:"0px"});
        this._flash_pause(NaN)
    }, _flash_clearMedia:function () {
        try {
            this._getMovie().fl_clearMedia()
        } catch (b) {
            this._flashError(b)
        }
    }, _flash_load:function () {
        try {
            this._getMovie().fl_load()
        } catch (b) {
            this._flashError(b)
        }
        this.status.waitForLoad = !1
    }, _flash_play:function (g) {
        try {
            this._getMovie().fl_play(g)
        } catch (f) {
            this._flashError(f)
        }
        this.status.waitForLoad = !1;
        this._flash_checkWaitForPlay()
    }, _flash_pause:function (g) {
        try {
            this._getMovie().fl_pause(g)
        } catch (f) {
            this._flashError(f)
        }
        if (g > 0) {
            this.status.waitForLoad = !1, this._flash_checkWaitForPlay()
        }
    }, _flash_playHead:function (g) {
        try {
            this._getMovie().fl_play_head(g)
        } catch (f) {
            this._flashError(f)
        }
        this.status.waitForLoad || this._flash_checkWaitForPlay()
    }, _flash_checkWaitForPlay:function () {
        if (this.status.waitForPlay) {
            this.status.waitForPlay = !1, this.css.jq.videoPlay.length && this.css.jq.videoPlay.hide(), this.status.video && (this.internal.poster.jq.hide(), this.internal.flash.jq.css({width:this.status.width, height:this.status.height}))
        }
    }, _flash_volume:function (g) {
        try {
            this._getMovie().fl_volume(g)
        } catch (f) {
            this._flashError(f)
        }
    }, _flash_mute:function (g) {
        try {
            this._getMovie().fl_mute(g)
        } catch (f) {
            this._flashError(f)
        }
    }, _getMovie:function () {
        return document[this.internal.flash.id]
    }, _checkForFlash:function (g) {
        var f = !1, j;
        if (window.ActiveXObject) {
            try {
                new ActiveXObject("ShockwaveFlash.ShockwaveFlash." + g), f = !0
            } catch (h) {
            }
        } else {
            navigator.plugins && navigator.mimeTypes.length > 0 && (j = navigator.plugins["Shockwave Flash"]) && navigator.plugins["Shockwave Flash"].description.replace(/.*\s(\d+\.\d+).*/, "$1") >= g && (f = !0)
        }
        return f
    }, _validString:function (b) {
        return b && typeof b === "string"
    }, _limitValue:function (g, f, h) {
        return g < f ? f : g > h ? h : g
    }, _urlNotSetError:function (b) {
        this._error({type:a.jPlayer.error.URL_NOT_SET, context:b, message:a.jPlayer.errorMsg.URL_NOT_SET, hint:a.jPlayer.errorHint.URL_NOT_SET})
    }, _flashError:function (b) {
        var f;
        f = this.internal.ready ? "FLASH_DISABLED" : "FLASH";
        this._error({type:a.jPlayer.error[f], context:this.internal.flash.swf, message:a.jPlayer.errorMsg[f] + b.message, hint:a.jPlayer.errorHint[f]});
        this.internal.flash.jq.css({width:"1px", height:"1px"})
    }, _error:function (b) {
        this._trigger(a.jPlayer.event.error, b);
        this.options.errorAlerts && this._alert("Error!" + (b.message ? "\n\n" + b.message : "") + (b.hint ? "\n\n" + b.hint : "") + "\n\nContext: " + b.context)
    }, _warning:function (b) {
        this._trigger(a.jPlayer.event.warning, e, b);
        this.options.warningAlerts && this._alert("Warning!" + (b.message ? "\n\n" + b.message : "") + (b.hint ? "\n\n" + b.hint : "") + "\n\nContext: " + b.context)
    }, _alert:function (b) {
        alert("jPlayer " + this.version.script + " : id='" + this.internal.self.id + "' : " + b)
    }, _emulateHtmlBridge:function () {
        var b = this;
        a.each(a.jPlayer.emulateMethods.split(/\s+/g), function (f, g) {
            b.internal.domNode[g] = function (h) {
                b[g](h)
            }
        });
        a.each(a.jPlayer.event, function (h, g) {
            var f = !0;
            a.each(a.jPlayer.reservedEvent.split(/\s+/g), function (k, j) {
                if (j === h) {
                    return f = !1
                }
            });
            f && b.element.bind(g + ".jPlayer.jPlayerHtml", function () {
                b._emulateHtmlUpdate();
                var j = document.createEvent("Event");
                j.initEvent(h, !1, !0);
                b.internal.domNode.dispatchEvent(j)
            })
        })
    }, _emulateHtmlUpdate:function () {
        var b = this;
        a.each(a.jPlayer.emulateStatus.split(/\s+/g), function (f, g) {
            b.internal.domNode[g] = b.status[g]
        });
        a.each(a.jPlayer.emulateOptions.split(/\s+/g), function (f, g) {
            b.internal.domNode[g] = b.options[g]
        })
    }, _destroyHtmlBridge:function () {
        var b = this;
        this.element.unbind(".jPlayerHtml");
        a.each((a.jPlayer.emulateMethods + " " + a.jPlayer.emulateStatus + " " + a.jPlayer.emulateOptions).split(/\s+/g), function (f, g) {
            delete b.internal.domNode[g]
        })
    }};
    a.jPlayer.error = {FLASH:"e_flash", FLASH_DISABLED:"e_flash_disabled", NO_SOLUTION:"e_no_solution", NO_SUPPORT:"e_no_support", URL:"e_url", URL_NOT_SET:"e_url_not_set", VERSION:"e_version"};
    a.jPlayer.errorMsg = {FLASH:"jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ", FLASH_DISABLED:"jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ", NO_SOLUTION:"No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.", NO_SUPPORT:"It is not possible to play any media format provided in setMedia() on this browser using your current options.", URL:"Media URL could not be loaded.", URL_NOT_SET:"Attempt to issue media playback commands, while no media url is set.", VERSION:"jPlayer " + a.jPlayer.prototype.version.script + " needs Jplayer.swf version " + a.jPlayer.prototype.version.needFlash + " but found "};
    a.jPlayer.errorHint = {FLASH:"Check your swfPath option and that Jplayer.swf is there.", FLASH_DISABLED:"Check that you have not display:none; the jPlayer entity or any ancestor.", NO_SOLUTION:"Review the jPlayer options: support and supplied.", NO_SUPPORT:"Video or audio formats defined in the supplied option are missing.", URL:"Check media URL is valid.", URL_NOT_SET:"Use setMedia() to set the media URL.", VERSION:"Update jPlayer files."};
    a.jPlayer.warning = {CSS_SELECTOR_COUNT:"e_css_selector_count", CSS_SELECTOR_METHOD:"e_css_selector_method", CSS_SELECTOR_STRING:"e_css_selector_string", OPTION_KEY:"e_option_key"};
    a.jPlayer.warningMsg = {CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ", CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.", CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.", OPTION_KEY:"The option requested in jPlayer('option') is undefined."};
    a.jPlayer.warningHint = {CSS_SELECTOR_COUNT:"Check your css selector and the ancestor.", CSS_SELECTOR_METHOD:"Check your method name.", CSS_SELECTOR_STRING:"Check your css selector is a string.", OPTION_KEY:"Check your option name."}
})(jQuery);
Airdroid.Summary = {};
Airdroid.Summary.Model = Backbone.Model.extend({url:null, defaults:{owner:"", model:"", osversion:"", counts:{music:"", app:"", sms:"", photo:"", video:"", ebook:"", contacts:""}, size:{music:"", sys_avail:"", sys_size:"", sd_avail:"", photo:"", video:"", sd_size:"", ebook:""}, websocket_port:"8888"}, initialize:function () {
    this.url = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/device/overview/?callback=?"
}, clear:function () {
    this.destroy();
    this.view.remove()
}});
Airdroid.Summary.View = Backbone.View.extend({el:"#summary", template:null, initialize:function () {
    var a = Airdroid.Util.GetTemplate("summary");
    this.template = _.template(a);
    _.bindAll(this, "render");
    this.model.fetch()
}, bindChange:function () {
    this.model.bind("change", this.render);
    this.model.view = this
}, render:function () {
    var n = this;
    if (!_.isUndefined(Airdroid.Cache.WorkSpaceModel)) {
        $("#summaryWidgetPhoneName").html(this.model.attributes.model);
        $("#summaryWidgetPhoneOS").html(this.model.attributes.osversion);
        Airdroid.Env.websocket_port = this.model.attributes.websocket_port;
        Airdroid.Socket.initSocket();
    }
    var l = this.model.toJSON();
    l.UsedLang = Airdroid.UsedLang.Summary;
    l.hostAddress = "http://" + Airdroid.Env.ConnectionAddress;
    $(this.el).html(this.template(l));
    if (this.model.get("support_sdcard") != 1) {
        $(".d_info_sd", this.el).hide();
        $("#summary .summary_container_c .device_capacity").css("top", "333px");
        $("#summaryWidgetPhoneSD").hide();
        $("#summaryWidgetPhoneMem").css("top", "91px")
    }
    var f = this.model.get("size");
    var m = f.sys_size;
    var c = f.sys_avail;
    var g = f.sd_size;
    var b = f.sd_avail;
    $("#sys_c_used", this.el).css("width", (((m - c) / m) * 460).toFixed(0) + "px").attr("title", bytesToSize(m - c));
    $("#sys_c_avail", this.el).css("width", ((c / m) * 460).toFixed(0) + "px").attr("title", bytesToSize(c));
    $("#summaryWidget_sys_c_used").css("width", (((m - c) / m) * 202).toFixed(0) + "px");
    $("#summaryWidget_sys_c_avail").css("width", ((c / m) * 202).toFixed(0) + "px");
    $("#summaryWidget_sys_info").html(bytesToSize(m - c) + " / " + bytesToSize(m));
    $("#summaryWidget_sd_c_used").css("width", (((g - b) / g) * 202).toFixed(0) + "px");
    $("#summaryWidget_sd_c_avail").css("width", (b / g * 202).toFixed(0) + "px");
    $("#summaryWidget_sd_info").html(bytesToSize(g - b) + " / " + bytesToSize(g));
    var j = Math.round(f.music / g * 460);
    if (j < 13) {
        j = 13
    }
    $("#sd_c_music", this.el).css("width", j + "px");
    var a = Math.round(f.video / g * 460);
    if (a < 13) {
        a = 13
    }
    $("#sd_c_video", this.el).css("width", a + "px");
    var e = Math.round(f.photo / g * 460);
    if (e < 13) {
        e = 13
    }
    $("#sd_c_photo", this.el).css("width", e + "px");
    var k = Math.round((g - b) / g * 460) - j - a - e - 24;
    if (k < 13) {
        k = 13
    }
    $("#sd_c_used", this.el).css("width", k + "px");
    $("#sd_c_avail", this.el).css("width", "0px");
    $("#sd_c_music", this.el).attr("title", bytesToSize(f.music));
    $("#sd_c_video", this.el).attr("title", bytesToSize(f.video));
    $("#sd_c_photo", this.el).attr("title", bytesToSize(f.photo));
    $("#sd_c_used", this.el).attr("title", bytesToSize(f.sd_size - b - f.music - f.video - f.photo));
    $("#d_info_music", this.el).attr("title", bytesToSize(f.music));
    $("#d_info_video", this.el).attr("title", bytesToSize(f.video));
    $("#d_info_photo", this.el).attr("title", bytesToSize(f.photo));
    $("#d_info_ebook", this.el).attr("title", bytesToSize(f.ebook));
    $("#d_info_other", this.el).attr("title", bytesToSize(f.sd_size - b - f.music - f.video - f.photo));
    $(".nav_item > a").hover(function () {
        $(".nav_dec", $(this).parent()).addClass("nav_current")
    }, function () {
        $(".nav_dec", $(this).parent()).removeClass("nav_current")
    });
    $(".nav_name").hover(function () {
        $("> a", $(this).parent().parent()).addClass("ahover");
        $(this).parent().addClass("nav_current")
    }, function () {
        $("> a", $(this).parent().parent()).removeClass("ahover");
        $(this).parent().removeClass("nav_current")
    });
    $(window).trigger("resize");
    $(".nav_apps > a").unbind("click");
    $(".nav_apps > a").bind("click", function () {
        $('.destopicon[href="#applications"]').trigger("click");
        return false
    });
    $(".nav_apps .nav_name_l").unbind("click");
    $(".nav_apps .nav_name_l").bind("click", function () {
        $('.destopicon[href="#applications"]').trigger("click");
        return false
    });
    $(".nav_contacts > a").unbind("click");
    $(".nav_contacts > a").bind("click", function () {
        $('.destopicon[href="#contacts"]').trigger("click");
        return false
    });
    $(".nav_contacts .nav_name_l").unbind("click");
    $(".nav_contacts .nav_name_l").bind("click", function () {
        $('.destopicon[href="#contacts"]').trigger("click");
        return false
    });
    $(".nav_messages > a").unbind("click");
    $(".nav_messages > a").bind("click", function () {
        $('.destopicon[href="#smslist"]').trigger("click");
        return false
    });
    $(".nav_messages .nav_name_l").unbind("click");
    $(".nav_messages .nav_name_l").bind("click", function () {
        $('.destopicon[href="#smslist"]').trigger("click");
        return false
    });
    $(".nav_music > a").unbind("click");
    $(".nav_music > a").bind("click", function () {
        $('.destopicon[href="#music"]').trigger("click");
        return false
    });
    $(".nav_music .nav_name_l").unbind("click");
    $(".nav_music .nav_name_l").bind("click", function () {
        $('.destopicon[href="#music"]').trigger("click");
        return false
    });
    $(".nav_video > a").unbind("click");
    $(".nav_video > a").bind("click", function () {
        showDelayMask("Coming soon...", $("#summary"), 1600);
        return false
    });
    $(".nav_video .nav_name_l").unbind("click");
    $(".nav_video .nav_name_l").bind("click", function () {
        showDelayMask("Coming soon...", $("#summary"), 1600);
        return false
    });
    $(".nav_books > a").unbind("click");
    $(".nav_books > a").bind("click", function () {
        showDelayMask("Coming soon...", $("#summary"), 1600);
        return false
    });
    $(".nav_books .nav_name_l").unbind("click");
    $(".nav_books .nav_name_l").bind("click", function () {
        showDelayMask("Coming soon...", $("#summary"), 1600);
        return false
    });
    $(".nav_photos > a").unbind("click");
    $(".nav_photos > a").bind("click", function () {
        $('.destopicon[href="#photo"]').trigger("click");
        return false
    });
    $(".nav_photos .nav_name_l").unbind("click");
    $(".nav_photos .nav_name_l").bind("click", function () {
        $('.destopicon[href="#photo"]').trigger("click");
        return false
    });
    var h = {battery:this.model.get("battery"), wifi_signal:this.model.get("wifi_signal"), batterycharging:this.model.get("batterycharging"), gsm_signal:this.model.get("gsm_signal")};
    Airdroid.Cache.WorkSpaceView.changeDeviceStatus(h);
    $("#summary").draggable({zIndex:10000, stop:function () {
        $(this).css("z-index", getTopperZIndex())
    }}).click(function () {
        $(this).css("z-index", getTopperZIndex())
    });
    $(".summary_top_x").click(function () {
        n.model.fetch();
        $.publish("/e/t/bid", ["removesp", "summary"]);
        return false
    });
    $(".summary_top__").click(function () {
        $.publish("/e/t/bid", ["minsp", "summary"]);
        return false
    });
    return this
}, clear:function () {
    this.model.clear()
}});
var CommonDBLogic = Core.extend({_hostAddress:"", $construct:function (a) {
    this._hostAddress = a
}, MarkReadedByThreadId:function (b) {
    if (b == undefined) {
        return
    }
    var a = this._hostAddress + "/sdctl/sms/thread/readed/" + b + "?callback=?";
    ajaxHelper(a, function (c) {
        c = unescape(c);
        if (c.err == undefined) {
            $.publish("[to:ui]/event/sms/markreaded/bythreadid/suc", [b])
        }
    }, function () {
        NetworkError()
    })
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:db]/event/sms/markreaded/bythreadid", function (b) {
        a.MarkReadedByThreadId(b)
    })
}});
12;
var NewContactUILogic = Core.extend({_tpl_new_contact:null, _tpl_new_contact_phone:null, _window_name:"new-contact", $construct:function () {
    this._tpl_new_contact = _.template($("#tpl-new-contact").html());
    $(".new-contact-phone").live("keydown", function (a) {
        $(this).closest(".new-contact-phone-item").find(".new-contact-phone-tip").addClass("hide");
        if (a.keyCode == 46 || a.keyCode == 8) {
        } else {
            if ((a.keyCode < 48 || a.keyCode > 57) && (a.keyCode < 96 || a.keyCode > 105)) {
                a.preventDefault()
            }
        }
    })
}, HaveWindow:function (a) {
    if ($("#w_" + a).length == 1) {
        return true
    }
    return false
}, ShowMe:function (h, g) {
    var a = this;
    if (this.HaveWindow(this._window_name)) {
        $("#w_" + this._window_name).show().css("z-index", getTopperZIndex() + 2).find(".new-contact-name").focus();
        a.Clear();
        if (h != undefined && h != "") {
            $("#w_" + this._window_name).find(".new-contact-name").val(h)
        }
        if (g != undefined && g != "") {
            $("#w_" + this._window_name).find(".new-contact-phone").eq(0).val(g)
        }
    } else {
        var f = "http://" + Airdroid.Env.ConnectionAddress;
        var c = $(a._tpl_new_contact({UsedLang:Airdroid.UsedLang.SMS}));
        c.appendTo($("#main_container"));
        Windownize(c, {title:Airdroid.UsedLang.SMS._module_name_new_contact, icon:"ui/theme/default/images/icon_contacts_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_contacts_80.png*/, minWidth:400, minHeight:400, disabled:true, resize:function (n, m) {
            var l = m.helper;
            var k = l.width() - 23;
            var j = l.height() - 46
        }});
        var e = c.closest(".window");
        e.find(".window-o").remove();
        e.find(".window-_").remove();
        WindowDisableResize(e);
        center(e);
        $("#w_" + this._window_name).show().css("z-index", getTopperZIndex() + 2);
        e.css("height", e.find("#new-contact").height() + 478 - 432 + "px");
        if (h != undefined && h != "") {
            c.find(".new-contact-name").val(h)
        }
        if (g != undefined && g != "") {
            c.find(".new-contact-phone").eq(0).val(g)
        }
        e.find(".new-contact-name").focus();
        var b = new NewContactJSLogic(f);
        b.StartListen();
        DisableButton($("#new-contact .new-contact-btn-create"));
        $.publish("[to:db]/event/newcontact/group", []);
        $("#new-contact .new-contact-btn-cancel").click(function () {
            $(this).closest(".window").find(".window-x").trigger("click")
        });
        a._tpl_new_contact_phone = $(".new-contact-phone-item").clone();
        $("#new-contact .new-contact-phone-add").live("click", function () {
            var k = $(this).closest(".new-contact-phone-container").find(".new-contact-phone-item:last");
            var j = a._tpl_new_contact_phone.clone();
            j.find(".new-contact-phone-del").removeClass("hide");
            k.after(j);
            $(".new-contact-phone-item").find(".new-contact-phone-del").attr("disabled", false);
            $(".new-contact-phone-item").find(".new-contact-phone-add").addClass("hide");
            $(".new-contact-phone-item:last").find(".new-contact-phone-add").removeClass("hide");
            e.css("height", e.find("#new-contact").height() + 478 - 432 + "px")
        });
        $("#new-contact .new-contact-phone-del").live("click", function () {
            var j = $(this).closest(".new-contact-phone-item");
            j.remove();
            if ($(".new-contact-phone-item").size() == 1) {
                $(".new-contact-phone-item").find(".new-contact-phone-del").attr("disabled", true)
            }
            $(".new-contact-phone-item").find(".new-contact-phone-add").addClass("hide");
            $(".new-contact-phone-item:last").find(".new-contact-phone-add").removeClass("hide");
            e.css("height", e.find("#new-contact").height() + 478 - 432 + "px")
        });
        $(".new-contact-name").bind("keyup", function () {
            $(".new-contact-name-tip").addClass("hide")
        });
        $("#new-contact .new-contact-btn-create").click(function () {
            var k = this;
            var m = $.trim($("#new-contact .new-contact-name").val());
            var n = $.trim($("#new-contact .new-contact-note").val());
            var j = [];
            var o = true;
            $("#new-contact .new-contact-phone-item").each(function () {
                j.push($.trim($(this).find(".new-contact-phone").val()));
                if ($.trim($(this).find(".new-contact-phone").val()) == "") {
                    $(this).find(".new-contact-phone-tip").removeClass("hide");
                    o = false
                }
            });
            j = _.compact(j);
            if (m == "") {
                $(".new-contact-name-tip").removeClass("hide")
            }
            if (m == "" || o == false || j.length == 0) {
                return false
            } else {
                var q = {};
                q.id = 1;
                q.name = {mode:1, display_name:m};
                q.phones = [];
                _.each(j, function (r) {
                    q.phones.push({mode:1, data:encodeURI($.trim(r))})
                });
                q.notes = [
                    {mode:1, data:encodeURI($.trim($("#new-contact .new-contact-note").val()))}
                ];
                var p = parseInt($("#new-contact .new-contact-group-selector option:selected").val());
                var l = $("#new-contact .new-contact-group-selector option:selected").attr("gid");
                if (p != -1) {
                    q.groups = [
                        {mode:1, group_id:p}
                    ]
                } else {
                    l = "-1"
                }
                DisableButton($(k));
                $(k).attr("disabled", true);
                $.publish("[to:db]/event/newcontact/create", [q, l])
            }
        })
    }
}, FreshGroupSelector:function (e, a) {
    $("#new-contact .new-contact-group").html("<select class='new-contact-group-selector'><option value='-1'>Select a custom group...</option></select>");
    if (e.length == 0) {
    } else {
        var b = "<option value='{1}' gid='{2}'>{0}</option>";
        var c = "";
        _.each(e, function (f) {
            c += b.format(f.group_name, f._id, f.title)
        });
        if (!_.isUndefined(a) && a == true) {
            $("#new-contact .new-contact-group select").append(c)
        } else {
            $("#new-contact .new-contact-group select").append(c)
        }
    }
    EnableButton($("#new-contact .new-contact-btn-create"))
}, Clear:function () {
    $("#new-contact .new-contact-name").val("");
    $("#new-contact .new-contact-note").val("");
    $("#new-contact .new-contact-name-tip").addClass("hide");
    $("#new-contact .new-contact-phone-tip").addClass("hide");
    $("#new-contact .new-contact-group-selector option").eq(0).attr("selected", true);
    var b = $("#new-contact .new-contact-phone-item").size() - 1;
    var a;
    for (a = 0; a < b; a++) {
        $("#new-contact .new-contact-phone-del").eq(0).trigger("click")
    }
    $("#new-contact .new-contact-phone").val("")
}, CreateContactSuc:function () {
    var a = this;
    showDelayMask(Airdroid.UsedLang.SMS._msgbox_new_contact_suc, $("#w_new-contact"), null, null, function () {
        a.Clear();
        $.publish("/e/t/bid", ["remove", a._window_name, {name:"New Contact", iconUrl:"ui/theme/default/images/icon_contacts_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_contacts_80.png*/}, true]);
        EnableButton($("#new-contact .new-contact-btn-create"));
        $.publish("[to:ui]/event/im/sprefresh", [])
    })
}, CreateContactFail:function () {
    showMsgBox(Airdroid.UsedLang.SMS._msgbox_new_contact_fail, function () {
        EnableButton($("#new-contact .new-contact-btn-create"))
    });
    this.Clear()
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:ui]/event/newcontact/show", function (b, c) {
        a.ShowMe(b, c)
    });
    $.subscribe("[to:ui]/event/newcontact/create/suc", function () {
        a.CreateContactSuc()
    });
    $.subscribe("[to:ui]/event/newcontact/create/fail", function () {
        a.CreateContactFail()
    });
    $.subscribe("[to:db]/event/newcontact/group/suc", function (b) {
        a.FreshGroupSelector(b)
    });
    $.subscribe("[to:db]/event/newcontact/group/fail", function (b) {
        showMsgBox(Airdroid.UsedLang.SMS._common_network_error)
    });
    $.subscribe("[to:ui]/event/group/new/suc", function (b) {
        var b = [
            {group_name:b.group_name, _id:b.group_id}
        ];
        a.FreshGroupSelector(b, true)
    })
}});
var NewContactJSLogic = Core.extend({_host_address:"", $construct:function (a) {
    this._host_address = a
}, CreateNewContact:function (c, b) {
    var a = this;
    var e = this._host_address + '/sdctl/contacts/edit/?params={"content":"' + encode64(encodeURIComponent(JSON.stringify(c))) + '"}&callback=?';
    ajaxHelper(e, function (f) {
        f = unescape(f);
        if (!_.isUndefined(f.result) && f.result == "ok") {
            $.publish("[to:ui]/event/newcontact/create/suc", [c, b]);
            return false
        }
        $.publish("[to:ui]/event/newcontact/create/fail", [])
    }, function (f) {
        NetworkError()
    })
}, ReadOriGroup:function () {
    var a = this._host_address + "/sdctl/contacts/orig_grouplist/?callback=?";
    ajaxHelper(a, function (b) {
        b = unescape(b);
        if (_.isEmpty(b.err)) {
            $.publish("[to:db]/event/newcontact/group/suc", [b.list])
        } else {
            $.publish("[to:db]/event/newcontact/group/fail", [failData])
        }
    }, function (b) {
        NetworkError()
    })
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:db]/event/newcontact/create", function (c, b) {
        a.CreateNewContact(c, b)
    });
    $.subscribe("[to:db]/event/newcontact/group", function () {
        a.ReadOriGroup()
    })
}});
var EditContactUILogic = Core.extend({_tpl_edit_contact:null, _tpl_edit_contact_phone:null, _current_contact_data:null, _window_name:"edit-contact", $construct:function () {
    this._tpl_edit_contact = _.template($("#tpl-edit-contact").html());
    $(".edit-contact-phone").live("keydown", function (a) {
        $(this).closest(".edit-contact-phone-item").find(".edit-contact-phone-tip").addClass("hide");
        if (a.keyCode == 46 || a.keyCode == 8) {
        } else {
            if ((a.keyCode < 48 || a.keyCode > 57) && (a.keyCode < 96 || a.keyCode > 105)) {
                a.preventDefault()
            }
        }
    })
}, HaveWindow:function (a) {
    if ($("#w_" + a).length == 1) {
        return true
    }
    return false
}, ShowMe:function () {
    var a = this;
    if (this.HaveWindow(this._window_name)) {
        $("#w_" + this._window_name).show().css("z-index", getTopperZIndex() + 2).find(".edit-contact-name").focus();
        DisableButton($("#edit-contact .edit-contact-btn-create"));
        a.Clear()
    } else {
        var f = "http://" + Airdroid.Env.ConnectionAddress;
        var c = $(a._tpl_edit_contact({UsedLang:Airdroid.UsedLang.SMS}));
        c.appendTo($("#main_container"));
        Windownize(c, {title:Airdroid.UsedLang.SMS._module_name_edit_contact, icon:"ui/theme/default/images/icon_contacts_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_contacts_80.png*/, minWidth:400, minHeight:400, disabled:true, resize:function (l, k) {
            var j = k.helper;
            var h = j.width() - 23;
            var g = j.height() - 46
        }});
        var e = c.closest(".window");
        e.find(".window-o").remove();
        e.find(".window-_").remove();
        e.find(".window_x").click(function () {
            $("#edit-contact").removeAttr("cid")
        });
        WindowDisableResize(e);
        center(e);
        $("#w_" + this._window_name).show().css("z-index", getTopperZIndex() + 2);
        e.css("height", e.find("#edit-contact").height() + 478 - 432 + "px");
        e.find(".edit-contact-name").focus();
        var b = new EditContactJSLogic(f);
        b.StartListen();
        DisableButton($("#edit-contact .edit-contact-btn-create"));
        $.publish("[to:db]/event/editcontact/group", []);
        $("#edit-contact .edit-contact-btn-cancel").click(function () {
            $(this).closest(".window").find(".window-x").trigger("click")
        });
        a._tpl_edit_contact_phone = $(".edit-contact-phone-item").clone();
        $("#edit-contact .edit-contact-phone-add").live("click", function () {
            var h = $(this).closest(".edit-contact-phone-container").find(".edit-contact-phone-item:last");
            var g = a._tpl_edit_contact_phone.clone();
            g.find(".edit-contact-phone-del").removeClass("hide");
            h.after(g);
            $(".edit-contact-phone-item").find(".edit-contact-phone-del").attr("disabled", false);
            $(".edit-contact-phone-item").find(".edit-contact-phone-add").addClass("hide");
            $(".edit-contact-phone-item:last").find(".edit-contact-phone-add").removeClass("hide");
            e.css("height", e.find("#edit-contact").height() + 478 - 432 + "px")
        });
        $("#edit-contact .edit-contact-phone-del").live("click", function () {
            var g = $(this).closest(".edit-contact-phone-item");
            g.remove();
            if ($(".edit-contact-phone-item").size() == 1) {
                $(".edit-contact-phone-item").find(".edit-contact-phone-del").attr("disabled", true)
            }
            $(".edit-contact-phone-item").find(".edit-contact-phone-add").addClass("hide");
            $(".edit-contact-phone-item:last").find(".edit-contact-phone-add").removeClass("hide");
            e.css("height", e.find("#edit-contact").height() + 478 - 432 + "px")
        });
        $(".edit-contact-name").bind("keyup", function () {
            $(".edit-contact-name-tip").addClass("hide")
        });
        $("#edit-contact .edit-contact-btn-create").click(function () {
            var p = this;
            if (_.isEmpty(a._current_contact_data)) {
                showMsgBox(Airdroid.UsedLang.SMS._msgbox_no_edit_contact_info_cannot_edit);
                return false
            }
            var h = $.trim($("#edit-contact .edit-contact-name").val());
            var o = $.trim($("#edit-contact .edit-contact-note").val());
            var g = [];
            var j = true;
            $("#edit-contact .edit-contact-phone-item").each(function () {
                g.push($.trim($(this).find(".edit-contact-phone").val()));
                if ($.trim($(this).find(".edit-contact-phone").val()) == "") {
                    $(this).find(".edit-contact-phone-tip").removeClass("hide");
                    j = false
                }
            });
            g = _.compact(g);
            if (h == "") {
                $(".edit-contact-name-tip").removeClass("hide")
            }
            if (h == "" || j == false || g.length == 0) {
                return false
            } else {
                var n = a._current_contact_data;
                var m = {};
                m.id = n.id;
                m.mode = 2;
                m.name = {mode:2, display_name:h, id:n.name.id};
                m.phones = [];
                var k = n.notes[0] != undefined;
                if (k) {
                    m.notes = [
                        {mode:2, id:n.notes[0].id, data:encodeURI($.trim($("#edit-contact .edit-contact-note").val()))}
                    ]
                } else {
                    m.notes = [
                        {mode:1, data:encodeURI($.trim($("#edit-contact .edit-contact-note").val()))}
                    ]
                }
                if (g.length < n.phones.length) {
                    for (var l = 0; l < g.length; l++) {
                        m.phones[l] = {id:n.phones[l].id, data:n.phones[l].data, mode:2, type:parseInt($("#edit-contact .phone-type").eq(l).val())}
                    }
                    for (var l = g.length; l < n.phones.length; l++) {
                        m.phones[l] = {mode:3, id:n.phones[l].id}
                    }
                } else {
                    if (g.length > n.phones.length) {
                        for (var l = 0; l < n.phones.length; l++) {
                            m.phones[l] = {id:n.phones[l].id, data:n.phones[l].data, mode:2, type:parseInt($("#edit-contact .phone-type").eq(l).val())}
                        }
                        for (var l = n.phones.length; l < g.length; l++) {
                            m.phones[l] = {};
                            m.phones[l].mode = 1;
                            m.phones[l].type = parseInt($("#edit-contact .phone-type").eq(l).val());
                            m.phones[l].data = g[l]
                        }
                    } else {
                        if (g.length == n.phones.length) {
                            for (var l = 0; l < g.length; l++) {
                                m.phones[l] = {};
                                m.phones[l].id = n.phones[l].id;
                                m.phones[l].mode = 2;
                                m.phones[l].type = parseInt($("#edit-contact .phone-type").eq(l).val());
                                m.phones[l].data = g[l]
                            }
                        }
                    }
                }
                DisableButton($(p));
                $.publish("[to:db]/event/editcontact/create", [m])
            }
        })
    }
}, FreshGroupSelector:function (e, a) {
    $("#edit-contact .edit-contact-group").html("<select class='edit-contact-group-selector' disabled='disabled'><option value='-1'>Select a custom group...</option></select>");
    if (e.length == 0) {
    } else {
        var b = "<option value='{1}' gid='{2}'>{0}</option>";
        var c = "";
        _.each(e, function (f) {
            c += b.format(f.group_name, f._id, f.title)
        });
        if (!_.isUndefined(a) && a == true) {
            $("#edit-contact .edit-contact-group select").append(c)
        } else {
            $("#edit-contact .edit-contact-group select").append(c)
        }
    }
}, Clear:function () {
    $("#edit-contact").removeAttr("cid");
    $("#edit-contact .edit-contact-name").val("");
    $("#edit-contact .edit-contact-note").val("");
    $("#edit-contact .edit-contact-name-tip").addClass("hide");
    $("#edit-contact .edit-contact-phone-tip").addClass("hide");
    $("#edit-contact .edit-contact-group-selector option").eq(0).attr("selected", true);
    var b = $("#edit-contact .edit-contact-phone-item").size() - 1;
    var a;
    for (a = 0; a < b; a++) {
        $("#edit-contact .edit-contact-phone-del").eq(0).trigger("click")
    }
    $("#edit-contact .edit-contact-phone").val("")
}, CreateContactSuc:function () {
    var a = this;
    showDelayMask(Airdroid.UsedLang.SMS._msgbox_edit_contact_suc, $("#w_edit-contact"), null, null, function () {
        a.Clear();
        $.publish("/e/t/bid", ["remove", a._window_name, {name:"Edit Contact", iconUrl:"ui/theme/default/images/icon_contacts_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_contacts_80.png*/}, true]);
        EnableButton($("#edit-contact .edit-contact-btn-create"));
        $.publish("[to:ui]/event/im/sprefresh", [])
    })
}, CreateContactFail:function () {
    showMsgBox(Airdroid.UsedLang.SMS._msgbox_edit_contact_fail, function () {
        EnableButton($("#edit-contact .edit-contact-btn-create"))
    });
    this.Clear()
}, FullfillContactInfoWithData:function (e) {
    this._current_contact_data = e;
    $("#edit-contact").attr("cid", e.id);
    $("#edit-contact .edit-contact-name").val(e.name.display_name);
    $("#edit-contact .edit-contact-note").val(e.notes[0] != undefined ? e.notes[0].data : "");
    if (!_.isEmpty(e.groups)) {
        _.each(e.groups, function (h) {
            $('#edit-contact .edit-contact-group-selector option[value="' + h.group_id + '"]').attr("selected", true)
        })
    }
    if (!_.isEmpty(e.phones)) {
        var b = e.phones[0];
        var g = $("#edit-contact .edit-contact-phone-item").eq(0);
        g.find('.phone-type option[value="' + b.type + '"]').attr("selected", true);
        g.find(".edit-contact-phone").val(b.data);
        if (e.phones.length > 1) {
            for (var a = 1; a < e.phones.length; a++) {
                $("#edit-contact .edit-contact-phone-add").eq(0).trigger("click");
                var f = e.phones[a];
                var c = $("#edit-contact .edit-contact-phone-item").eq(a);
                c.find('.phone-type option[value="' + f.type + '"]').attr("selected", true);
                c.find(".edit-contact-phone").val(f.data)
            }
        }
    }
    EnableButton($("#edit-contact .edit-contact-btn-create"))
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:ui]/event/editcontact/show", function () {
        a.ShowMe()
    });
    $.subscribe("[to:ui]/event/editcontact/create/suc", function () {
        a.CreateContactSuc()
    });
    $.subscribe("[to:ui]/event/editcontact/create/fail", function () {
        a.CreateContactFail()
    });
    $.subscribe("[to:db]/event/editcontact/group/suc", function (b) {
        a.FreshGroupSelector(b)
    });
    $.subscribe("[to:db]/event/editcontact/group/fail", function (b) {
        showMsgBox(Airdroid.UsedLang.SMS._common_network_error)
    });
    $.subscribe("[to:ui]/event/group/edit/suc", function (b) {
        var b = [
            {group_name:b.group_name, _id:b.group_id}
        ];
        a.FreshGroupSelector(b, true)
    });
    $.subscribe("[to:ui]/event/editcontact/load/byid", function (b) {
        $.publish("[to:db]/event/editcontact/load/byid", [b])
    });
    $.subscribe("[to:ui]/event/editcontact/load/byid/suc", function (c, b) {
        a.Clear();
        a.FullfillContactInfoWithData(b)
    });
    $.subscribe("[to:ui]/event/editcontact/load/byid/fail", function (b) {
        showMsgBox(Airdroid.UsedLang.SMS._msgbox_read_contact_info_fail, function () {
            $("#w_" + a._window_name).find(".window-x").trigger("click")
        })
    });
    $.subscribe("[to:ui]/event/editcontact/load/bynumber", function (b) {
        $.publish("[to:db]/event/editcontact/load/bynumber", [b])
    });
    $.subscribe("[to:ui]/event/editcontact/load/bynumber/suc", function (b, c) {
        a.Clear();
        a.FullfillContactInfoWithData(c)
    });
    $.subscribe("[to:ui]/event/editcontact/load/bynumber/fail", function (b) {
        showMsgBox(Airdroid.UsedLang.SMS._msgbox_read_contact_info_fail, function () {
            $("#w_" + a._window_name).find(".window-x").trigger("click")
        })
    })
}});
var EditContactJSLogic = Core.extend({_host_address:"", $construct:function (a) {
    this._host_address = a
}, CreateNewContact:function (b) {
    var a = this;
    var c = this._host_address + '/sdctl/contacts/edit/?params={"content":"' + encode64(encodeURIComponent(JSON.stringify(b))) + '"}&callback=?';
    ajaxHelper(c, function (e) {
        e = unescape(e);
        if (!_.isUndefined(e.result) && e.result == "ok") {
            $.publish("[to:ui]/event/editcontact/create/suc", [b]);
            return false
        }
        $.publish("[to:ui]/event/editcontact/create/fail", [])
    }, function (e) {
        NetworkError()
    })
}, ReadOriGroup:function () {
    var a = this._host_address + "/sdctl/contacts/orig_grouplist/?callback=?";
    ajaxHelper(a, function (b) {
        b = unescape(b);
        if (_.isEmpty(b.err)) {
            $.publish("[to:db]/event/editcontact/group/suc", [b.list])
        } else {
            $.publish("[to:db]/event/editcontact/group/fail", [failData])
        }
    }, function (b) {
        NetworkError()
    })
}, ReadContactInfoById:function (b) {
    var a = this._host_address + "/sdctl/contacts/detail/" + b + "?callback=?";
    ajaxHelper(a, function (c) {
        c = unescape(c);
        if (_.isEmpty(c.err)) {
            $.publish("[to:ui]/event/editcontact/load/byid/suc", [b, c])
        } else {
            $.publish("[to:ui]/event/editcontact/load/byid/fail", [b])
        }
    }, function (c) {
        NetworkError()
    })
}, ReadContactInfoByNumber:function (a) {
    var b = this._host_address + "/sdctl/contacts/detail/bynumber/?number=" + a + "&callback=?";
    ajaxHelper(b, function (c) {
        c = unescape(c);
        if (_.isUndefined(c.err) && c.list.length == 1) {
            c = c.list[0]
        } else {
            if (_.isUndefined(c.err) && c.list.length > 1) {
                c = c.list[0];
                _.each(c.list, function (e) {
                    if (e.name.display_name == name) {
                        c = e
                    }
                })
            } else {
                if (_.isUndefined(c.err) && c.list.length == 0) {
                    $.publish("[to:ui]/event/editcontact/load/bynumber/fail", [a]);
                    return false
                } else {
                    if (!_.isUndefined(c.err)) {
                        $.publish("[to:ui]/event/editcontact/load/bynumber/fail", [a]);
                        return false
                    }
                }
            }
        }
        $.publish("[to:ui]/event/editcontact/load/bynumber/suc", [a, c])
    }, function (c) {
        NetworkError()
    })
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:db]/event/editcontact/create", function (b) {
        a.CreateNewContact(b)
    });
    $.subscribe("[to:db]/event/editcontact/group", function () {
        a.ReadOriGroup()
    });
    $.subscribe("[to:db]/event/editcontact/load/byid", function (b) {
        a.ReadContactInfoById(b)
    });
    $.subscribe("[to:db]/event/editcontact/load/bynumber", function (b) {
        a.ReadContactInfoByNumber(b)
    })
}});
Airdroid.ContactsListQueryList = [];
Airdroid.ContactsListQueryAgain = false;
var ContactDb = Core.extend({_hostAddress:"", _queryStringTemplate:{GroupQueryString:"/sdctl/contacts/grouplist/?callback=?", ContactsByGidQueryString:"/sdctl/contacts/group/{0}?pcount={1}&page={2}&callback=?", ContactInfo:"/sdctl/contacts/detail/{0}?callback=?"}, _dbSetting:{lazyLoadMathArray:{page:[1, 2, 2, 2, 2, 2, 2, 2, 2], pageSize:[8, 8, 16, 32, 64, 128, 256, 512, 1024], count:[8, 16, 32, 64, 128, 256, 512, 1024, 2048]}}, _localCache:{ContactsCache:{}, HelperCache:{ContactsSearch:[]}}, IGetQueryCommand:function () {
    var a = {Group:this._hostAddress + this._queryStringTemplate.GroupQueryString, ContactsByGid:this._hostAddress + this._queryStringTemplate.ContactsByGidQueryString};
    return a
}, $construct:function (a) {
    if (a == undefined || a.toString().length == 0) {
        throw"[hostAddress@Undefined/Empty]"
    } else {
        this._hostAddress = a
    }
}, GetAllGroup:function (c, b, a) {
    var f = this.IGetQueryCommand().Group;
    var e = _.uniqueId("groupQuery");
    Airdroid.ContactsListQueryList.push(e);
    ajaxHelper(f, function (g) {
        g = unescape(g);
        oriData = g.list;
        g = [];
        _.each(oriData, function (h) {
            if (h.group_id != "all") {
                g.push({id:h.group_id, name:h.group_name, count:h.group_count})
            }
        });
        if (_.isFunction(c)) {
            c(g)
        }
    }, function (g) {
        NetworkError();
        Airdroid.ContactsListQueryList = _.reject(Airdroid.ContactsListQueryList, function (h) {
            return h == e
        });
        if (_.isFunction(b)) {
            b(data)
        }
    }, function (g) {
        Airdroid.ContactsListQueryList = _.reject(Airdroid.ContactsListQueryList, function (h) {
            return h == e
        });
        if (_.isFunction(a)) {
            a(g)
        }
    })
}, GetPartialContactsByGid:function (f, b, j, c, e) {
    var h = _.uniqueId("partContactQuery");
    Airdroid.ContactsListQueryList.push(h);
    var g = false;
    var k = this;
    var a = this.IGetQueryCommand().ContactsByGid.format(f, this._dbSetting.lazyLoadMathArray.pageSize[b - 1], this._dbSetting.lazyLoadMathArray.page[b - 1]);
    ajaxHelper(a, function (p) {
        p = unescape(p);
        g = p.count - k._dbSetting.lazyLoadMathArray.count[b - 1] > 0;
        oriData = p.list;
        p = [];
        var n = "";
        _.each(oriData, function (u) {
            if (_.isEmpty(u.phone)) {
                n = "ui/theme/default/images/contact30X30.jpg.png"
                /*tpa=http://192.168.119.101:8888/ui/theme/default/images/contact30X30.jpg*/
            } else {
                n = k._hostAddress + "/sdctl/contacts/image/bynumber/?number=" + u.phone.split(",")[0]
            }
            p.push({id:u.id, name:u.name, phone:u.phone, icon:n});
            k._localCache.HelperCache.ContactsSearch.push({id:u.id, name:u.name, phone:u.phone})
        });
        if (_.isFunction(j)) {
            if (g) {
                j(f, p, {isEnd:false, nextStep:b + 1})
            } else {
                var s = k._localCache.HelperCache.ContactsSearch;
                var t = [], o = {};
                try {
                    for (var q = 0, m = s.length; q < m; q++) {
                        var l = s[q].id;
                        if (!o[l]) {
                            o[l] = true;
                            t.push(s[q])
                        }
                    }
                } catch (r) {
                    t = s
                }
                k._localCache.HelperCache.ContactsSearch = t;
                $.publish("[to:ui]/e/ct/srb", [k._localCache.HelperCache.ContactsSearch]);
                j(f, p, {isEnd:true})
            }
        }
    }, function (l) {
        NetworkError();
        Airdroid.ContactsListQueryList = _.reject(Airdroid.ContactsListQueryList, function (m) {
            return m == h
        });
        if (_.isFunction(c)) {
            c(data)
        }
    }, function (l) {
        Airdroid.ContactsListQueryList = _.reject(Airdroid.ContactsListQueryList, function (m) {
            return m == h
        });
        if (_.isFunction(e)) {
            e(l)
        }
    })
}, DelContactById:function (f, c, b, a) {
    var e = this._hostAddress + '/sdctl/contacts/edit/?params={"id":' + f + ',"mode":3}&callback=?';
    ajaxHelper(e, function (g) {
        g = unescape(g);
        if (_.isEmpty(g.err)) {
            c(f)
        } else {
            b(f)
        }
    }, function (g) {
        NetworkError();
        b(f)
    })
}, ContactInfoById:function (f, c, b, a) {
    var e = this.IGetQueryCommand().ContactInfo.format(f);
    ajaxHelper(e, function (g) {
        g = unescape(g);
        oriData = g.list;
        g = [];
        _.each(oriData, function (h) {
            g.push({id:h.group_id, name:h.group_name, count:h.group_count})
        });
        if (_.isFunction(c)) {
            c(g)
        }
    }, function (g) {
        NetworkError();
        if (_.isFunction(b)) {
            b(data)
        }
    }, function (g) {
        if (_.isFunction(a)) {
            a(g)
        }
    })
}});
var ContactLogic = Core.extend({_initComplete:false, _ContactDb:null, _hostAddress:null, _QueryStatus:-1, _ErrorOccur:0, _readBlock:100, _errorRetryTimes:2, _localCache:{ContactsCache:{}, HelperCache:{ContactsSearch:[]}}, $construct:function () {
}, IsComponentReady:function () {
    return this._initComplete
}, InitComponent:function (b) {
    try {
        this._ContactDb = new ContactDb(b);
        this._hostAddress = b;
        this._initComplete = true
    } catch (a) {
        if (a == "[hostAddress@Undefined/Empty]") {
        } else {
        }
    }
}, QueryDBGroup:function (b, a) {
    this._ContactDb.GetAllGroup(b, a)
}, DBGroupPublishSucHandler:function (a) {
    $.publish("[to:ui]/e/ct/gp/ba", [a])
}, DBGroupPublishFailHandler:function (a) {
    $.publish("[to:ui]/e/ct/gp/fl", [a])
}, QueryContactsByGid:function (b, e, c, a) {
    this._ContactDb.GetPartialContactsByGid(b, e, c, a)
}, DBContactsByGidPublishSucHandler:function (b, c, a) {
    $.publish("[to:ui]/e/ct/gp/ba/ok/cts/ba", [b, c, a])
}, DBContactsByGidPublishFailHandler:function (a) {
    $.publish("[to:ui]/e/ct/gp/ba/ok/cts/fl", [a])
}, QueryDelContactById:function (c, b, a) {
    this._ContactDb.DelContactById(c, b, a)
}, DBDelContactByIdPublishSucHandler:function (a) {
    $.publish("[to:ui]/e/ct/del", [
        {id:a}
    ])
}, DBDelContactByIdPublishFailHandler:function (a) {
    showMsgBox(Airdroid.UsedLang.SMS._plain_text_del_contact_fail)
}, QueryContactInfoById:function (c, b, a) {
    this._ContactDb.ContactInfoById(c, b, a)
}, DBContactInfoByIdPublishSucHandler:function (a) {
}, DBContactInfoByIdPublishFailHandler:function (a) {
}, ContactsReadWorker:function (b) {
    var a = this;
    if (b.length == 0) {
        a._QueryStatus = 2;
        Airdroid.ContactsListQueryAgain = true;
        return
    }
    var e = b[0].url;
    var c = b[0].gid;
    ajaxHelper(e, function (k) {
        k = unescape(k);
        if (!_.isUndefined(k.err)) {
            if (b[0].retryTimes == 0) {
                var p = [];
                for (var l = 1; l < b.length; l++) {
                    p.push(b[l])
                }
                b = p;
                a.ContactsReadWorker(b);
                $.publish("[to:ui]/event/contacts/group/content/retryout", [c])
            } else {
                b[0].retryTimes = b[0].retryTimes - 1;
                a.ContactsReadWorker(b)
            }
            return
        }
        oriData = k.list;
        k = [];
        var h = "";
        _.each(oriData, function (q) {
            if (_.isEmpty(q.phone)) {
                h = "ui/theme/default/images/contact30X30.jpg.png"
                /*tpa=http://192.168.119.101:8888/ui/theme/default/images/contact30X30.jpg*/
            } else {
                h = a._hostAddress + "/sdctl/contacts/image/bynumber/?number=" + q.phone.split(",")[0]
            }
            k.push({id:q.id, name:q.name, phone:q.phone, icon:h});
            a._localCache.HelperCache.ContactsSearch.push({id:q.id, name:q.name, phone:q.phone})
        });
        if (!b[0].lastPage) {
            $.publish("[to:ui]/event/contacts/group/content/suc", [c, k, {isEnd:b[0].lastPage}])
        } else {
            var n = a._localCache.HelperCache.ContactsSearch;
            var o = [], j = {};
            try {
                for (var l = 0, g = n.length; l < g; l++) {
                    var f = n[l].id;
                    if (!j[f]) {
                        j[f] = true;
                        o.push(n[l])
                    }
                }
            } catch (m) {
                o = n
            }
            a._localCache.HelperCache.ContactsSearch = o;
            $.publish("[to:ui]/e/ct/srb", [a._localCache.HelperCache.ContactsSearch]);
            $.publish("[to:ui]/event/contacts/group/content/suc", [c, k, {isEnd:true}])
        }
        var p = [];
        for (var l = 1; l < b.length; l++) {
            p.push(b[l])
        }
        b = p;
        a.ContactsReadWorker(b)
    }, function (f) {
        NetworkError()
    })
}, QueryListByGid:function (a) {
    var b = this;
    var e = b._hostAddress + "/sdctl/contacts/group/{0}?pcount={1}&page={2}&callback=?";
    var c = [];
    _.each(a, function (h) {
        if (h.count == 0) {
            c.push({gid:h.id, url:e.format(h.id, b._readBlock, 1), lastPage:true, retryTimes:0})
        } else {
            var g = Math.ceil(h.count / b._readBlock);
            for (var f = 1; f <= g; f++) {
                c.push({gid:h.id, url:e.format(h.id, b._readBlock, f), lastPage:f == g ? true : false, retryTimes:2})
            }
        }
    });
    b.ContactsReadWorker(c)
}, StartQueryContacts:function () {
    var a = this;
    var b = a._hostAddress + "/sdctl/contacts/grouplist/?callback=?";
    ajaxHelper(b, function (c) {
        c = unescape(c);
        a._QueryStatus = 0;
        oriData = c.list;
        c = [];
        _.each(oriData, function (e) {
            if (e.group_id != "all") {
                c.push({id:e.group_id, name:e.group_name, count:e.group_count})
            }
        });
        $.publish("[to:ui]/event/contacts/group/suc", [c]);
        a.QueryListByGid(c)
    }, function (c) {
        NetworkError();
        a._ErrorOccur = 1;
        a._QueryStatus = 2
    })
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:db]/e/ct/gp/ba/ok/cts/nba", function (e, c) {
        var b = e.id;
        if (_.isUndefined(c) || !_.isNumber(c)) {
            c = 1
        }
        a.QueryContactsByGid(b, c, a.DBContactsByGidPublishSucHandler, a.DBContactsByGidPublishFailHandler)
    });
    $.subscribe("[to:db]/e/ct/del", function (b) {
        var c = b.cid;
        a.QueryDelContactById(c, a.DBDelContactByIdPublishSucHandler, a.DBDelContactByIdPublishFailHandler)
    });
    $.subscribe("[to:db]/e/chat/load", function (b) {
    });
    $.subscribe("[to:db]/event/im/refresh", function () {
        if (a._QueryStatus == 2 || a._QueryStatus == -1) {
            Airdroid.ContactsListQueryAgain = false
        } else {
            return
        }
        a._ErrorOccur = 0;
        a._QueryStatus = -1;
        a._ContactDb._localCache.HelperCache.ContactsSearch = [];
        a.StartQueryContacts()
    })
}, KickOff:function () {
    if (this.IsComponentReady) {
        this.StartListen()
    } else {
    }
}});
var ContactUI = Core.extend({$construct:function () {
}});
Airdroid.ShakeTimer = null;
var ContactUILogic = Core.extend({_tpl_group:null, _tpl_contact_item:null, _tpl_chat_single_window:null, _window_name:"im-window", _shake_obj:[], _elemApi:null, _tpl_calllog_item:null, $construct:function () {
    var a = this;
    var c = $("#tpl-im-window-group").html();
    this._tpl_group = _.template(c);
    var b = $("#tpl-im-window-contact-item").html();
    this._tpl_contact_item = _.template(b);
    $(".im-window-contact-group-line").live("click", function () {
        var e = this;
        var f = $(this).parent().find(".im-window-contact-arrow");
        if (f.hasClass("left-icon")) {
            f.removeClass("left-icon").addClass("down-icon")
        } else {
            f.removeClass("down-icon").addClass("left-icon")
        }
        $(this).parent().find(".im-window-contact-group-container").toggle(function () {
            $(".im-window-contact-table").trigger("jresize").trigger("jsp-scroll-y")
        })
    });
    $(".im-window-contact-cmd-del").live("click", function () {
        var e = this;
        showConfirmBox("Confirm to delete contact '" + $(this).parents(".im-window-contact-item").find(".im-window-contact-item-name > span").html() + "'?", function () {
            var f = $(e).closest(".im-window-contact-item").attr("cid");
            $.publish("[to:db]/e/ct/del", [
                {cid:f}
            ])
        });
        return false
    });
    $(".im-window-contact-cmd-edit").live("click", function () {
        var e = $(this).closest(".im-window-contact-item").attr("cid");
        $.publish("[to:ui]/event/editcontact/show");
        $.publish("[to:ui]/event/editcontact/load/byid", [e]);
        return false
    });
    $(".im-window-contact-item").live("dblclick", function () {
        var l = this;
        a._shake_obj = _.reject(a._shake_obj, function (m) {
            return m.attr("cid") == $(l).find(".im-window-contact-icon").attr("cid")
        });
        var g = $(this).find(".im-window-contact-item-name > span").html();
        var e = $(this).find(".im-window-contact-item-name").attr("dest");
        if (_.isEmpty(e)) {
            showConfirmBox(Airdroid.UsedLang.SMS._confirmbox_redirect_to_create, function () {
                $(".im-window-contact-cmd-edit", $(l)).trigger("click")
            });
            return
        }
        var f = e.split(",");
        f = _.reject(f, function (m) {
            return m.length == 0
        });
        var k = $(this).attr("tid");
        var j = g;
        var h = f[0];
        $.publish("[to:ui]/event/chat/single", [k, h, j, true])
    });
    $("#btn-new-contact").live("click", function () {
        $.publish("[to:ui]/event/newcontact/show", [])
    })
}, HaveChatWindow:function (a) {
    if ($("#taskbar_content").find("#m" + a).length == 1) {
        return true
    }
    return false
}, HaveWindow:function (a) {
    if ($("#" + a).length == 1) {
        return true
    }
    return false
}, ClearSearchTips:function () {
    if (!_.isEmpty($("#searchBox").val()) && $(".ac_results").is(":visible")) {
        $("#searchBox").trigger("blur")
    }
}, ShowMe:function () {
    var k = this;
    if (this.HaveWindow(this._window_name)) {
        $.publish("/e/t/bid", ["addsp", this._window_name, {name:"Contacts", iconUrl:"ui/theme/default/images/icon_contacts_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_contacts_80.png*/}, true]);
        $("#" + this._window_name).show().css("z-index", getTopperZIndex() + 2);
        $("#searchBox").trigger("focus")
    } else {
        var j = "http://" + Airdroid.Env.ConnectionAddress;
        $(_.template($("#tpl-im-window").html())({UsedLang:Airdroid.UsedLang.SMS})).appendTo($("#main_container"));
        $("#searchBox").trigger("focus");
        $(".im-window").click(function () {
            $(this).css("z-index", getTopperZIndex())
        }).resizable({helper:"resizeHelper", minHeight:500, stop:function (p, o) {
            var n = o.helper;
            var m = n.height() - 46;
            $(".im-window-body-c").css("height", m - 80 + "px");
            $(".im-window-contact-table").css("height", m - 74 + "px");
            $(".im-window-contact-table > div").css("height", m - 74 + "px");
            $(".im-window-contact-table").trigger("jresize")
        }}).draggable({handle:".im-window-title-c", cancel:".window-_,.window-x,.search26", stop:function (q, n) {
            k.ClearSearchTips();
            $(this).css("z-index", getTopperZIndex());
            var m = n.helper;
            var p = m.position().top;
            var o = m.position().left;
            if (p < 0) {
                m.css({top:"0px"})
            } else {
                if (p > $("#main_container").height() - 35) {
                    m.css({top:$("#main_container").height() - 35 + "px"})
                }
            }
            if (o < -(m.width() - 120)) {
                m.css({left:-(m.width() - 120) + "px"})
            } else {
                if (o > $("#main_container").width() - 120) {
                    m.css({left:$("#main_container").width() - 120 + "px"})
                }
            }
        }});
        $(".window-_", $(".im-window")).click(function () {
            $.publish("/e/t/bid", ["minsp", k._window_name])
        });
        $(".window-x", $(".im-window")).click(function () {
            $.publish("/e/t/bid", ["removesp", k._window_name])
        });
        $("#im-window .search26_r").click(function () {
            $("#searchBox").val("").trigger("keypress").trigger("keyup")
        });
        $("#im-window").bind("click", function () {
            k.ClearSearchTips()
        });
        $("#btn-all-calllog").click(function () {
            $.publish("[to:ui]/event/allcalllog/show", [])
        });
        var g, a;
        var e = 0;
        var c = 0;
        var h = $(".im-window-contact-table").bind("jsp-scroll-y", _.throttle(function (o, n, p, m) {
            e = -g.position().top;
            c = e + a.height();
            $(".im-window-contact-table li:visible").each(function () {
                var r = $(this).position().top;
                if (r <= c && r >= e) {
                    var q = $(this).find("img");
                    if (!_.isEmpty(q.attr("loaded"))) {
                        return
                    }
                    q.attr("src", q.attr("rel"));
                    q.attr("loaded", "true")
                }
            })
        }, 500)).jScrollPane({animateScroll:true, verticalDragMinHeight:18});
        var f = h.data("jsp");
        f.reinitialise();
        k._elemApi = f;
        $(".im-window-contact-table").bind("jresize", function () {
            f.reinitialise()
        });
        g = $(".im-window-contact-table .jspPane");
        a = $(".im-window-contact-table .jspContainer");
        $("#btn-contacts-reload").click(function () {
            Airdroid.ContactsDB.GroupReady = false;
            k._elemApi.getContentPane().children().remove();
            Airdroid.ContactsListQueryAgain = true;
            $.publish("[to:db]/event/im/refresh", [])
        });
        $.publish("/e/t/bid", ["addsp", this._window_name, {name:"Contacts", iconUrl:"ui/theme/default/images/icon_contacts_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_contacts_80.png*/}, true]);
        $("#" + this._window_name).show().css("z-index", getTopperZIndex() + 2);
        if ($("#im-window").position().top + $("#im-window").height() > $("#main_container").height()) {
            var l = $("#main_container").height() - $("#im-window").position().top < parseInt($("#im-window").attr("mh")) ? 500 : $("#main_container").height() - $("#im-window").position().top;
            var b = l - 46;
            $("#im-window").css("height", l + "px");
            $(".im-window-body-c").css("height", b - 80 + "px");
            $(".im-window-contact-table").css("height", b - 74 + "px");
            $(".im-window-contact-table > div").css("height", b - 74 + "px");
            $(".im-window-contact-table").trigger("jresize")
        }
        Airdroid.ContactsListQueryAgain = true;
        $.publish("[to:db]/event/im/refresh", [])
    }
}, StartChatWithSingle:function (c, e) {
    if (this.HaveChatWindow(c)) {
        $.publish("/e/t/bid", ["add", "singlechat" + c, {name:e, iconUrl:""}, true])
    } else {
        var b = _.template($("#tpl-im-chatsingle-content").html());
        var a = $(b({name:e}));
        a.attr("id", "singlechat" + c).appendTo($("#main_container"));
        Windownize(a, {title:"test", icon:"", minWidth:200, minHeight:200, resize:function (g, f) {
        }});
        $.publish("/e/t/bid", ["add", "singlechat" + c, {name:e, iconUrl:""}, true]);
        $.publish("[to:db]/e/chat/load", [c])
    }
}, NewContactReceive:function (h, c) {
    $("#btn-contacts-reload").trigger("click");
    return;
    var b = this;
    var j = {};
    j.id = "-1";
    j.name = h.name.display_name;
    j.phone = _.pluck(h.phones, "data").join(",");
    j.icon = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/contacts/image/bynumber/?number=" + h.phones[0].data;
    j.UsedLang = Airdroid.UsedLang.SMS;
    var e = this._tpl_contact_item(j);
    if (!_.isEmpty(c) && c != "-1" && $('.im-window-contact-group-container[gid="' + c + '"]').size() == 0) {
        b._elemApi.getContentPane().children().remove();
        $.publish("[to:db]/event/im/refresh", [])
    } else {
        $('.im-window-contact-group-container[gid="all"]').prepend(e);
        var a = $('.im-window-contact-group-container[gid="all"]').closest(".im-window-contact-group").find(".im-window-contact-grouptitle-count");
        a.html(parseInt(a.html()) + 1);
        $('.im-window-contact-group-container[gid="has_phone"]').prepend(e);
        var g = $('.im-window-contact-group-container[gid="has_phone"]').closest(".im-window-contact-group").find(".im-window-contact-grouptitle-count");
        g.html(parseInt(g.html()) + 1);
        if (!_.isEmpty(c)) {
            $('.im-window-contact-group-container[gid="' + c + '"]').prepend(e);
            var f = $('.im-window-contact-group-container[gid="' + c + '"]').closest(".im-window-contact-group").find(".im-window-contact-grouptitle-count");
            f.html(parseInt(f.html()) + 1)
        }
    }
    $(".im-window-contact-table").trigger("jresize")
}, StartListen:function () {
    var a = this;
    var b = false;
    Airdroid.ShakeTimer = setInterval(function () {
    }, 600);
    $.subscribe("[to:ui]/e/ct/del", function (c) {
        $('.im-window-contact-item[cid="' + c.id + '"]').hide(300, function () {
            var e = this;
            setTimeout(function () {
                var f = $(e).closest(".im-window-contact-group").find(".im-window-contact-grouptitle-count");
                var g = parseInt(f.html()) - 1;
                f.html(g);
                if (g == 0) {
                    $(e).closest(".im-window-contact-group").remove()
                } else {
                    $(e).closest("li").remove()
                }
                $(".im-window-contact-table").trigger("jresize")
            })
        })
    });
    $.subscribe("[to:ui]/e/ct/gp/ba", function (e) {
        var c = "";
        _.each(e, function (f) {
            f.UsedLang = Airdroid.UsedLang.SMS;
            c += a._tpl_group(f)
        });
        a._elemApi.getContentPane().append(c);
        $(".im-window-contact-table").trigger("jresize");
        _.each(e, function (f) {
            $.publish("[to:db]/e/ct/gp/ba/ok/cts/nba", [
                {id:f.id}
            ])
        })
    });
    $.subscribe("[to:ui]/e/ct/gp/ba/ok/cts/ba", function (f, g, e) {
        var c = "";
        _.each(g, function (h) {
            h.UsedLang = Airdroid.UsedLang.SMS;
            c += a._tpl_contact_item(h)
        });
        $('.im-window-contact-group-container[gid="' + f + '"]').append(c);
        $(".im-window-contact-table").trigger("jresize");
        if (e.isEnd == false) {
            $.publish("[to:db]/e/ct/gp/ba/ok/cts/nba", [
                {id:f},
                e.nextStep
            ])
        }
    });
    $.subscribe("[to:ui]/e/ct/srb", function (c) {
        $("#searchBox").trigger("blur").unbind().autocomplete(c, {matchContains:true, autoFill:false, formatItem:function (g, f, e) {
            g.phone == "" ? "," : g.phone;
            return g.name.indexOf(",") != -1 ? g.name + " - " + g.phone.substr(0, g.phone.length - 1) : g.name + " - " + g.phone
        }, formatMatch:function (g, f, e) {
            g.phone == "" ? "," : g.phone;
            return g.name.indexOf(",") != -1 ? g.name + g.phone.substr(0, g.phone.length - 1) : g.name + g.phone
        }, formatResult:function (e) {
            return e.name
        }}).result(function (g, f) {
            var e = false;
            var h = $("#searchBox").val();
            $(".im-window-contact-item-name > span").each(function () {
                if ($(this).html() == h) {
                    $("#searchBox").val("").trigger("keyup").trigger("blur");
                    $(this).closest(".im-window-contact-item").trigger("dblclick");
                    e = true;
                    return false
                }
            });
            if (!e) {
                $(".contact-searct-tips").show().fadeOut(2000)
            }
        });
        $("#searchBox").bind("keypress",function () {
            var f = false;
            $(".contact-searct-tips").hide();
            if (event.keyCode == 13) {
                var e = this;
                $(".im-window-contact-item-name > span").each(function () {
                    if ($(this).html() == $(e).val()) {
                        $(this).closest(".im-window-contact-item").trigger("dblclick");
                        f = true;
                        return false
                    }
                });
                if (!f) {
                    $(".contact-searct-tips").show().fadeOut(2000)
                }
            }
        }).bind("keyup", function () {
            if (_.isEmpty($(this).val())) {
                $(this).parent().find(".search26_r").removeClass("app_search_cross")
            } else {
                $(this).parent().find(".search26_r").addClass("app_search_cross")
            }
        })
    });
    $.subscribe("[to:ui]/e/chat/sg", function (c, e) {
        a.StartChatWithSingle(c, e)
    });
    $.subscribe("[to:ui]/event/contacts/show", function () {
        a.ShowMe()
    });
    $.subscribe("[to:ui]/event/im/refresh/group/fail", function (c) {
        showMsgBox(Airdroid.UsedLang.SMS._msgbox_refresh_group_fail)
    });
    $.subscribe("[to:ui]/event/socket/sms/receive", function (c) {
    });
    $.subscribe("[to:ui]/event/im/sprefresh", function () {
        if (a._elemApi != null) {
            a._elemApi.getContentPane().children().remove();
            Airdroid.ContactsListQueryAgain = true;
            $.publish("[to:db]/event/im/refresh", [])
        }
    });
    $.subscribe("[to:ui]/event/contacts/group/suc", function (e) {
        var c = "";
        _.each(e, function (f) {
            f.UsedLang = Airdroid.UsedLang.SMS;
            c += a._tpl_group(f)
        });
        a._elemApi.getContentPane().append(c);
        $(".im-window-contact-table").trigger("jresize")
    });
    $.subscribe("[to:ui]/event/contacts/group/content/suc", function (f, g, e) {
        var c = "";
        _.each(g, function (h) {
            h.UsedLang = Airdroid.UsedLang.SMS;
            c += a._tpl_contact_item(h)
        });
        $('.im-window-contact-group-container[gid="' + f + '"]').append(c);
        $(".im-window-contact-table").trigger("jresize");
        if (e.isEnd == true) {
            $('.im-window-contact-group-container[gid="' + f + '"]').parent().find(".im-window-contact-grouptitle-loading").addClass("hide")
        }
    });
    $.subscribe("[to:ui]/event/contacts/group/content/retryout", function (c) {
        $('.im-window-contact-group-container[gid="' + c + '"]').parent().find(".im-window-contact-grouptitle-partload").removeClass("hide")
    })
}});
var CalllogJSLogic = Core.extend({_host_address:"", _tpl_calllog_item:"", $construct:function (a) {
    this._host_address = a
}, QueryAllCalllog:function (e, a, c) {
    a();
    var f = this._host_address + "/sdctl/calllog/all?callback=?";
    var b = this._host_address;
    ajaxHelper(f, function (h) {
        h = unescape(h);
        if (_.isEmpty(h.err)) {
            for (var g = 0; g < h.list.length; g++) {
                h.list[g].hostAddress = b
            }
            $.publish("[to:ui]/event/calllog/all/suc", [e, h.list])
        } else {
            $.publish("[to:ui]/event/calllog/all/fail", [e])
        }
        c()
    }, function (g) {
        NetworkError();
        c()
    })
}, QueryIncomingCalllog:function (e, a, c) {
    a();
    var f = this._host_address + "/sdctl/calllog/incoming?callback=?";
    var b = this._host_address;
    ajaxHelper(f, function (h) {
        h = unescape(h);
        if (_.isEmpty(h.err)) {
            for (var g = 0; g < h.list.length; g++) {
                h.list[g].hostAddress = b
            }
            $.publish("[to:ui]/event/calllog/incoming/suc", [e, h.list])
        } else {
            $.publish("[to:ui]/event/calllog/incoming/fail", [e])
        }
        c()
    }, function (g) {
        NetworkError();
        c()
    })
}, QueryMissedCalllog:function (e, a, c) {
    a();
    var f = this._host_address + "/sdctl/calllog/missed?callback=?";
    var b = this._host_address;
    ajaxHelper(f, function (h) {
        h = unescape(h);
        if (_.isEmpty(h.err)) {
            for (var g = 0; g < h.list.length; g++) {
                h.list[g].hostAddress = b
            }
            $.publish("[to:ui]/event/calllog/missed/suc", [e, h.list])
        } else {
            $.publish("[to:ui]/event/calllog/missed/fail", [e])
        }
        c()
    }, function (g) {
        NetworkError();
        c()
    })
}, QueryOutCalllog:function (e, a, c) {
    a();
    var f = this._host_address + "/sdctl/calllog/out?callback=?";
    var b = this._host_address;
    ajaxHelper(f, function (h) {
        h = unescape(h);
        if (_.isEmpty(h.err)) {
            for (var g = 0; g < h.list.length; g++) {
                h.list[g].hostAddress = b
            }
            $.publish("[to:ui]/event/calllog/out/suc", [e, h.list])
        } else {
            $.publish("[to:ui]/event/calllog/out/fail", [e])
        }
        c()
    }, function (g) {
        NetworkError();
        c()
    })
}, DeleteCalllogById:function (c, a) {
    var b = this._host_address + "/sdctl/calllog/delete/" + c + "?callback=?";
    ajaxHelper(b, function (e) {
        e = unescape(e);
        $.publish("[to:ui]/event/calllog/all/delete/byid/suc", [a])
    }, function (e) {
        NetworkError()
    })
}, ClearAllCalllog:function (a) {
    var b = this._host_address + "/sdctl/calllog/delete/all/?callback=?";
    ajaxHelper(b, function (c) {
        c = unescape(c);
        if (_.isEmpty(c.err)) {
            $.publish("[to:db]/event/calllog/all/clear/suc", [a])
        } else {
            $.publish("[to:db]/event/calllog/all/clear/fail", [a])
        }
    }, function (c) {
        NetworkError()
    })
}, DeteteCalllogWorker:function (e, a) {
    var b = this;
    if (e.length == 0) {
        a();
        return
    }
    var c = e[0].cid;
    var f = e[0].item;
    var g = this._host_address + "/sdctl/calllog/delete/" + c + "?callback=?";
    ajaxHelper(g, function (h) {
        h = unescape(h);
        $.publish("[to:ui]/event/calllog/all/delete/byid/suc", [f]);
        var k = [];
        for (var j = 1; j < e.length; j++) {
            k.push(e[j])
        }
        e = k;
        b.DeteteCalllogWorker(e, a)
    }, function (h) {
        a();
        $.publish("[to:ui]/event/calllog/delete/some/partfail", [])
    })
}, DeteteSomeCalllog:function (b, a, c) {
    a();
    this.DeteteCalllogWorker(b, c)
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:db]/event/calllog/all", function (e, b, c) {
        a.QueryAllCalllog(e, b, c)
    });
    $.subscribe("[to:db]/event/calllog/incoming", function (e, b, c) {
        a.QueryIncomingCalllog(e, b, c)
    });
    $.subscribe("[to:db]/event/calllog/missed", function (e, b, c) {
        a.QueryMissedCalllog(e, b, c)
    });
    $.subscribe("[to:db]/event/calllog/out", function (e, b, c) {
        a.QueryOutCalllog(e, b, c)
    });
    $.subscribe("[to:db]/event/calllog/all/clear", function (b) {
        a.ClearAllCalllog(b)
    });
    $.subscribe("[to:db]/event/calllog/all/delete/byid", function (c, b) {
        a.DeleteCalllogById(c, b)
    });
    $.subscribe("[to:db]/event/calllog/delete/some", function (c, b, e) {
        a.DeteteSomeCalllog(c, b, e)
    })
}});
var CalllogUILogic = Core.extend({_windowId:"all-calllog", _capi:null, $construct:function () {
    var a = this;
    this._tpl_calllog_item = _.template($("#tpl-all-calllog-item").html());
    $(".all-calllog .calllog-name-click-area").live("click", function () {
        var b = $(this).closest(".calllog-item");
        b.find(".allcalllog-check-item").trigger("click")
    });
    $(".all-calllog .allcalllog-chat").live("click", function () {
        var f = $(this).closest(".calllog-item");
        var b = f.find(".calllog-number").html();
        var e = -1;
        var c = f.find(".calllog-name").html();
        $.publish("[to:ui]/event/chat/single", [e, b, c, true])
    });
    $(".all-calllog .allcalllog-create").live("click", function () {
        var c = $(this).closest(".calllog-item");
        var b = c.find(".calllog-number").html();
        $.publish("[to:ui]/event/newcontact/show", ["", b])
    });
    $(".all-calllog .allcalllog-delete").live("click", function () {
        var b = this;
        showConfirmBox(Airdroid.UsedLang.SMS._confirmbox_delete_this_calllog, function () {
            $(b).closest(".calllog-item").css("text-decoration", "line-through");
            $.publish("[to:db]/event/calllog/all/delete/byid", [$(b).attr("cid"), $(b).closest(".calllog-item")])
        }, function () {
        })
    });
    $(".all-calllog .allcalllog-check-item").live("click", function () {
        var b = $(this);
        if (b.attr("checked") == "true") {
            b.attr("checked", "false");
            b.css("backgroundPosition", "0px -144px")
        } else {
            b.attr("checked", "true");
            b.css("backgroundPosition", "0px -196px")
        }
        a.freshButtonStatus()
    });
    $(".all-calllog .allcalllog-checkall").live("click", function () {
        var b = $(this);
        if (b.attr("checked") == "true") {
            b.attr("checked", "false");
            b.css("backgroundPosition", "0px -144px");
            $(".all-calllog .allcalllog-check-item").attr("checked", "false").css("backgroundPosition", "0px -144px")
        } else {
            b.attr("checked", "true");
            b.css("backgroundPosition", "0px -196px");
            $(".all-calllog .allcalllog-check-item").attr("checked", "true").css("backgroundPosition", "0px -196px")
        }
        a.freshButtonStatus()
    })
}, freshButtonStatus:function () {
    if ($('.all-calllog .allcalllog-check-item[checked="true"]').length > 0) {
        EnableButton($("#btn-all-calllog-delete-selected"))
    } else {
        DisableButton($("#btn-all-calllog-delete-selected"))
    }
}, ShowMe:function () {
    var r = this;
    var o = this._windowId;
    var q = Airdroid.UsedLang.Workspace._module_name_calllog;
    var a = "ui/theme/default/images/icon_phone_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_phone_80.png*/;
    if ($("#w_" + o).length == 1) {
        $.publish("/e/t/bid", ["add", o, {name:q, iconUrl:a}, true]);
        $("#w_" + o).show().css("z-index", getTopperZIndex() + 2)
    } else {
        var b = _.template($("#tpl-all-calllog").html());
        var n = $(b({UsedLang:Airdroid.UsedLang.SMS}));
        n.attr("id", o);
        n.appendTo($("#main_container"));
        Windownize(n, {title:q, icon:a, minWidth:820, minHeight:540, resize:function (w, v) {
            var u = v.helper;
            var t = u.width() - 23;
            var s = u.height() - 46;
            u.find(".all-calllog").css("width", t + "px");
            u.find(".all-calllog").css("height", s + "px");
            u.find(".all-calllog-container").css("width", t + "px");
            u.find(".all-calllog-container .jspContainer").css("width", t + "px");
            u.find(".all-calllog-container .jspPane").css("width", t + "px");
            u.find(".all-calllog-container").css("height", s - 68 + "px");
            r._capi.reinitialise()
        }});
        var g = n.closest(".window");
        g.find(".window-x").click(function () {
            g.remove()
        });
        var k, c;
        var j = 0;
        var f = 0;
        var m = $(".all-calllog-container", n).bind("jsp-scroll-y", _.throttle(function (u, t, v, s) {
            j = -k.position().top;
            f = j + c.height();
            $(".calllog-item", n).each(function () {
                var x = $(this).position().top;
                if (x <= f && x >= j) {
                    var w = $(this).find("img");
                    if (!_.isEmpty(w.attr("loaded"))) {
                        return
                    }
                    w.attr("src", w.attr("rel"));
                    w.attr("loaded", "true")
                }
            })
        }, 500)).jScrollPane({animateScroll:true, verticalDragMinHeight:18});
        k = $(".all-calllog-container .jspPane", n);
        c = $(".all-calllog-container .jspContainer", n);
        var h = m.data("jsp");
        h.reinitialise();
        this._capi = h;
        $.publish("/e/t/bid", ["add", o, {name:q, iconUrl:a}, true]);
        $("#m" + o).trigger("click");
        $("#w_all-calllog").css("z-index", getTopperZIndex() + 2);
        $("#btn-all-calllog-clear", g).click(function () {
            showConfirmBox(Airdroid.UsedLang.SMS._confirmbox_delete_all_calllog, function () {
                $(this).attr("disabled", true);
                $.publish("[to:db]/event/calllog/all/clear", [g])
            })
        });
        DisableButton($("#btn-all-calllog-delete-selected"));
        var l = function (t) {
            var s = t.closest(".tabs");
            s.find("> div").removeClass("tab_current").addClass("tab");
            t.closest(".tab").addClass("tab_current").removeClass("tab");
            $(".all-calllog .allcalllog-checkall").attr("checked", "false").css("backgroundPosition", "0px -144px");
            DisableButton($("#btn-all-calllog-delete-selected"))
        };
        var e = function () {
            n.block({message:'<img src="ui/theme/default/images/loading.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/loading.gif*//>', css:{border:"none", width:"130px", height:"50px", backgroundColor:"none", padding:"0px"}, overlayCSS:{backgroundColor:"none", cursor:"default"}})
        };
        var p = function () {
            n.unblock()
        };
        $("#btn-all-calllog-delete-selected").click(function () {
            var s = $('.allcalllog-check-item[checked="true"]', n);
            showConfirmBox(Airdroid.UsedLang.SMS._nf1_delete_n_calllog.format(s.length), function () {
                var t = [];
                s.each(function () {
                    t.push({cid:$(this).attr("cid"), item:$(this).closest(".calllog-item")})
                });
                $.publish("[to:db]/event/calllog/delete/some", [t, e, function () {
                    p();
                    DisableButton($("#btn-all-calllog-delete-selected"))
                }])
            })
        });
        $("#btn-all-calllog-refresh", g).click(function () {
            $("." + g.find(".tab_current").attr("m")).attr("force", "1").trigger("click")
        });
        $(".ac_2_all", g).click(function () {
            if ($(this).parent().hasClass("tab_current") && $(this).attr("force") != "1") {
                return
            }
            $(this).attr("force", "0");
            l($(this));
            $.publish("[to:db]/event/calllog/all", [g, e, p])
        });
        $(".ac_2_incoming", g).click(function () {
            if ($(this).parent().hasClass("tab_current") && $(this).attr("force") != "1") {
                return
            }
            $(this).attr("force", "0");
            l($(this));
            $.publish("[to:db]/event/calllog/incoming", [g, e, p])
        });
        $(".ac_2_outgoing", g).click(function () {
            if ($(this).parent().hasClass("tab_current") && $(this).attr("force") != "1") {
                return
            }
            $(this).attr("force", "0");
            l($(this));
            $.publish("[to:db]/event/calllog/out", [g, e, p])
        });
        $(".ac_2_missed", g).click(function () {
            if ($(this).parent().hasClass("tab_current") && $(this).attr("force") != "1") {
                return
            }
            $(this).attr("force", "0");
            l($(this));
            $.publish("[to:db]/event/calllog/missed", [g, e, p])
        });
        $.publish("[to:db]/event/calllog/all", [g, e, p])
    }
}, GenerateCalllogDOM:function (c) {
    var b = "";
    var a = this;
    _.each(c, function (e) {
        e.UsedLang = Airdroid.UsedLang.SMS;
        b += a._tpl_calllog_item(e)
    });
    b = $(b);
    b.find(".calllog-status-icon").each(function () {
        var e = $(this).attr("ctype");
        if (e == "1") {
            $(this).addClass("calllog-status-icon-in");
            $(this).parent().find(".calllog-status-text").html("Listen ")
        } else {
            if (e == "2") {
                $(this).addClass("calllog-status-icon-out");
                $(this).parent().find(".calllog-status-text").html("Call ")
            } else {
                if (e == "3") {
                    $(this).addClass("calllog-status-icon-miss");
                    $(this).parent().find(".calllog-status-text").html("Miss ");
                    $(this).parent().find(".calllog-duration").addClass("hide")
                }
            }
        }
    });
    return b
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:ui]/event/allcalllog/show", function () {
        a.ShowMe()
    });
    $.subscribe("[to:ui]/event/calllog/all/suc", function (f, e) {
        var c = f.find(".all-calllog-container");
        if (e.length == 0) {
            c.html("<div style='position:absolute;left:260px;top:160px;'>No records!</div>");
            return false
        }
        var b = a.GenerateCalllogDOM(e);
        a._capi.getContentPane().html(b);
        a._capi.reinitialise()
    });
    $.subscribe("[to:ui]/event/calllog/incoming/suc", function (f, e) {
        var c = f.find(".all-calllog-container");
        if (e.length == 0) {
            c.html("<div style='position:absolute;left:260px;top:160px;'>No records!</div>");
            return false
        }
        var b = a.GenerateCalllogDOM(e);
        a._capi.getContentPane().html(b);
        a._capi.reinitialise()
    });
    $.subscribe("[to:ui]/event/calllog/out/suc", function (f, e) {
        var c = f.find(".all-calllog-container");
        if (e.length == 0) {
            c.html("<div style='position:absolute;left:260px;top:160px;'>No records!</div>");
            return false
        }
        var b = a.GenerateCalllogDOM(e);
        a._capi.getContentPane().html(b);
        a._capi.reinitialise()
    });
    $.subscribe("[to:ui]/event/calllog/missed/suc", function (f, e) {
        var c = f.find(".all-calllog-container");
        if (e.length == 0) {
            c.html("<div style='position:absolute;left:260px;top:160px;'>No records!</div>");
            return false
        }
        var b = a.GenerateCalllogDOM(e);
        a._capi.getContentPane().html(b);
        a._capi.reinitialise()
    });
    $.subscribe("[to:ui]/event/calllog/all/fail", function (c, b) {
        showMsgBox(Airdroid.UsedLang.SMS._msgbox_read_calllog_fail)
    });
    $.subscribe("[to:ui]/event/calllog/incoming/fail", function (c, b) {
        showMsgBox(Airdroid.UsedLang.SMS._msgbox_read_calllog_fail)
    });
    $.subscribe("[to:ui]/event/calllog/missed/fail", function (c, b) {
        showMsgBox(Airdroid.UsedLang.SMS._msgbox_read_calllog_fail)
    });
    $.subscribe("[to:ui]/event/calllog/out/fail", function (c, b) {
        showMsgBox(Airdroid.UsedLang.SMS._msgbox_read_calllog_fail)
    });
    $.subscribe("[to:db]/event/calllog/all/clear/suc", function (b) {
        $("#btn-all-calllog-clear", b).attr("disabled", false);
        $.publish("[to:db]/event/calllog/all", [b])
    });
    $.subscribe("[to:db]/event/calllog/all/clear/fail", function (b) {
        $("#btn-all-calllog-clear", b).attr("disabled", false);
        showMsgBox(Airdroid.UsedLang.SMS._msgbox_clear_calllog_fail)
    });
    $.subscribe("[to:ui]/event/calllog/all/delete/byid/suc", function (b) {
        b.hide(300, function () {
            b.remove();
            a._capi.reinitialise()
        })
    });
    $.subscribe("[to:ui]/event/calllog/delete/some/partfail", function () {
        showMsgBox(Airdroid.UsedLang.SMS._calllogs_delete_part_err);
        EnableButton($("#btn-all-calllog-delete-selected"))
    })
}});
var SMSLoadAllOnce = false;
var SingleChatUILogic = Core.extend({_tpl_msg_item:null, _tpl_calllog_item:null, _tpl_contactinfo:null, _scroll_api_contactinfo:null, _contactInfoDataStore:{}, $construct:function () {
    var a = this;
    var b = this;
    this._tpl_msg_item = _.template($("#tpl-im-msg-item").html());
    this._tpl_calllog_item = _.template($("#tpl-im-calllog-item").html());
    this._tpl_contactinfo = _.template($("#tpl-im-contactinfo-item").html());
    this._loading_tpl = '<div style="display: block;margin:0 auto;margin-top: 160px;width: 121px;"><img src="ui/theme/default/images/loading.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/loading.gif*/ valign="bottom"><a style="padding-left: 8px;"></a></div>';
    this._sms_loading_tpl = '<div class="msg-list-loading-mask" style="display: block;margin:0 auto;margin-top: 160px;width:90px;"><img src="ui/theme/default/images/loading.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/loading.gif*/ valign="bottom"><a class="center-tip" style="padding-left: 8px;"></a></div> ';
    this._calllog_no_record_tpl = '<div style="display: block;margin:0 auto;margin-top: 146px;width: 132px;"><img src="ui/theme/default/images/no_data.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/no_data.png*/ valign="middle"></div>';
    this._calllog_fail_tpl = '<div style="display: block;margin:0 auto;margin-top: 160px;width: 121px;"><img src="ui/theme/default/images/file_delete.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/file_delete.png*/ valign="middle" style="width: 25px;"><a class="center-tip" style="padding-left: 8px;">' + Airdroid.UsedLang.SMS._common_network_error + "</a></div>";
    this._contact_fail_tpl = '<div style="display: block;margin:0 auto;margin-top: 160px;width: 140px;"><img src="ui/theme/default/images/contact-icon.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/contact-icon.png*/ valign="middle" style="width: 36px;"><a class="center-tip" style="padding-left: 8px;">' + Airdroid.UsedLang.SMS._plain_text_no_info + "</a></div>";
    $(".msg-send").live("click", function () {
        var f = $(this).closest(".single-chat-container");
        if (f.find(".msg-list-loading-mask").length == 1) {
            showMsgBox(Airdroid.UsedLang.SMS._msgbox_sms_loading_cannot_operate);
            return
        }
        var c = f.attr("dest");
        var e = f.find(".msg-text").val();
        f.find(".msg-text").addClass("bgLightBlue").attr("disabled", true);
        $(this).attr("disabled", true);
        a.Scroll2Bottom(f);
        $.publish("[to:db]/event/chat/single/send", [f, c, e])
    });
    $(".msg-item-delete").live("click", function () {
        var f = $(this).closest(".msg-item");
        var c = f.attr("sid");
        var e = false;
        if (f.is(":last")) {
            e = true
        }
        showConfirmBox(Airdroid.UsedLang.SMS._confirmbox_del_single_sms, function () {
            f.addClass("bgLightBlue");
            $.publish("[to:db]/event/chat/single/delmsg/byid", [f, c, e])
        })
    });
    $(".msg-item-repeat").live("click", function () {
        var c = $(this).closest(".msg-item").find(".msg-item-body pre").text();
        $.publish("[to:ui]/event/newsms/repeat", [c])
    });
    $(".single-chat-window .calllog-delete").live("click", function () {
        var c = this;
        showConfirmBox(Airdroid.UsedLang.SMS._confirmbox_delete_this_calllog, function () {
            $(c).closest(".calllog-item").css("text-decoration", "line-through");
            $.publish("[to:db]/event/chat/single/calllog/delete/byid", [$(c).attr("cid"), $(c).closest(".calllog-item")])
        }, function () {
        })
    });
    $(".contactinfo-contact-phone-add").live("click", function () {
        var e = $(this).closest(".contactinfo-content");
        var f = $(this).closest(".contactinfo-contact-phone-container");
        var c = a._tpl_contactinfo_phone_item.clone();
        c.find(".contactinfo-contact-phone-del", e).removeClass("hide");
        f.after(c);
        $(".contactinfo-contact-phone-item", e).find(".contactinfo-contact-phone-del").attr("disabled", false);
        $(".contactinfo-contact-phone-item", e).find(".contactinfo-contact-phone-add").addClass("hide");
        $(".contactinfo-contact-phone-item:last", e).find(".contactinfo-contact-phone-add").removeClass("hide");
        e.closest(".contactinfo").trigger("jresize")
    });
    $(".contactinfo-contact-phone-del").live("click", function () {
        var c = $(this).closest(".contactinfo-content");
        var e = $(this).closest(".contactinfo-contact-phone-container");
        e.remove();
        if ($(".contactinfo-contact-phone-item", c).size() == 1) {
            $(".contactinfo-contact-phone-item", c).find(".contactinfo-contact-phone-del").attr("disabled", true)
        }
        $(".contactinfo-contact-phone-item", c).find(".contactinfo-contact-phone-add").addClass("hide");
        $(".contactinfo-contact-phone-item:last", c).find(".contactinfo-contact-phone-add").removeClass("hide");
        c.closest(".contactinfo").trigger("jresize")
    });
    $(".contact-info-create-or-save").live("click", function () {
        var s = this;
        var o = $(this).closest(".contactinfo");
        var g = o.find(".contactinfo-content").attr("actiontype") == "0" ? true : false;
        if (g) {
            var q = b._contactInfoDataStore[o.attr("udid")];
            if (_.isEmpty(q)) {
                showMsgBox(Airdroid.UsedLang.SMS._msgbox_no_edit_contact_info_cannot_edit);
                return false
            }
            var e = $.trim($(".contactinfo-contact-name", o).val());
            var p = $.trim($(".contactinfo-contact-note", o).val());
            var c = [];
            var f = true;
            $(".contactinfo-contact-phone-item", o).each(function () {
                c.push($.trim($(this).find(".contactinfo-contact-phone").val()));
                if ($.trim($(this).find(".contactinfo-contact-phone").val()) == "") {
                    $(this).find(".contactinfo-contact-phone-tip").removeClass("hide");
                    f = false
                }
            });
            c = _.compact(c);
            if (e == "") {
                $(".contactinfo-contact-name-tip", o).removeClass("hide")
            }
            if (e == "" || f == false || c.length == 0) {
                return false
            } else {
                var n = q;
                var l = {};
                l.id = n.id;
                l.mode = 2;
                l.name = {mode:2, display_name:e, id:n.name.id};
                l.phones = [];
                var j = n.notes[0] != undefined;
                if (j) {
                    l.notes = [
                        {mode:2, id:n.notes[0].id, data:encodeURI($.trim($(".contactinfo-contact-note", o).val()))}
                    ]
                } else {
                    l.notes = [
                        {mode:1, data:encodeURI($.trim($(".contactinfo-contact-note", o).val()))}
                    ]
                }
                if (c.length < n.phones.length) {
                    for (var k = 0; k < c.length; k++) {
                        l.phones[k] = {id:n.phones[k].id, data:n.phones[k].data, mode:2, type:parseInt($(".phone-type", o).eq(k).val())}
                    }
                    for (var k = c.length; k < n.phones.length; k++) {
                        l.phones[k] = {mode:3, id:n.phones[k].id}
                    }
                } else {
                    if (c.length > n.phones.length) {
                        for (var k = 0; k < n.phones.length; k++) {
                            l.phones[k] = {id:n.phones[k].id, data:n.phones[k].data, mode:2, type:parseInt($(".phone-type", o).eq(k).val())}
                        }
                        for (var k = n.phones.length; k < c.length; k++) {
                            l.phones[k] = {};
                            l.phones[k].mode = 1;
                            l.phones[k].type = parseInt($(".phone-type", o).eq(k).val());
                            l.phones[k].data = c[k]
                        }
                    } else {
                        if (c.length == n.phones.length) {
                            for (var k = 0; k < c.length; k++) {
                                l.phones[k] = {};
                                l.phones[k].id = n.phones[k].id;
                                l.phones[k].mode = 2;
                                l.phones[k].type = parseInt($(".phone-type", o).eq(k).val());
                                l.phones[k].data = c[k]
                            }
                        }
                    }
                }
                DisableButton($(s));
                $.publish("[to:db]/event/contactinfo/save", [l, o])
            }
            return false
        } else {
            var r = this;
            var e = $.trim($(".contactinfo-contact-name", o).val());
            var p = $.trim($(".contactinfo-contact-note", o).val());
            var c = [];
            var f = true;
            $(".contactinfo-contact-phone-item", o).each(function () {
                c.push($.trim($(this).find(".contactinfo-contact-phone").val()));
                if ($.trim($(this).find(".contactinfo-contact-phone").val()) == "") {
                    $(this).find(".contactinfo-contact-phone-tip").removeClass("hide");
                    f = false
                }
            });
            c = _.compact(c);
            if (e == "") {
                $(".contactinfo-contact-name-tip", o).removeClass("hide")
            }
            if (e == "" || f == false || c.length == 0) {
                return false
            } else {
                var l = {};
                l.id = 1;
                l.name = {mode:1, display_name:e};
                l.phones = [];
                _.each(c, function (t) {
                    l.phones.push({mode:1, data:encodeURI($.trim(t))})
                });
                l.notes = [
                    {mode:1, data:encodeURI($.trim($(".contactinfo-contact-note", o).val()))}
                ];
                var m = parseInt($(".contactinfo-contact-group-selector option:selected", o).val());
                var h = $(".contactinfo-contact-group-selector option:selected", o).attr("gid");
                if (m != -1) {
                    l.groups = [
                        {mode:1, group_id:m}
                    ]
                } else {
                    h = "-1"
                }
                DisableButton($(s));
                $.publish("[to:db]/event/contactinfo/create", [l, h, o])
            }
        }
    });
    $(".contact-info-cancel").live("click", function () {
        $(this).closest(".window").find(".window-x").trigger("click")
    })
}, HaveWindow:function (b, a, f) {
    if ($("#w_" + b).length == 1) {
        return 1
    }
    if (a != undefined && !_.isEmpty(a)) {
        if ($('.single-chat-window[lockid*="' + windowNameTrim(a) + '"]').length == 1) {
            var c = $('.single-chat-window[lockid*="' + windowNameTrim(a) + '"]').attr("lockid");
            var e = c.split(",");
            if (_.any(e, function (g) {
                return g == a
            })) {
                return $('.single-chat-window[lockid*="' + windowNameTrim(a) + '"]').attr("id")
            }
        }
    }
    if (!_.isUndefined(f) && f != -1) {
        if ($('.single-chat-container[tid="' + f + '"]').length == 1) {
            return $('.single-chat-container[tid="' + f + '"]').closest(".single-chat-window").attr("id")
        }
        if ($('.phoneselect option[tid="' + f + '"]').length == 1) {
            return $('.phoneselect option[tid="' + f + '"]').closest(".single-chat-window").attr("id")
        }
    }
    return 0
}, _new_sms_query_pending:{}, NewSMSForceAppend:function (c, a, g, f) {
    if (!_.isEmpty(c.attr("dirty")) && c.attr("dirty") == "false") {
        return
    }
    var b = parseInt(c.find(".msg-item:last").attr("ut")) + 1;
    if (!_.isEmpty(g) && c.find(".msg-item").length == 0) {
        b = g - 1
    }
    if (_.isNaN(b)) {
        b = ""
    }
    $("#nns" + windowNameTrim(idFilter(a))).attr("ut", b);
    if (c.find(".chaticon select").length == 0) {
        var e = c.find(".chaticon a").attr("tid")
    } else {
        var e = c.find(".chaticon select option:selected").attr("tid")
    }
    if (e == -1) {
        $.publish("[to:db]/evnet/chat/single/tid/bynumber", [a, c])
    } else {
        $.publish("[to:db]/event/sms/query/new", [c, e, b, true])
    }
}, StartChatWithSingle:function (m, j, v, c, a, h, q) {
    var n = this;
    var t = "sc_" + windowNameTrim(j);
    var f = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/contacts/image/bynumber/?number=" + j;
    var u = this.HaveWindow(t, j, m);
    Airdroid.NewSMSCount[j] = 0;
    $.publish("[to:ui]/e/nw/dpl/remove", ["nns" + windowNameTrim(idFilter(j))]);
    if (u == 1) {
        $.publish("/e/t/bid", ["add", t, {name:v, iconUrl:f}, true]);
        if (!$("#w_" + t).is(":visible")) {
            $("#m" + t).trigger("click")
        }
        $(".msg-list", $("#w_" + t)).trigger("jresize").trigger("jScrollBottom");
        if (a != undefined && a == true) {
            var b = $("#" + t);
            if (b.attr("multi") != undefined && b.attr("multi") == "1") {
                if (b.find(".phoneselect").val() == j || b.find(".phoneselect option:selected").attr("tid") == m) {
                    n.NewSMSForceAppend(b, j, q)
                } else {
                    b.find('.phoneselect option[value="' + j + '"]').attr("selected", true).closest(".phoneselect").trigger("change")
                }
            } else {
                if (b.find(".msg-item").length == 0) {
                    b.find(".chaticon a").attr("tid", m)
                }
                n.NewSMSForceAppend(b, j, q)
            }
        }
    } else {
        if (u == 0) {
            if (!_.isUndefined(h) && h == true) {
                return
            }
            var r = _.template($("#tpl-im-chatsingle").html());
            var e = $(r({id:m, dest:j, UsedLang:Airdroid.UsedLang.SMS}));
            e.attr("id", t);
            e.attr("lockid", windowNameTrim(j));
            e.appendTo($("#main_container"));
            Windownize(e, {title:v, icon:f, minWidth:640, minHeight:500, resize:function (B, z) {
                var y = z.helper;
                var x = y.width() - 23;
                var w = y.height() - 46;
                var A = e;
                A.css("width", x + "px");
                A.css("height", w + "px");
                e.find(".single-chat-container").css("width", x + "px");
                e.find(".single-chat-chat-bottom-mask").css("width", x + 14 + "px");
                e.find(".single-chat-container").css("height", w - 40 + "px");
                e.find(".single-chat-container > table").css("width", x + "px");
                e.find(".msg-list").css("width", x + "px");
                e.find(".msg-list > div").css("width", x + "px");
                e.find(".msg-more").css("width", x - 18 + "px");
                e.find(".msg-list").css("height", w - 160 + "px");
                e.find(".msg-list-l-patch").css("height", w - 160 + "px");
                e.find(".msg-list-r-patch").css("height", w - 160 + "px");
                e.find(".msg-list").trigger("jresize");
                e.find(".single-chat-contactinfo-bottom-mask").css("width", x + 14 + "px");
                e.find(".contactinfo .jspContainer").css("width", x + "px");
                e.find(".contactinfo .jspPane").css("width", x + "px");
                e.find(".contactinfo").css("height", w - 86 + "px");
                e.find(".contactinfo").trigger("jresize");
                e.find(".contactinfo").css("width", x + "px");
                e.find(".calllogwrap").css("width", x + "px");
                e.find(".calllogwrap").css("height", w - 40 + "px");
                e.find(".calllog").css("height", w - 65 + "px");
                e.find(".calllog").trigger("jresize")
            }});
            center(e.closest(".window"));
            e.closest(".window").find(".window-x").click(function () {
                n._contactInfoDataStore[e.find(".contactinfo").attr("udid")] = null;
                e.closest(".window").remove()
            });
            e.find(".msg-text").bind("keyup",function () {
                var w = this;
                e.find(".chat-sms-counter").html(SMSWordCounter($(w).val()));
                if ($(this).val() != "") {
                    EnableButton(e.find(".msg-send"))
                } else {
                    DisableButton(e.find(".msg-send"))
                }
            }).bind("keydown", function (w) {
                if (!w.shiftKey && w.keyCode == 13) {
                    e.find(".msg-send").trigger("click");
                    return false
                }
            });
            $(".msg-more-one-page", e).click(function () {
                $.publish("[to:db]/event/chat/single/next", [m, new Number($(".msg-item:first", e).attr("ut")), false, e])
            });
            $(".msg-more-all", e).click(function () {
                $.publish("[to:db]/event/chat/single/next", [m, new Number($(".msg-item:first", e).attr("ut")), false, e, true])
            });
            var k = $(".msg-list", e).jScrollPane({animateScroll:true, verticalDragMinHeight:18});
            var o = k.data("jsp");
            o.reinitialise();
            $(".msg-list", e).bind("jresize", function () {
                o.reinitialise()
            });
            $(".msg-list", e).bind("jScrollBottom", function () {
                o.scrollToBottom(false)
            });
            var g = $(".calllog", e).jScrollPane({animateScroll:true, verticalDragMinHeight:18});
            var s = g.data("jsp");
            s.reinitialise();
            $(".calllog", e).bind("jresize", function () {
                s.reinitialise()
            });
            var p = $(".contactinfo", e).jScrollPane({animateScroll:true, verticalDragMinHeight:18});
            var l = p.data("jsp");
            l.reinitialise();
            $(".contactinfo", e).bind("jresize", function () {
                l.reinitialise();
                e.find(".contactinfo").css("width", e.closest(".window").width() - 23 + "px")
            });
            $(".single-chat-refresh-current", e).click(function () {
                var x = $(".tabs > div", e).index($(".tab_current", e));
                if (x == 0) {
                    if ($(".msg-list", e).attr("load") != undefined && $(".msg-list", e).attr("load") == "true") {
                        $(".msg-item-wrapper", e).remove();
                        $(".msg-more", e).after(n._sms_loading_tpl);
                        $(".msg-list", e).trigger("jresize");
                        if (e.find(".chaticon select").length == 0) {
                            var y = e.find(".chaticon a").attr("tid");
                            var w = e.find(".chaticon a").html()
                        } else {
                            var y = e.find(".chaticon select option:selected").attr("tid");
                            var w = e.find(".chaticon select option:selected").val()
                        }
                        if (y == -1) {
                            $.publish("[to:db]/evnet/chat/single/tid/bynumber", [w, e])
                        } else {
                            if (SMSLoadAllOnce) {
                                $.publish("[to:db]/event/chat/single/next", [y, , true, e, true])
                            } else {
                                $.publish("[to:db]/event/chat/single/next", [y, , true, e])
                            }
                        }
                    } else {
                        showMsgBox(Airdroid.UsedLang.SMS._msgbox_sms_loading_cannot_operate)
                    }
                } else {
                    if (x == 1) {
                        $(".contactinfo", e).attr("load", "false");
                        $(".tab_current", e).find("a[href]").trigger("click")
                    } else {
                        if (x == 2) {
                            $(".calllogwrap", e).attr("load", "false");
                            $(".tab_current", e).find("a[href]").trigger("click")
                        }
                    }
                }
            });
            $(".single-chat-tab-selector", e).idTabs({selected:".single-chat-tab-selected", click:function (z) {
                e.trigger("click");
                $(".im-chatsingle-content", e).addClass("hide");
                var y = $("." + z.substr(1), e);
                y.removeClass("hide");
                var x = $('a[href="' + z + '"]', e);
                x.closest(".single-chat-tab-selector").find(".tab_current").attr("class", "tab");
                x.parents(".tab").attr("class", "tab_current");
                switch (z) {
                    case"#chat":
                        $(".msg-list", e).trigger("jresize").trigger("jScrollBottom");
                        break;
                    case"#contactinfo":
                        if (y.attr("load") != "true") {
                            y.find(".single-chat-contactinfo-bottom-mask").remove();
                            y.find(".jspPane").html(n._loading_tpl);
                            var w = $(".chat", e).attr("dest");
                            $.publish("[to:db]/event/chat/single/contactinfo", [e, w, v]);
                            y.attr("load", "true")
                        }
                        break;
                    case"#calllogwrap":
                        if (y.attr("load") != "true") {
                            s.getContentPane().html(n._loading_tpl);
                            var w = $(".chat", e).attr("dest");
                            $.publish("[to:db]/event/chat/single/calllog", [e, w]);
                            y.attr("load", "true")
                        }
                        s.reinitialise();
                        break
                }
            }});
            $(".tab_c", e).click(function () {
                $(this).find("a").trigger("click")
            });
            if (m != undefined && m != -1) {
                $.publish("[to:db]/event/sms/markreaded/bythreadid", [m])
            }
            $('a[href="#chat"]', e).html(j).attr("tid", m);
            $.publish("/e/t/bid", ["add", t, {name:v, iconUrl:f}, true]);
            $("#m" + t).trigger("click");
            o.reinitialise();
            $(".msg-more", e).after(n._sms_loading_tpl);
            if (m != -1) {
                if (SMSLoadAllOnce) {
                    $.publish("[to:db]/event/chat/single/next", [m, , true, e, true])
                } else {
                    $.publish("[to:db]/event/chat/single/next", [m, , true, e])
                }
            } else {
                $(".msg-more", e).addClass("hide")
            }
            $.publish("[to:db]/event/chat/single/allphone/byphone", [j, e, v]);
            if (m == -1 && !_.isUndefined(c) && c == true) {
                $.publish("[to:db]/evnet/chat/single/tid/bynumber", [j, e])
            } else {
                if (m == -1) {
                    $.publish("[to:db]/evnet/chat/single/tid/bynumber", [j, e, true])
                }
            }
        } else {
            $.publish("/e/t/bid", ["add", u, {name:v, iconUrl:f}, true]);
            if (!$("#w_" + u).is(":visible")) {
                $("#m" + t).trigger("click")
            }
            $(".msg-list", $("#w_" + u)).trigger("jresize").trigger("jScrollBottom");
            if (a != undefined && a == true) {
                var b = $("#" + u);
                if (b.attr("multi") != undefined && b.attr("multi") == "1") {
                    if (b.find(".phoneselect").val() == j || b.find(".phoneselect option:selected").attr("tid") == m) {
                        n.NewSMSForceAppend(b, j, q)
                    } else {
                        b.find('.phoneselect option[value="' + j + '"]').attr("selected", true).closest(".phoneselect").trigger("change")
                    }
                } else {
                    if (b.find(".msg-item").length == 0) {
                        b.find(".chaticon a").attr("tid", m)
                    }
                    n.NewSMSForceAppend(b, j, q)
                }
            }
        }
    }
}, _sending_gif:'<img src="ui/theme/default/images/sending.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/sending.gif*/>', _sending_err_gif:'<span style="display: inline-block;width: 12px;height: 13px;background: transparent url(./ui/theme/default/images/until.png) no-repeat -113px -402px;cursor:pointer;" title="Failed"></span>', SendMsgSuc:function (h, a, g, j, b, f) {
    h.find(".msg-text").removeClass("bgLightBlue").val("").attr("disabled", false).trigger("keyup");
    h.find(".msg-send").attr("disabled", false);
    var e = {id:j, name:"Me", body:g, date:b, type:2, df:f};
    var c = $(this._tpl_msg_item(e));
    c.find(".msg-item-status").html(this._sending_gif);
    c.find(".msg-item-delete").attr("disabled", true);
    c.find(".msg-item-date").html(f);
    c.appendTo($(".msg-list .jspPane", h));
    $(".msg-list", h).trigger("jresize");
    this.Scroll2Bottom(h)
}, SendMsgFail:function (c, a, b) {
    c.find(".msg-text").removeClass("bgLightBlue").attr("disabled", false);
    c.find(".msg-send").attr("disabled", false);
    c.find(".msg-text").removeClass("bgLightRed");
    c.find(".msg-item-status").html(this._sending_err_gif)
}, SendMsgFailNetErr:function (c, a, b) {
    c.find(".msg-text").removeClass("bgLightBlue").attr("disabled", false);
    c.find(".msg-send").attr("disabled", false);
    c.find(".msg-text").removeClass("bgLightRed")
}, Scroll2Bottom:function (a) {
    $(".msg-list", a).trigger("jScrollBottom")
}, MoreBatchAdd:function (a, c, k, g) {
    if (_.isEmpty(c)) {
        g.find(".msg-list").attr("load", "true")
    }
    var j = this;
    var b = g;
    if (b.attr("forceStop") != undefined && b.attr("forceStop") != a) {
        return false
    }
    var h = "";
    _.each(c, function (l) {
        h = j._tpl_msg_item(l) + h
    });
    h = $(h);
    $(".msg-more", b).after(h);
    $(".msg-more", b).removeClass("hide");
    $(".msg-list", b).trigger("jresize");
    if (k) {
        this.Scroll2Bottom(b)
    }
    var e = $(".msg-item:last", b).position().top + $(".msg-item:last", b).height() + 10;
    var f = e - $(".msg-list", b).height() > 0;
    if (!f && $(".msg-item", b).length > 0) {
        $.publish("[to:db]/event/chat/single/next", [a, new Number($(".msg-item:first", b).attr("ut")), k, g])
    } else {
        g.find(".msg-list").attr("load", "true")
    }
}, EndBatchAdd:function (h, g, c, f) {
    if (_.isEmpty(g)) {
        f.find(".msg-list").attr("load", "true")
    }
    var a = this;
    var e = f;
    if (e.attr("forceStop") != undefined && e.attr("forceStop") != h) {
        e.attr("forceStop", "false");
        return false
    }
    var b = "";
    _.each(g, function (j) {
        b = a._tpl_msg_item(j) + b
    });
    b = $(b);
    $(".msg-more", e).after(b);
    $(".msg-more", e).addClass("hide");
    $(".msg-list", e).trigger("jresize");
    if (c) {
        this.Scroll2Bottom(e)
    }
    f.find(".msg-list").attr("load", "true")
}, DeleteSMSByIdSuc:function (c, e, b) {
    var a = c.closest(".msg-list");
    c.hide(300, function () {
        $(this).closest(".msg-item-wrapper").remove();
        a.trigger("jresize")
    })
}, DeleteSMSByIdFail:function (b, c, a) {
    b.removeClass("bgLightBlue").addClass("bgLightRed")
}, ReadCalllogSuc:function (h, a, g) {
    var c = h.closest(".window").find(".window-title").html();
    var b = this;
    var f = $(".calllog .jspPane", h);
    if (g.length == 0) {
        f.html(b._calllog_no_record_tpl);
        return false
    }
    var e = "";
    _.each(g, function (j) {
        j.name = c;
        e += b._tpl_calllog_item(j)
    });
    e = $(e);
    e.find(".calllog-status-icon").each(function () {
        var j = $(this).attr("ctype");
        if (j == "1") {
            $(this).addClass("calllog-status-icon-in");
            $(this).parent().find(".calllog-status-text").html("Listen ")
        } else {
            if (j == "2") {
                $(this).addClass("calllog-status-icon-out");
                $(this).parent().find(".calllog-status-text").html("Call ")
            } else {
                if (j == "3") {
                    $(this).addClass("calllog-status-icon-miss");
                    $(this).parent().find(".calllog-status-text").html("Miss ");
                    $(this).parent().find(".calllog-duration").addClass("hide")
                }
            }
        }
    });
    f.html(e);
    $(".calllog", h).trigger("jresize")
}, ReadCalllogFail:function (c, a) {
    var b = $(".calllog .jspPane", c);
    b.html("");
    $(".calllog", c).trigger("jresize")
}, ReadContactInfoSuc:function (a, j, f) {
    this._contactInfoDataStore[a.find(".contactinfo").attr("udid")] = null;
    try {
        a.closest(".window").find(".window-title").html(f.name.display_name);
        $("#m" + a.attr("id")).find("span").html(f.name.display_name)
    } catch (k) {
    }
    a.attr("lockid", _.pluck(f.phones, "data").join(","));
    var o = this;
    var g = a.find(".contactinfo .jspPane");
    try {
        f.UsedLang = Airdroid.UsedLang.SMS;
        f.actiontype = 0;
        f.actionbutton = "Save";
        var b = o._tpl_contactinfo(f);
        g.html(b);
        o._tpl_contactinfo_phone_item = g.find(".contactinfo-contact-phone-container").clone();
        if (!_.isEmpty(f.phones)) {
            var n = f.phones[0];
            var l = a.find(".contactinfo-contact-phone-container").eq(0);
            l.find('.phone-type option[value="' + n.type + '"]').attr("selected", true);
            l.find(".contactinfo-contact-phone").val(n.data);
            if (f.phones.length > 1) {
                for (var e = 1; e < f.phones.length; e++) {
                    a.find(".contactinfo-contact-phone-add").eq(e - 1).trigger("click");
                    var m = f.phones[e];
                    var h = a.find(".contactinfo-contact-phone-container").eq(e);
                    h.find('.phone-type option[value="' + m.type + '"]').attr("selected", true);
                    h.find(".contactinfo-contact-phone").val(m.data)
                }
            }
        }
        var c = _.uniqueId("ctid");
        o._contactInfoDataStore[c] = f;
        a.find(".contactinfo").attr("udid", c);
        g.find(".single-chat-contactinfo-bottom-mask").appendTo(a.find(".contactinfo"))
    } catch (k) {
        g.html("An error occurred.")
    }
}, ReadContactInfoEmpty:function (c, a) {
    var b = c.find(".contactinfo .jspPane");
    b.html(this._tpl_contactinfo({actiontype:1, actionbutton:"Create", name:{display_name:""}, photo_url:"ui/theme/default/images/contact30X30.jpg.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/contact30X30.jpg*/, UsedLang:Airdroid.UsedLang.SMS, notes:[]}));
    this._tpl_contactinfo_phone_item = b.find(".contactinfo-contact-phone-container").clone();
    c.find(".contactinfo-contact-phone-container").eq(0).find(".contactinfo-contact-phone").val(a);
    b.find(".single-chat-contactinfo-bottom-mask").appendTo(c.find(".contactinfo"))
}, ReadContactInfoFail:function (c, a) {
    var b = c.find(".contactinfo .jspPane");
    b.html("An error occurred.")
}, CreateMultiPhonesSelector:function (f, j) {
    var k = "";
    var e = $('<select class="phoneselect"></select>');
    _.each(f, function (a) {
        e.append('<option value="' + a + '">' + a + "</options>");
        k += a + ","
    });
    k = k.substr(0, k.length - 1);
    j.attr("lockid", k).attr("multi", "1");
    var h = j.find(".chaticon > a");
    h.removeClass("limitwidth");
    var g = h.html();
    var b = h.attr("tid");
    if (e.find('option[value="' + g + '"]').length != 0) {
        e.find('option[value="' + g + '"]').attr("selected", "selected");
        e.find('option[value="' + g + '"]').attr("tid", b)
    } else {
        e.find("option").eq(0).attr("selected", "selected");
        e.find("option").eq(0).attr("tid", "-1")
    }
    e.bind("change", function () {
        if ($("option:selected", $(this)).attr("tid") != undefined) {
            var a = $("option:selected", $(this)).attr("tid");
            j.attr("forceStop", a);
            if (a != -1) {
                j.find(".msg-item-wrapper").remove();
                if (SMSLoadAllOnce) {
                    $.publish("[to:db]/event/chat/single/next", [a, , true, j, true])
                } else {
                    $.publish("[to:db]/event/chat/single/next", [a, , true, j])
                }
            } else {
                j.find(".msg-item-wrapper").remove();
                $(".msg-more", j).addClass("hide")
            }
        } else {
            $.publish("[to:db]/evnet/chat/single/tid/bynumber", [$(this).val(), j])
        }
        $(".msg-list", j).trigger("jresize")
    });
    var c = $('<div class="phoneselectOver"></div>').append(e);
    h.html(c)
}, FreshChatContent:function (b, e, c, a) {
    if (e == -1) {
        c.find(".msg-list").attr("load", "true")
    }
    $(".msg-list-loading-mask", c).remove();
    c.attr("forceStop", e);
    c.find('.chaticon select option[value="' + b + '"]').attr("tid", e);
    c.find(".single-chat-container").attr("tid", e);
    c.find(".chaticon > a").attr("tid", e);
    if (a != undefined && a == true) {
        $(".msg-list", c).trigger("jresize");
        return
    }
    if (e != undefined && e != -1) {
        c.find(".msg-item").remove();
        if (SMSLoadAllOnce) {
            $.publish("[to:db]/event/chat/single/next", [e, , true, c, true])
        } else {
            $.publish("[to:db]/event/chat/single/next", [e, , true, c])
        }
    } else {
        c.find(".msg-item").remove();
        $(".msg-more", c).addClass("hide")
    }
    $(".msg-list", c).trigger("jresize")
}, FrontNewSMSRender:function (j, k, g, n, f, c, m) {
    var p = this;
    var o = "sc_" + windowNameTrim(k);
    var b = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/contacts/image/bynumber/?number=" + k;
    var l = this.HaveWindow(o, k, j);
    if (l == 1) {
        var e = function () {
            var q = $("#m" + o);
            if (q.hasClass("active")) {
                setTimeout(function () {
                    $(".msg-list", $("#w_" + o)).trigger("jresize").trigger("jScrollBottom");
                    Airdroid.NewSMSCount[k] = 0;
                    $.publish("[to:ui]/e/nw/dpl/remove", ["nns" + windowNameTrim(idFilter(k))]);
                    q.unbind("click", e);
                    $.publish("[to:wdg]/event/title/clear/dym", [])
                }, 100)
            }
        };
        $("#m" + o).bind("click", e);
        if (f != undefined && f == true) {
            var h = $("#" + o);
            h.closest(".window").one("click", function () {
                Airdroid.NewSMSCount[k] = 0;
                $.publish("[to:ui]/e/nw/dpl/remove", ["nns" + windowNameTrim(idFilter(k))]);
                $.publish("[to:wdg]/event/title/clear/dym", [])
            });
            h.attr("dirty", "true");
            if (h.attr("multi") != undefined && h.attr("multi") == "1") {
                if (h.find(".phoneselect").val() == k || h.find(".phoneselect option:selected").attr("tid") == j) {
                    p.NewSMSForceAppend(h, k, c, m)
                } else {
                    h.find('.phoneselect option[value="' + k + '"]').attr("selected", true).closest(".phoneselect").trigger("change")
                }
            } else {
                if (h.find(".msg-item").length == 0) {
                    h.find(".chaticon a").attr("tid", j)
                }
                p.NewSMSForceAppend(h, k, c, m)
            }
        }
    } else {
        if (l != 0) {
            var a = function () {
                var q = $("#m" + l);
                if (q.hasClass("active")) {
                    setTimeout(function () {
                        $(".msg-list", $("#w_" + l)).trigger("jresize").trigger("jScrollBottom");
                        Airdroid.NewSMSCount[k] = 0;
                        $.publish("[to:ui]/e/nw/dpl/remove", ["nns" + windowNameTrim(idFilter(k))]);
                        q.unbind("click", a);
                        $.publish("[to:wdg]/event/title/clear/dym", [])
                    }, 100)
                }
            };
            $("#m" + l).bind("click", a);
            if (f != undefined && f == true) {
                var h = $("#" + l);
                h.closest(".window").one("click", function () {
                    Airdroid.NewSMSCount[k] = 0;
                    $.publish("[to:ui]/e/nw/dpl/remove", ["nns" + windowNameTrim(idFilter(k))]);
                    $.publish("[to:wdg]/event/title/clear/dym", [])
                });
                h.attr("dirty", "true");
                if (h.attr("multi") != undefined && h.attr("multi") == "1") {
                    if (h.find(".phoneselect").val() == k || h.find(".phoneselect option:selected").attr("tid") == j) {
                        p.NewSMSForceAppend(h, k, c, m)
                    } else {
                        h.find('.phoneselect option[value="' + k + '"]').attr("selected", true).closest(".phoneselect").trigger("change")
                    }
                } else {
                    if (h.find(".msg-item").length == 0) {
                        h.find(".chaticon a").attr("tid", j)
                    }
                    p.NewSMSForceAppend(h, k, c, m)
                }
            }
        }
    }
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:ui]/event/chat/single", function (j, c, e, g, f, b, h) {
        a.StartChatWithSingle(j, c, e, g, f, b, h)
    });
    $.subscribe("[to:ui]/event/chat/single/send/suc", function (g, b, f, h, c, e) {
        a.SendMsgSuc(g, b, f, h, c, e)
    });
    $.subscribe("[to:ui]/event/chat/single/send/fail", function (e, b, c) {
        a.SendMsgFail(e, b, c)
    });
    $.subscribe("[to:ui]/event/chat/single/send/neterr", function (e, b, c) {
        a.SendMsgFailNetErr(e, b, c)
    });
    $.subscribe("[to:ui]/event/chat/single/msg/more", function (f, c, b, e) {
        a.MoreBatchAdd(f, c, b, e)
    });
    $.subscribe("[to:ui]/event/chat/single/msg/end", function (f, c, b, e) {
        a.EndBatchAdd(f, c, b, e)
    });
    $.subscribe("[to:ui]/event/chat/single/delmsg/byid/suc", function (c, e, b) {
        a.DeleteSMSByIdSuc(c, e, b)
    });
    $.subscribe("[to:ui]/event/chat/single/delmsg/byid/fail", function (c, e, b) {
        a.DeleteSMSByIdFail(c, e, b)
    });
    $.subscribe("[to:ui]/event/chat/single/calllog/suc", function (e, b, c) {
        a.ReadCalllogSuc(e, b, c)
    });
    $.subscribe("[to:ui]/event/chat/single/calllog/fail", function (c, b) {
        a.ReadCalllogFail(c, b)
    });
    $.subscribe("[to:ui]/event/chat/single/contactinfo/suc", function (e, b, c) {
        a.ReadContactInfoSuc(e, b, c)
    });
    $.subscribe("[to:ui]/event/chat/single/contactinfo/fail", function (c, b) {
        a.ReadContactInfoFail(c, b)
    });
    $.subscribe("[to:ui]/event/chat/single/contactinfo/neterr", function (e, b) {
        var c = e.find(".contactinfo .jspPane");
        c.html("")
    });
    $.subscribe("[to:ui]/event/chat/single/allphone/byphone/movethan2", function (b, c) {
        a.CreateMultiPhonesSelector(b, c)
    });
    $.subscribe("[to:ui]/evnet/chat/single/tid/bynumber", function (c, e, f, b) {
        a.FreshChatContent(c, e, f, b)
    });
    $.subscribe("[to:ui]/event/chat/single/calllog/delete/byid/suc", function (b) {
        b.hide(300, function () {
            b.remove()
        })
    });
    $.subscribe("[to:ui]/event/chat/single/calllog/delete/byid/fail", function (b) {
        b.css("background-color", "red")
    });
    $.subscribe("[to:ui]/event/socket/sms/send/result", function (b) {
        if (b.result == 1) {
            $('.msg-item[sid="' + b.id + '"]').find(".msg-item-status").html("");
            $('.msg-item[sid="' + b.id + '"]').find(".msg-item-delete").attr("disabled", false)
        } else {
            $('.msg-item[sid="' + b.id + '"]').find(".msg-item-status").html(a._sending_err_gif);
            $('.msg-item[sid="' + b.id + '"]').find(".msg-item-delete").attr("disabled", false)
        }
    });
    $.subscribe("[to:ui]/event/sms/query/new/suc", function (g, j, h, e, c) {
        if (g.attr("forceStop") != undefined && g.attr("forceStop") != j) {
            g.attr("forceStop", "false");
            return false
        }
        e = _.reject(e, function (k) {
            return g.find('.msg-item[sid="' + k.id + '"]').length == 1
        });
        if (e.length == 0 && c == true) {
            if (Airdroid.LimitTimes[j + h] == undefined) {
                Airdroid.LimitTimes[j + h] = 5
            }
            if (Airdroid.LimitTimes[j + h] > 0) {
                setTimeout(function () {
                    $.publish("[to:db]/event/sms/query/new", [g, j, h, true]);
                    Airdroid.LimitTimes[j + h]--
                }, 1000);
                return
            } else {
                Airdroid.LimitTimes[j + h] = undefined
            }
        }
        var f = "";
        _.each(e, function (k) {
            f = a._tpl_msg_item(k) + f
        });
        f = $(f);
        $(".msg-list .jspPane", g).append(f);
        $(".msg-list", g).trigger("jresize").trigger("jScrollBottom");
        var b = _.debounce(function () {
            if (j != undefined && j != -1) {
                $.publish("[to:db]/event/sms/markreaded/bythreadid", [j])
            }
        }, 2000);
        if (c) {
            b()
        }
        g.attr("dirty", "false");
        if (c) {
        }
    });
    $.subscribe("[to:ui]/event/sms/query/new/fail", function (b, e, c) {
        showMsgBox(Airdroid.UsedLang.SMS._msgbox_new_sms_reading_error);
        b.attr("dirty", "false")
    });
    $.subscribe("[to:ui]/event/sms/query/new/neterr", function (b, e, c) {
        b.attr("dirty", "false")
    });
    $.subscribe("[to:ui]/event/front/new/sms/render", function (j, b, c, g, f, e, h) {
        a.FrontNewSMSRender(j, b, c, g, f, e, h)
    });
    $.subscribe("[to:ui]/event/socket/sms/changed", function (c, b) {
        if (!_.isUndefined(b) && b == true) {
            return
        }
        $.publish("[to:ui]/event/front/new/sms/render", [c.threadId, "Loading...", "Loading...", true, true, ""])
    });
    $.subscribe("[to:ui]/event/contactinfo/save/suc", function (b) {
        b.closest(".single-chat-window").find(".single-chat-refresh-btn").trigger("click");
        showDelayMask(Airdroid.UsedLang.SMS._msgbox_edit_contact_suc, b.closest(".window"));
        $.publish("[to:ui]/event/im/sprefresh", [])
    });
    $.subscribe("[to:ui]/event/contactinfo/save/fail", function (b) {
        showMsgBox(Airdroid.UsedLang.SMS._msgbox_save_contact_modify_error)
    });
    $.subscribe("[to:ui]/event/chat/single/contactinfo/empty", function (c, b) {
        a.ReadContactInfoEmpty(c, b)
    });
    $.subscribe("[to:ui]/event/contactinfo/create/suc", function (e, c, f) {
        f.closest(".single-chat-window").find(".single-chat-refresh-btn").trigger("click");
        showDelayMask(Airdroid.UsedLang.SMS._msgbox_new_contact_suc, f.closest(".window"));
        $.publish("[to:ui]/event/im/sprefresh", [])
    });
    $.subscribe("[to:ui]/event/contactinfo/create/fail", function () {
        showMsgBox(Airdroid.UsedLang.SMS._msgbox_new_contact_fail)
    });
    $.subscribe("[to:ui]/event/chat/single/msg/neterr", function (b) {
        b.find(".msg-list").attr("load", "true");
        b.find(".msg-more").addClass("hide")
    })
}});
var SingleChatJSLogic = Core.extend({_hostAddress:"", _preReadBlockSize:5, _readBlockSize:10, $construct:function (a) {
    this._hostAddress = a
}, DeleteSMSById:function (b, e, a) {
    var c = this._hostAddress + "/sdctl/sms/del/single/" + e + "?callback=?";
    ajaxHelper(c, function (f) {
        f = unescape(f);
        $.publish("[to:ui]/event/chat/single/delmsg/byid/suc", [b, e, a])
    }, function (f) {
        NetworkError();
        $.publish("[to:ui]/event/chat/single/delmsg/byid/fail", [b, e, a])
    })
}, SendMsg:function (h, a, g) {
    var b = this;
    var e = h.attr("tid");
    var c = {number:a, content:g, threadId:e};
    var f = UrlParamsFix(JSON.stringify(c));
    $.ajax({type:"POST", dataType:"json", url:b._hostAddress + "/sdctl/sms/send/single/", data:{data:'params={"content":"' + encode64(encodeURIComponent(f)) + '"}'}, success:function (j) {
        j = unescape(j);
        if (!_.isUndefined(j.id)) {
            $.publish("[to:ui]/event/chat/single/send/suc", [h, a, g, j.id, j.date, j.df]);
            $.publish("[to:ui]/event/smslist/new", [false, "send", {id:e, msg:g}])
        } else {
            $.publish("[to:ui]/event/chat/single/send/fail", [h, a, g])
        }
    }, error:function (j) {
        NetworkError();
        $.publish("[to:ui]/event/chat/single/send/neterr", [h, a, g])
    }})
}, ReadNextNRecordAndMark:function (b, e, k, g, c) {
    var h = [1, 2, 4, 5];
    g.find(".msg-list").attr("load", "false");
    var f = 1000;
    var j = this;
    var a = this._hostAddress + "/sdctl/sms/thread/" + b + "?pcount=" + (c ? f : this._readBlockSize) + "&time=" + (e - 1) + "&callback=?";
    if (e == undefined) {
        a = this._hostAddress + "/sdctl/sms/thread/" + b + "?pcount=" + (c ? f : this._readBlockSize) + "&callback=?"
    }
    ajaxHelper(a, function (m) {
        m = unescape(m);
        $(".msg-list-loading-mask", g).remove();
        var l = [];
        _.each(m.list, function (n) {
            if (_.indexOf(h, n.type) != -1) {
                l.push({id:n.id, name:n.name, body:n.body, date:n.date, type:n.type, df:n.df})
            }
        });
        if (c) {
            $.publish("[to:ui]/event/chat/single/msg/end", [b, l, k, g])
        } else {
            if (m.list.length < j._readBlockSize) {
                $.publish("[to:ui]/event/chat/single/msg/end", [b, l, k, g])
            } else {
                $.publish("[to:ui]/event/chat/single/msg/more", [b, l, k, g])
            }
        }
    }, function () {
        NetworkError();
        $(".msg-list-loading-mask", g).remove();
        $.publish("[to:ui]/event/chat/single/msg/neterr", [g])
    })
}, ReadCallLogByPhone:function (c, a) {
    var b = this;
    var e = this._hostAddress + "/sdctl/calllog/single/?number=" + a + "&callback=?";
    ajaxHelper(e, function (f) {
        f = unescape(f);
        _.each(f.list, function (g) {
            g.hostAddress = b._hostAddress
        });
        $.publish("[to:ui]/event/chat/single/calllog/suc", [c, a, f.list])
    }, function (f) {
        NetworkError();
        $.publish("[to:ui]/event/chat/single/calllog/fail", [c, a])
    })
}, ReadContactInfoByPhone:function (e, a, c) {
    var b = this;
    var f = this._hostAddress + "/sdctl/contacts/detail/bynumber/?number=" + a + "&callback=?";
    ajaxHelper(f, function (h) {
        h = unescape(h);
        var g = h;
        if (_.isUndefined(h.err) && h.list.length == 1) {
            h = h.list[0];
            h.photo_url = b._hostAddress + h.photo_url
        } else {
            if (_.isUndefined(h.err) && h.list.length > 1) {
                h = h.list[0];
                _.each(g.list, function (j) {
                    if (j.name.display_name == c) {
                        h = j
                    }
                });
                h.photo_url = b._hostAddress + h.photo_url
            } else {
                if (_.isUndefined(h.err) && h.list.length == 0) {
                    $.publish("[to:ui]/event/chat/single/contactinfo/empty", [e, a]);
                    return false
                } else {
                    if (!_.isUndefined(h.err)) {
                        $.publish("[to:ui]/event/chat/single/contactinfo/fail", [e, a]);
                        return false
                    }
                }
            }
        }
        $.publish("[to:ui]/event/chat/single/contactinfo/suc", [e, a, h])
    }, function (g) {
        NetworkError();
        $.publish("[to:ui]/event/chat/single/contactinfo/neterr", [e, a])
    })
}, ReadAllPhonesByOnePhone:function (a, e, c) {
    var b = this;
    var f = this._hostAddress + "/sdctl/contacts/detail/bynumber/?number=" + a + "&callback=?";
    ajaxHelper(f, function (j) {
        j = unescape(j);
        var k = j;
        var h = j;
        if (_.isUndefined(k.err) && k.list.length == 1) {
            k = k.list[0]
        } else {
            if (_.isUndefined(k.err) && k.list.length > 1) {
                k = k.list[0];
                _.each(h.list, function (m) {
                    if (m.name.display_name == c) {
                        k = m
                    }
                })
            } else {
                if (_.isUndefined(k.err) && k.list.length == 0) {
                    return false
                } else {
                    if (!_.isUndefined(k.err)) {
                        return false
                    }
                }
            }
        }
        var l = k.phones;
        if (l.length > 1) {
            var g = [];
            _.each(l, function (m) {
                g.push(m.data)
            });
            $.publish("[to:ui]/event/chat/single/allphone/byphone/movethan2", [g, e])
        }
        $.publish("[to:ui]/event/chat/single/contactinfo/suc", [e, a, k])
    }, function () {
        NetworkError()
    })
}, GetThreadidByNumber:function (b, c, a) {
    var e = this._hostAddress + "/sdctl/sms/query/thread_id/?number=" + b + "&callback=?";
    ajaxHelper(e, function (f) {
        f = unescape(f);
        $.publish("[to:ui]/evnet/chat/single/tid/bynumber", [b, f.result, c, a])
    }, function () {
        NetworkError()
    })
}, DeleteCalllogById:function (c, a) {
    var b = this._hostAddress + "/sdctl/calllog/delete/" + c + "?callback=?";
    ajaxHelper(b, function (e) {
        data = unescape(e);
        $.publish("[to:ui]/event/chat/single/calllog/delete/byid/suc", [a])
    }, function (e) {
        NetworkError()
    })
}, QueryNewSMS:function (b, e, c, a) {
    var f = this._hostAddress + "/sdctl/sms/thread/" + e + "?pcount=1000&time=" + c + "&order=1&callback=?";
    ajaxHelper(f, function (h) {
        h = unescape(h);
        if (h.err != undefined) {
            $.publish("[to:ui]/event/sms/query/new/fail", [b, e, c])
        } else {
            var g = [];
            _.each(h.list, function (j) {
                j.type = j.type == 1 ? 1 : 2;
                g.push({id:j.id, name:j.name, body:j.body, date:j.date, type:j.type, df:j.df})
            });
            $.publish("[to:ui]/event/sms/query/new/suc", [b, e, c, g, a])
        }
    }, function (g) {
        NetworkError();
        $.publish("[to:ui]/event/sms/query/new/neterr", [b, e, c])
    })
}, SaveContactModify:function (c, a) {
    var b = this;
    var e = this._hostAddress + '/sdctl/contacts/edit/?params={"content":"' + encode64(encodeURIComponent(JSON.stringify(c))) + '"}&callback=?';
    ajaxHelper(e, function (f) {
        f = unescape(f);
        if (!_.isUndefined(f.result) && f.result == "ok") {
            $.publish("[to:ui]/event/contactinfo/save/suc", [a]);
            return false
        }
        $.publish("[to:ui]/event/contactinfo/save/fail", [a])
    }, function (f) {
        NetworkError()
    })
}, CreateNewContact:function (c, b, e) {
    var a = this;
    var f = this._hostAddress + '/sdctl/contacts/edit/?params={"content":"' + encode64(encodeURIComponent(JSON.stringify(c))) + '"}&callback=?';
    ajaxHelper(f, function (g) {
        g = unescape(g);
        if (!_.isUndefined(g.result) && g.result == "ok") {
            $.publish("[to:ui]/event/contactinfo/create/suc", [c, b, e]);
            return false
        }
        $.publish("[to:ui]/event/contactinfo/create/fail", [])
    }, function (g) {
        NetworkError()
    })
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:db]/event/chat/single/send", function (e, b, c) {
        a.SendMsg(e, b, c)
    });
    $.subscribe("[to:db]/event/chat/single/next", function (g, f, c, e, b) {
        if (b == undefined) {
            b = false
        }
        a.ReadNextNRecordAndMark(g, f, c, e, b)
    });
    $.subscribe("[to:db]/event/chat/single/delmsg/byid", function (c, e, b) {
        a.DeleteSMSById(c, e, b)
    });
    $.subscribe("[to:db]/event/chat/single/calllog", function (c, b) {
        a.ReadCallLogByPhone(c, b)
    });
    $.subscribe("[to:db]/event/chat/single/contactinfo", function (e, b, c) {
        a.ReadContactInfoByPhone(e, b, c)
    });
    $.subscribe("[to:db]/event/chat/single/allphone/byphone", function (b, e, c) {
        a.ReadAllPhonesByOnePhone(b, e, c)
    });
    $.subscribe("[to:db]/evnet/chat/single/tid/bynumber", function (c, e, b) {
        a.GetThreadidByNumber(c, e, b)
    });
    $.subscribe("[to:db]/event/chat/single/calllog/delete/byid", function (c, b) {
        a.DeleteCalllogById(c, b)
    });
    $.subscribe("[to:db]/event/sms/query/new", function (c, f, e, b) {
        a.QueryNewSMS(c, f, e, b)
    });
    $.subscribe("[to:db]/event/contactinfo/save", function (c, b) {
        a.SaveContactModify(c, b)
    });
    $.subscribe("[to:db]/event/contactinfo/create", function (c, b, e) {
        a.CreateNewContact(c, b, e)
    })
}});
Airdroid.ContactsDB = {};
Airdroid.ContactsDB.GroupReady = false;
Airdroid.ContactsDB.Store = {};
Airdroid.AllContacts = {};
Airdroid.AllContacts.Ready = false;
Airdroid.NewSMSOnlyOne = false;
Airdroid.SMSListQueryAgain = false;
Airdroid.smsSendFailIconTpl = '<span style="display: inline-block;width: 12px;height: 13px;background: transparent url(./ui/theme/default/images/until.png) no-repeat -113px -402px;cursor:pointer;" title="Failed"></span>';
var SMSListWindowUILogic = Core.extend({_tpl_smslist_item:null, _tpl_newsms_window:null, _tpl_contacts_selector:null, _window_name:"smslist", _is_list_dirty:false, _selector_api:null, _now_select:[], _select_contacts_db:[], $construct:function () {
    var a = this;
    this._tpl_smslist_item = _.template($("#tpl-smslist-item").html());
    this._tpl_newsms_window = _.template($("#tpl-new-sms").html());
    this._tpl_contacts_selector = _.template($("#tpl-new-sms-contacts-selector").html());
    this._select_contact_loading_html = '<div style="margin: 0 auto; width: 87px; margin-top: 70px;"><img src="ui/theme/default/images/loading.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/loading.gif*/ valign="middle"><span style=" display: inline-block; line-height: 15px;  vertical-align: middle;  font-size: 12px;  margin-left: 6px;"></span></div>';
    $(".smslist-more > button").live("click", function () {
        if ($(".smslist-item").length > 0) {
            $.publish("[to:db]/event/smslist/next", [new Number($(".smslist-item:last").attr("ut"))])
        }
    });
    $("#smslist-checkall").live("click", function () {
        var c = $(this).find("input");
        var f = $('#smslist input[type="checkbox"]');
        if (c.is(":checked")) {
            f.attr("checked", false);
            f.parent().css("backgroundPosition", "0px -144px");
            $(this).css("backgroundPosition", "0px -144px");
            $("#smslist-checkall").css("backgroundPosition", "0px -144px").find("input").attr("checked", false)
        } else {
            f.attr("checked", true);
            f.parent().css("backgroundPosition", "0px -196px");
            $(this).css("backgroundPosition", "0px -196px");
            if ($("#smslist_container").find(".smslist-item:visible").length > 0) {
                var e = true;
                $("#smslist_container").find(".smslist-item:visible").each(function () {
                    if ($(this).find("input").attr("checked") == false) {
                        e = false;
                        return false
                    }
                });
                if (e) {
                    $("#smslist-checkall").css("backgroundPosition", "0px -196px").find("input").attr("checked", true)
                }
            }
        }
    });
    var b = function () {
        if ($("#smslist_container").find(".checkbox:visible input:checked").length > 0) {
            EnableButton($("#smslist-delete"))
        } else {
            DisableButton($("#smslist-delete"))
        }
    };
    $("#smslist_container .checkbox").live("click", function () {
        var c = $(this).find("input");
        if (c.is(":checked")) {
            $(this).css("backgroundPosition", "0px -144px");
            c.attr("checked", false)
        } else {
            $(this).css("backgroundPosition", "0px -196px");
            c.attr("checked", true)
        }
        b()
    });
    $("#smslist-delete").live("click", function () {
        var c = [];
        $('#smslist_container input[type="checkbox"]').each(function () {
            if ($(this).is(":checked")) {
                c.push($(this).attr("tid"))
            }
        });
        if (c.length == 0) {
            showMsgBox(Airdroid.UsedLang.SMS._msgbox_nothing_selected)
        } else {
            showConfirmBox(Airdroid.UsedLang.SMS._confirmbox_delete_this_thread, function () {
                _.each(c, function (e) {
                    $('.smslist-item[tid="' + e + '"]').addClass("deleting")
                });
                $.publish("[to:db]/event/smslist/delete", [c])
            }, function () {
            })
        }
    });
    $(".smslist-item-delete").live("click", function () {
        var c = this;
        showConfirmBox(Airdroid.UsedLang.SMS._confirmbox_delete_this_thread, function () {
            var f = $(c).closest(".smslist-item");
            var e = f.attr("tid");
            f.addClass("deleting");
            $.publish("[to:db]/event/smslist/delete", [
                [e]
            ])
        }, function () {
        })
    });
    $(".smslist-item-name").live("click", function () {
        var f = $(this).closest(".smslist-item").attr("tid");
        var e = $(this).html();
        var c = $(this).attr("dest");
        $.publish("[to:ui]/event/chat/single", [f, c, e]);
        return false
    });
    $(".smslist-item-msg").live("click", function () {
        var c = $(this).closest(".smslist-item").find(".smslist-item-name").trigger("click");
        return false
    });
    $("#smslist-refresh").live("click", function (c) {
        $(".smslist-item").remove();
        $("#smslist_loading_mask").show();
        DisableButton($("#smslist-delete"));
        DisableButton($("#smslist-refresh"));
        $(".smslist-more").addClass("hide");
        Airdroid.SMSListQueryAgain = true;
        $.publish("[to:db]/event/smslist/next", [, true]);
        return false
    });
    $(".smslist-item-repeat").live("click", function () {
        $.publish("[to:ui]/event/newsms/repeat", [$(this).closest(".smslist-item").find(".smslist-item-msg pre").text()])
    })
}, freshOpBtn:function () {
    if ($("#smslist_container").find(".checkbox:visible input:checked").length > 0) {
        EnableButton($("#smslist-delete"))
    } else {
        DisableButton($("#smslist-delete"))
    }
}, freshPhoneSelectedCount:function () {
    var a = this;
    $("#sl_newsms_1 .contacts-selector-counter").html(a._now_select.length)
}, HaveWindow:function (a) {
    if ($("#w_" + a).length == 1) {
        return true
    }
    return false
}, ShowMe:function () {
    var b = this;
    if (this.HaveWindow(this._window_name)) {
        $.publish("/e/t/bid", ["add", this._window_name, {name:"Messages", iconUrl:"ui/theme/default/images/icon_messages_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_messages_80.png*/}, true, "Messages"])
    } else {
        var g = _.template($("#tpl-smslist").html());
        var c = $(g({UsedLang:Airdroid.UsedLang.SMS}));
        c.appendTo($("#main_container"));
        Windownize($("#" + this._window_name), {title:"Messages", icon:"ui/theme/default/images/icon_messages_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_messages_80.png*/, minWidth:500, minHeight:300, resize:function (o, n) {
            var m = n.helper;
            var l = m.width() - 23;
            var k = m.height() - 46;
            $("#smslist").css("width", l + "px");
            $("#smslist").css("height", k + "px");
            $("#smslist_container").css("width", l + "px");
            $("#smslist_container > div").css("width", l + "px");
            $("#smslist_container .smslist-item-msg").css("width", l - 132 + "px");
            $("#smslist_container").css("height", k - 55 + "px");
            Airdroid.ScrollPane.SMSList.reinitialise();
            b.TriggerLoadMore()
        }});
        var h, f;
        var e = 0;
        var a = 0;
        var j = $("#smslist_container", c).bind("jsp-scroll-y", _.throttle(function (l, n, m, k) {
            e = -h.position().top;
            a = e + f.height();
            $(".smslist-item:visible", c).each(function () {
                var p = $(this).position().top;
                if (p <= a && p >= e) {
                    var o = $(this).find("img");
                    if (!_.isEmpty(o.attr("loaded"))) {
                        return
                    }
                    o.attr("src", o.attr("rel"));
                    o.attr("loaded", "true")
                }
            })
        }, 200)).jScrollPane({animateScroll:true, autoReinitialise:true, verticalDragMinHeight:18});
        Airdroid.ScrollPane.SMSList = j.data("jsp");
        Airdroid.ScrollPane.SMSList.reinitialise();
        h = $("#smslist_container .jspPane", c);
        f = $("#smslist_container .jspContainer", c);
        $("#smslist-new-sms").click(function () {
            $.publish("[to:ui]/event/newsms/create", [])
        });
        $.publish("/e/t/bid", ["add", this._window_name, {name:"Messages", iconUrl:"ui/theme/default/images/icon_messages_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_messages_80.png*/}, true, "Messages"]);
        $("#m" + this._window_name).trigger("click");
        Airdroid.SMSListQueryAgain = true;
        $.publish("[to:db]/event/smslist/next", [, true])
    }
}, NewSMSAdd:function (c, g, e) {
    var b = this;
    var a = "";
    if (c) {
        e.UsedLang = Airdroid.UsedLang.SMS;
        a = b._tpl_smslist_item(e);
        $(a).find(".smslist-item-new-count").removeClass("hide").prependTo($("#smslist_container"))
    } else {
        var f = $('#smslist_container .smslist-item[tid="' + e.id + '"]');
        $(".smslist-item-msg", f).html(e.msg);
        if (g = "send") {
            $.publish("[to:db]/event/sms/markreaded/bythreadid", [e.id])
        } else {
            $(".smslist-item-new-count", f).html(parseInt($(".smslist-item-new-count", f).html()) + 1);
            $(".smslist-item-new-count", f).removeClass("hide")
        }
    }
}, MoreBatchAdd:function (g, c) {
    if (c) {
        $(".smslist-item").remove();
        $("#smslist_loading_mask").hide();
        EnableButton($("#smslist-refresh"))
    }
    var b = this;
    var e = "";
    _.each(g, function (h) {
        h.UsedLang = Airdroid.UsedLang.SMS;
        e += b._tpl_smslist_item(h)
    });
    e = $(e);
    e.find(".smslist-item-new-count").each(function () {
        if ($(this).html() != "0") {
            $(this).removeClass("hide")
        }
    });
    $(".smslist-more").before(e);
    $(".smslist-more").removeClass("hide");
    if (!_.isUndefined(Airdroid.ScrollPane.SMSList)) {
        Airdroid.ScrollPane.SMSList.reinitialise()
    }
    $("#smslist_container").trigger("jsp-scroll-y");
    var a = $(".smslist-more").position().top + $(".smslist-more").height();
    var f = a - ($("#smslist_container").height() + 50) > 0;
    if (!f && $(".smslist-item").length > 0) {
        $.publish("[to:db]/event/smslist/next", [new Number($(".smslist-item:last").attr("ut"))])
    }
}, EndBatchAdd:function (e, b) {
    if (b) {
        $(".smslist-item").remove();
        $("#smslist_loading_mask").hide();
        EnableButton($("#smslist-refresh"))
    }
    var a = this;
    var c = "";
    _.each(e, function (f) {
        f.UsedLang = Airdroid.UsedLang.SMS;
        c += a._tpl_smslist_item(f)
    });
    c = $(c);
    c.find(".smslist-item-new-count").each(function () {
        if ($(this).html() != "0") {
            $(this).removeClass("hide")
        }
    });
    $(".smslist-more").before(c);
    $(".smslist-more").addClass("hide").addClass("end");
    if (!_.isUndefined(Airdroid.ScrollPane.SMSList)) {
        Airdroid.ScrollPane.SMSList.reinitialise()
    }
    $("#smslist_container").trigger("jsp-scroll-y")
}, TriggerLoadMore:function () {
    $("#smslist_container").trigger("scroll");
    Airdroid.ScrollPane.SMSList.reinitialise();
    $("#smslist_container").trigger("jsp-scroll-y")
}, ThreadDelete:function (b) {
    var a = this;
    $('#smslist_container .smslist-item[tid="' + b + '"]').hide(300, function () {
        $(this).remove();
        Airdroid.ScrollPane.SMSList.reinitialise();
        a.freshOpBtn()
    });
    this.TriggerLoadMore()
}, ThreadDeleteFail:function (a) {
    $('#smslist_container .smslist-item[tid="' + a + '"]').removeClass("deleting");
    showMsgBox(Airdroid.UsedLang.SMS._plain_text_thread_delete_error)
}, ThreadDeleteNetErr:function (a) {
    $('#smslist_container .smslist-item[tid="' + a + '"]').removeClass("deleting")
}, MarkReadedByThreadId:function (a) {
    $('.smslist-item[tid="' + a + '"]').each(function () {
        $(".smslist-item-new-count", $(this)).html("0").addClass("hide")
    })
}, FullfillContacts:function (e, f) {
    this._select_contacts_db = e;
    var a = this;
    this._selector_api.getContentPane().html("");
    this._selector_api.reinitialise();
    var b = "<div class='contacts-info-item width100p' cid='{2}'><p class='checkbox contacts_selector_check' style='margin-top:5px;float:left' checked='false'></p><span class='contacts-selector-name'>{0}</span><span class='contacts-selector-phone'>{1}</span></div>";
    var c = "";
    _.each(e, function (g) {
        c += b.format(g.name, g.phone, windowNameTrim(g.phone))
    });
    this._selector_api.getContentPane().append(c);
    $("> div:odd", f).addClass("moreGray");
    this._selector_api.reinitialise();
    _.each(a._now_select, function (h) {
        var g = $('.contacts-info-item[cid="' + windowNameTrim(h.phone) + '"]').find(".contacts_selector_check");
        g.css("background-position", "0px -196px");
        g.attr("checked", "true")
    });
    $(".contacts-info-item", f).click(function () {
        var j = $(this).find(".contacts-selector-name").html();
        var h = $(this).find(".contacts-selector-phone").html();
        var k = $(this).find(".contacts_selector_check");
        if (k.attr("checked") != undefined && k.attr("checked") == "false") {
            k.css("background-position", "0px -196px").attr("checked", "true");
            a._now_select.push({phone:h, name:j})
        } else {
            k.css("background-position", "0px -144px").attr("checked", "false");
            a._now_select = _.reject(a._now_select, function (l) {
                return l.phone == h && l.name == j
            })
        }
        var g = "";
        _.each(a._now_select, function (l) {
            g += '"' + l.name + '" <' + l.phone + ">, "
        });
        f.closest(".contacts-selector").find(".contacts-selector-result").val(g);
        a.freshPhoneSelectedCount()
    })
}, FullfillContactsSelector:function (b, h) {
    var a = this;
    b.children().remove();
    var e = "<option value={0}>{1}</option>";
    var g = "";
    var c = "";
    _.each(h, function (k) {
        if (k.group_id != "has_phone") {
            g += e.format(k.group_id, k.group_name)
        } else {
            c += e.format(k.group_id, k.group_name)
        }
    });
    g = c + g;
    b.append(g);
    var f = b.closest(".contacts-selector").find(".contacts-container");
    var j = "ghas_phone";
    if (Airdroid.ContactsDB.GroupReady == true && _.isUndefined(Airdroid.ContactsDB[j])) {
        Airdroid.ContactsDB[j] = false;
        f.parents(".contacts-selector").find(".contacts-selector-filter").val("");
        a._selector_api.getContentPane().html(a._select_contact_loading_html);
        $.publish("[to:db]/event/newsms/qgroup/bystrid", ["has_phone", f])
    } else {
        if (!_.isUndefined(Airdroid.ContactsDB[j]) && Airdroid.ContactsDB[j] == false) {
        } else {
            if (!_.isUndefined(Airdroid.ContactsDB[j]) && Airdroid.ContactsDB[j] == true) {
                this.FullfillContacts(Airdroid.ContactsDB.Store[j], f)
            }
        }
    }
    b.unbind("change").bind("change", function () {
        var k = "g" + $(this).val();
        f.parents(".contacts-selector").find(".contacts-selector-filter").val("");
        a._selector_api.getContentPane().html(a._select_contact_loading_html);
        if (!_.isUndefined(Airdroid.ContactsDB[k]) && Airdroid.ContactsDB[k] == true) {
            a.FullfillContacts(Airdroid.ContactsDB.Store[k], f)
        } else {
            $.publish("[to:db]/event/newsms/qgroup/bystrid", [$(this).val(), f])
        }
    })
}, freshOpBtnProxy:null, CreateNewSMSWindow:function (b) {
    var j = this;
    var k = "newsms_1";
    if ($("#w_" + k).length == 1) {
        $("#w_newsms_1").show().css("z-index", getTopperZIndex() + 1).find(".new-sms-send-content").val(b);
        $("#w_newsms_1").find(".new-sms-send-content").trigger("keyup");
        j._send_container_api.reinitialise()
    } else {
        var h = $(this._tpl_newsms_window({wid:k, UsedLang:Airdroid.UsedLang.SMS}));
        h.appendTo($("#main_container"));
        if (b != undefined && b != "") {
            h.find(".new-sms-send-content").val(b)
        }
        Windownize($("#" + k), {title:"New Message", icon:"ui/theme/default/images/icon_messages_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_messages_80.png*/, minWidth:500, minHeight:300, disabled:true, resize:function (m, l) {
            return false
        }});
        var a = function () {
            h.find(".new-sms-receivers").val("").trigger("blur");
            j._send_container_api.getContentPane().html("");
            h.find(".new-sms-send-content").val("").trigger("keyup")
        };
        h.closest(".window").find(".window-x").unbind().bind("click", function () {
            a();
            $("#m" + k).remove();
            $(this).closest(".window").remove()
        });
        h.find("#new-sms-clear-all").click(function () {
            showConfirmBox(Airdroid.UsedLang.SMS._confirmbox_clear_new_sms_window_content, function () {
                a()
            })
        });
        h.closest(".window").find(".window-o").remove();
        h.closest(".window").find(".window-_").remove();
        WindowDisableResize(h.closest(".window"));
        var g = Airdroid.UsedLang.SMS._plain_text_new_sms_tip_msg;
        h.find(".new-sms-receivers").val(g).focus(function () {
            if ($(this).val() == g) {
                $(this).val("");
                $(this).css("color", "black")
            }
        }).blur(function () {
            if ($(this).val() == "") {
                $(this).val(g);
                $(this).css("color", "lightgray")
            }
        });
        var e = function () {
            if ($.trim(h.find(".new-sms-receivers").val()) != "" && h.find(".new-sms-receivers").val() != g && h.find(".new-sms-send-content").val() != "") {
                EnableButton(h.find(".new-sms-send"))
            } else {
                DisableButton(h.find(".new-sms-send"))
            }
        };
        j.freshOpBtnProxy = e;
        h.find(".new-sms-receivers").bind("keypress",function (p) {
            if (p.charCode == 44 || p.charCode == 32) {
                var q = $(this).val();
                var o = q.split(",");
                var n = $.trim(o[o.length - 1]);
                if (!_.isEmpty(n)) {
                    var l = new RegExp(/<([\w\W]+)>/g);
                    if (!l.test(n)) {
                        n = "<" + n + ">";
                        o[o.length - 1] = n;
                        var m = o.join(",");
                        $(this).val(m)
                    } else {
                    }
                    e()
                } else {
                    $(this).val(q + " ");
                    e();
                    return false
                }
            }
        }).bind("blur",function () {
            e()
        }).one("click", function () {
            $(this).select()
        });
        h.find(".new-sms-send-content").bind("keyup", function () {
            var l = this;
            h.find(".new-sms-counter").html(SMSWordCounter($(l).val()));
            e()
        });
        var c = $(".new-sms-send-result", h).jScrollPane({animateScroll:true, verticalDragMinHeight:18});
        var f = c.data("jsp");
        j._send_container_api = f;
        h.find(".new-message-btn-select-contacts").click(function () {
            $("#w_newsms_1").block({message:'<span style="height:30px;line-height:30px;">Selecting Contacts...</span>', css:{border:"3px solid lightgray"}, overlayCSS:{opacity:0}});
            var m = "sl_" + k;
            h.find(".new-sms-receivers").trigger("keypress");
            j._now_select = [];
            var p = function (w) {
                var t = new RegExp(/"([\w\W]+)" <([\w\W]+)>/g);
                var u = t.exec(w);
                if (u != null) {
                    return{name:u[1], phone:u[2]}
                } else {
                    var s = new RegExp(/<([\w\W]+)>/g);
                    var v = s.exec(w);
                    if (v != null) {
                        return{name:"Unnamed", phone:v[1]}
                    } else {
                        return{name:"Unnamed", phone:w}
                    }
                }
            };
            if (h.find(".new-sms-receivers").val() != g && $.trim(h.find(".new-sms-receivers").val()) != "") {
                var l = h.find(".new-sms-receivers").val();
                var o = l.split(",");
                o = _.reject(o, function (s) {
                    return $.trim(s) == ""
                });
                _.each(o, function (s) {
                    j._now_select.push(p(s))
                })
            }
            if ($("#w_" + m).size() == 1) {
                $("#w_sl_newsms_1").show().css("z-index", getTopperZIndex() + 1);
                $("#w_sl_newsms_1").find(".contacts-selector-result").val(h.find(".new-sms-receivers").val() == g ? "" : h.find(".new-sms-receivers").val());
                $("#w_sl_newsms_1").find(".contacts-groups").trigger("change")
            } else {
                var r = $(j._tpl_contacts_selector({wid:m, UsedLang:Airdroid.UsedLang.SMS}));
                r.appendTo($("#main_container"));
                Windownize($("#" + m), {title:"Select Contacts", icon:"ui/theme/default/images/icon_messages_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_messages_80.png*/, minWidth:500, minHeight:300, disabled:true, resize:function (t, s) {
                    return false
                }});
                r.closest(".window").find(".window-o").remove();
                r.closest(".window").find(".window-_").remove();
                r.closest(".window").find(".window-x").bind("click", function () {
                    r.closest(".window").remove()
                });
                if ($.browser.msie) {
                    r.find(".contacts_selector_check_all").addClass("hide")
                }
                r.find(".contacts-selector-result").val(h.find(".new-sms-receivers").val() == g ? "" : h.find(".new-sms-receivers").val());
                $("#w_sl_newsms_1").show().css("z-index", getTopperZIndex() + 1);
                center($("#w_sl_newsms_1"));
                r.closest(".window").find(".window-x").click(function () {
                    $("#w_newsms_1").unblock()
                });
                var q = $(".contacts-container", r).jScrollPane({animateScroll:true, verticalDragMinHeight:18});
                var n = q.data("jsp");
                n.reinitialise();
                j._selector_api = n;
                $(".contacts-selector-filter", r).bind("keyup", _.debounce(function () {
                    var t = $(this).val();
                    if (_.isEmpty(t)) {
                        $(".contacts-info-item", r).show();
                        j._selector_api.reinitialise();
                        return true
                    }
                    $(".contacts-info-item", r).hide();
                    for (var s = 0; s < j._select_contacts_db.length; s++) {
                        if (j._select_contacts_db[s].name.toLowerCase().indexOf(t.toLowerCase()) != -1 || j._select_contacts_db[s].phone.indexOf(t) != -1) {
                            $(".contacts-info-item", r).eq(s).show()
                        }
                    }
                    j._selector_api.reinitialise();
                    $(".contacts_selector_check_all", r).css("background-position", "0px -144px").attr("checked", "false")
                }, 300));
                $(".contacts_selector_check_all", r).click(function () {
                    if ($.browser.msie) {
                        showMsgBox("Sorry,IE not supported due to performance issue.");
                        return false
                    }
                    if ($(this).attr("checked") != undefined && $(this).attr("checked") == "false") {
                        $(this).attr("checked", "true");
                        $(this).css("background-position", "0px -196px");
                        $(".contacts_selector_check:visible").attr("checked", "false").trigger("click")
                    } else {
                        $(this).attr("checked", "false");
                        $(this).css("background-position", "0px -144px");
                        $(".contacts_selector_check:visible", r).attr("checked", "true").trigger("click")
                    }
                });
                $(".contacts-selector-btn-cancel", r).click(function () {
                    $(".contacts_selector_check_all", r).attr("checked", "false");
                    $(".contacts_selector_check_all", r).css("background-position", "0px -144px");
                    j._now_select = [];
                    $(".contacts-groups", r).trigger("change");
                    $(".contacts-selector-result", r).val("");
                    $("#w_newsms_1").unblock();
                    $("#w_sl_newsms_1").hide();
                    e()
                });
                $(".contacts-selector-btn-ok", r).click(function () {
                    $(".contacts_selector_check_all", r).css("background-position", "0px -144px").attr("checked", "false");
                    $("#w_newsms_1 .new-sms-receivers").css("color", "black");
                    var s = "";
                    _.each(j._now_select, function (t) {
                        s += '"' + t.name + '" <' + t.phone + ">, "
                    });
                    $("#w_newsms_1 .new-sms-receivers").val(s);
                    j._now_select = [];
                    $(".contacts-groups", r).trigger("change");
                    $(".contacts-selector-result", r).val("");
                    $("#w_newsms_1").unblock();
                    $("#w_sl_newsms_1").hide();
                    e()
                });
                $.publish("[to:db]/event/newsms/qgroup", [r.find(".contacts-groups")])
            }
            return false
        });
        if (Airdroid.AllContacts.Ready) {
            $(".new-sms-receivers").autocomplete(Airdroid.AllContacts.DB, {multiple:true, autoFill:true, matchContains:true, formatItem:function (n, m, l) {
                return n.name + " - " + n.phone
            }, formatMatch:function (n, m, l) {
                return n.name + n.phone
            }, formatResult:function (l) {
                return'"' + l.name + '" <' + l.phone + ">"
            }}).result(function () {
                e()
            })
        } else {
            $.publish("[to:db]/event/newsms/auto/all", [])
        }
        h.find(".new-sms-send-content").bind("keydown", function (l) {
            if (!l.shiftKey && l.keyCode == 13) {
                if (!h.find(".new-sms-send").hasClass("disabled")) {
                    h.find(".new-sms-send").trigger("click")
                }
                return false
            }
        });
        h.find(".new-sms-send").click(function () {
            if (h.find(".new-sms-receivers").val() == g) {
                showMsgBox(Airdroid.UsedLang.SMS._msgbox_no_number);
                return false
            }
            var q = "<div class='width100p' style='display:inline-block;'><div class='part width90max' dest='{0}'><span class='part-contact'>{1}</span> <span class='part-item'><img src='ui/theme/default/images/sending.gif'/*tpa=http://192.168.119.101:8888/ui/theme/default/images/sending.gif*/></span><br/><pre>{2}</pre><div class='part-triangle'></div></div></div>";
            var o = "";
            var l = h.find(".new-sms-receivers").val();
            var n = h.find(".new-sms-send-content").val();
            if (l == "" || n == "") {
                showMsgBox("please enter phone number & message!");
                return false
            }
            var s = l.split(",");
            s = _.reject(s, function (p) {
                return $.trim(p) == ""
            });
            if (s.length == 1) {
                var r = new RegExp(/<([\w\W]*)>/g);
                var t = r.exec(s[0]);
                if (!_.isEmpty(t) && !_.isEmpty(t[1])) {
                    o = $(q.format(t[1], s[0], n));
                    o.appendTo(j._send_container_api.getContentPane());
                    $.publish("[to:db]/event/sms/onlysend", [o, t[1], n, true]);
                    j._send_container_api.reinitialise()
                } else {
                    o = $(q.format(s[0], s[0], n));
                    o.appendTo(j._send_container_api.getContentPane());
                    $.publish("[to:db]/event/sms/onlysend", [o, s[0], n, true]);
                    j._send_container_api.reinitialise()
                }
                Airdroid.NewSMSOnlyOne = true;
                var m = function () {
                    if (!Airdroid.NewSMSOnlyOne) {
                        h.find(".new-sms-receivers").unbind("keyup", m);
                        return
                    }
                    if ($.trim(l) != $.trim(h.find(".new-sms-receivers").val())) {
                        Airdroid.NewSMSOnlyOne = false;
                        h.find(".new-sms-receivers").unbind("keyup", m)
                    }
                };
                h.find(".new-sms-receivers").bind("keyup", m);
                h.find(".new-sms-send-content").val("").trigger("keyup");
                return
            }
            s = _.reject(s, function (p) {
                return $.trim(p).length == 0
            });
            _.each(s, function (w) {
                try {
                    var v = new RegExp(/<([\w\W]*)>/g);
                    var x = v.exec(w);
                    o = $(q.format(x[1], w, n));
                    o.appendTo(j._send_container_api.getContentPane());
                    $.publish("[to:db]/event/sms/onlysend", [o, x[1], n])
                } catch (u) {
                }
            });
            j._send_container_api.reinitialise();
            j._send_container_api.scrollToBottom(false);
            h.find(".new-sms-send-content").val("");
            h.find(".new-sms-send-content").trigger("keyup")
        });
        $("#w_newsms_1").show().css("z-index", getTopperZIndex() + 1);
        center($("#w_newsms_1"));
        f.reinitialise();
        return false
    }
    $(".new-sms-send-content").trigger("keyup")
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:ui]/event/smslist/show", function () {
        a.ShowMe()
    });
    $.subscribe("[to:ui]/event/smslist/next/more", function (e, c) {
        a.MoreBatchAdd(e, c)
    });
    $.subscribe("[to:ui]/event/smslist/next/end", function (e, c) {
        a.EndBatchAdd(e, c)
    });
    $.subscribe("[to:ui]/event/smslist/new", function (c, f, e) {
    });
    $.subscribe("[to:ui]/event/smslist/thread/delete", function (c) {
        a.ThreadDelete(c)
    });
    $.subscribe("[to:ui]/event/smslist/thread/delete/fail", function (c) {
        a.ThreadDeleteFail(c)
    });
    $.subscribe("[to:ui]/event/smslist/thread/delete/neterr", function (c) {
        a.ThreadDeleteNetErr(c)
    });
    $.subscribe("[to:ui]/event/sms/markreaded/bythreadid/suc", function (c) {
        a.MarkReadedByThreadId(c)
    });
    $.subscribe("[to:ui]/event/newsms/create", function () {
        a.CreateNewSMSWindow()
    });
    $.subscribe("[to:ui]/event/newsms/qgroup/suc", function (e, c) {
        a.FullfillContactsSelector(c, e)
    });
    $.subscribe("[to:ui]/event/newsms/auto/all", function () {
        $(".new-sms-receivers").autocomplete(Airdroid.AllContacts.DB, {multiple:true, autoFill:true, matchContains:true, formatItem:function (f, e, c) {
            return f.name + " - " + f.phone
        }, formatMatch:function (f, e, c) {
            return f.name + f.phone
        }, formatResult:function (c) {
            return'"' + c.name + '" <' + c.phone + ">"
        }}).result(function () {
            a.freshOpBtnProxy()
        });
        Airdroid.AllContacts.Ready = true
    });
    $.subscribe("[to:ui]/event/socket/sms/send/result", function (c) {
        if (c.result == 1) {
            $('.part-item[sid="' + c.id + '"]').html(Airdroid.UsedLang.SMS._plain_text_sending_suc);
            if (Airdroid.NewSMSOnlyOne && $('.part-item[sid="' + c.id + '"]').length > 0) {
                Airdroid.NewSMSOnlyOne = false;
                showDelayMask(Airdroid.UsedLang.SMS._msgbox_sms_sending_suc, $("#w_newsms_1"), null, null, function () {
                    if ($("#w_sl_newsms_1").is(":visible")) {
                        $("#w_sl_newsms_1 .window-x").trigger("click")
                    }
                    if ($("#w_newsms_1").is(":visible")) {
                        $("#w_newsms_1 .window-x").trigger("click")
                    }
                })
            }
        } else {
            if (Airdroid.NewSMSOnlyOne && $('.part-item[sid="' + c.id + '"]').length > 0) {
                Airdroid.NewSMSOnlyOne = false
            }
            $('.part-item[sid="' + c.id + '"]').html(Airdroid.smsSendFailIconTpl)
        }
    });
    $.subscribe("[to:ui]/event/newsms/repeat", function (c) {
        a.CreateNewSMSWindow(c)
    });
    $.subscribe("[to:ui]/event/newsms/qgroup/bystrid/suc", function (c, e) {
        a.FullfillContacts(Airdroid.ContactsDB.Store["g" + c], e)
    });
    $.subscribe("[to:ui]/event/newsms/qgroup/bystrid/fail", function (c, e) {
        e.html("Loading fail...")
    });
    var b = _.debounce(function () {
        $(".smslist-item").remove();
        DisableButton($("#smslist-delete"));
        DisableButton($("#smslist-refresh"));
        Airdroid.SMSListQueryAgain = true;
        $.publish("[to:db]/event/smslist/next", [, true])
    }, 2000);
    $.subscribe("[to:ui]/event/socket/sms/changed", function () {
        b()
    })
}});
var isLoading = false;
var SMSListWindowJSLogic = Core.extend({_hostAddress:"", _readBlockSize:30, $construct:function (a) {
    this._hostAddress = a
}, ReadNextNRecordAndMark:function (c, b) {
    if (Airdroid.SMSListQueryAgain || b == undefined) {
        Airdroid.SMSListQueryAgain = false
    } else {
        return
    }
    if (b == undefined) {
        $("#smslist_container").block({message:'<img src="ui/theme/default/images/loading.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/loading.gif*//>', css:{border:"none", width:"130px", height:"170px", backgroundColor:"none", padding:"0px"}, overlayCSS:{backgroundColor:"none", cursor:"default"}})
    } else {
        if (b == true) {
            $(".smslist-more").removeClass("end")
        }
    }
    isLoading = true;
    var a = this;
    var e = this._hostAddress + "/sdctl/sms/threadlist/?pcount=" + this._readBlockSize + "&time=" + (c - 1) + "&callback=?";
    if (c == undefined) {
        e = this._hostAddress + "/sdctl/sms/threadlist/?pcount=" + this._readBlockSize + "&callback=?"
    }
    ajaxHelper(e, function (g) {
        g = unescape(g);
        var f = [];
        _.each(g.list, function (h) {
            if (h.multi == 0) {
                f.push({id:h.id, name:h.name, newCount:h.unread_count, msg_count:h.msg_count, msg:h.summary, icon:a._hostAddress + "/sdctl/contacts/image/bynumber/?number=" + h.addresses, date:h.date, address:h.addresses, df:h.df})
            }
        });
        if (g.list.length < a._readBlockSize) {
            $.publish("[to:ui]/event/smslist/next/end", [f, b])
        } else {
            $.publish("[to:ui]/event/smslist/next/more", [f, b])
        }
        isLoading = false;
        if (b == undefined) {
            $("#smslist_container").unblock()
        }
    }, function () {
        NetworkError()
    })
}, DeleteThreadById:function (b) {
    var a = this._hostAddress + "/sdctl/sms/del/thread/" + b + "?callback=?";
    ajaxHelper(a, function (c) {
        c = unescape(c);
        if (_.isUndefined(c.err)) {
            $.publish("[to:ui]/event/smslist/thread/delete", [b])
        } else {
            $.publish("[to:ui]/event/smslist/thread/delete/fail", [b])
        }
    }, function (c) {
        $.publish("[to:ui]/event/smslist/thread/delete/neterr", [b]);
        NetworkError()
    })
}, QueryGroupAndStore:function (a) {
    var b = this._hostAddress + "/sdctl/contacts/grouplist/?callback=?";
    ajaxHelper(b, function (c) {
        c = unescape(c);
        Airdroid.ContactsDB.Groups = _.reject(c.list, function (e) {
            return e.group_id == "all"
        });
        Airdroid.ContactsDB.GroupReady = true;
        $.publish("[to:ui]/event/newsms/qgroup/suc", [Airdroid.ContactsDB.Groups, a])
    }, function (c) {
        NetworkError()
    })
}, ReadAllContactsAndStore:function () {
    var a = this._hostAddress + "/sdctl/contacts/group/has_phone?pcount=10000&page=1&callback=?";
    ajaxHelper(a, function (e) {
        e = unescape(e);
        var c = [];
        var b;
        _.each(e.list, function (f) {
            b = f.phone.split(",");
            b = _.reject(b, function (g) {
                return g.length == 0
            });
            _.each(b, function (g) {
                c.push({phone:g, name:f.name})
            })
        });
        Airdroid.AllContacts.DB = c;
        Airdroid.AllContacts.Ready = true;
        $.publish("[to:ui]/event/newsms/auto/all", [Airdroid.AllContacts.DB])
    }, function (b) {
        NetworkError()
    })
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:db]/event/smslist/next", function (c, b) {
        a.ReadNextNRecordAndMark(c, b)
    });
    $.subscribe("[to:db]/event/smslist/delete", function (b) {
        if (b.length > 0) {
            _.each(b, function (c) {
                a.DeleteThreadById(c)
            })
        }
    });
    $.subscribe("[to:db]/event/newsms/qgroup", function (b) {
        a.QueryGroupAndStore(b)
    });
    $.subscribe("[to:db]/event/newsms/auto/all", function () {
        a.ReadAllContactsAndStore()
    });
    $.subscribe("[to:db]/event/sms/onlysend", function (g, b, f, h) {
        var c = {number:b, content:f};
        var e = UrlParamsFix(JSON.stringify(c));
        $.ajax({type:"POST", dataType:"json", url:a._hostAddress + "/sdctl/sms/send/single/", data:{data:'params={"content":"' + encode64(encodeURIComponent(e)) + '"}'}, success:function (j) {
            j = unescape(j);
            g.find(".part-item").attr("sid", j.id)
        }, error:function () {
            g.find(".part-item").html(Airdroid.smsSendFailIconTpl);
            NetworkError()
        }})
    });
    $.subscribe("[to:db]/event/newsms/qgroup/bystrid", function (b, c) {
        var e = a._hostAddress + "/sdctl/contacts/group/" + b + "?pcount=1000&page=1&callback=?";
        ajaxHelper(e, function (h) {
            h = unescape(h);
            var g = [];
            var f;
            _.each(h.list, function (j) {
                f = j.phone.split(",");
                f = _.reject(f, function (k) {
                    return k.length == 0
                });
                _.each(f, function (k) {
                    g.push({phone:k, name:j.name})
                })
            });
            Airdroid.ContactsDB.Store["g" + b] = g;
            Airdroid.ContactsDB["g" + b] = true;
            $.publish("[to:ui]/event/newsms/qgroup/bystrid/suc", [b, c])
        }, function (f) {
            $.publish("[to:ui]/event/newsms/qgroup/bystrid/fail", [b, c]);
            NetworkError()
        })
    })
}});
Airdroid.TitleWidget = Core.extend({_const_title_str:"AirDroid", _normal_title:"AirDroid", _dym_title:"AirDroid", _title_scroll_timer:null, _title_scroll_timer_speed:600, StartListen:function () {
    var a = this;
    $.subscribe("[to:wdg]/event/title/push/normal", function (b) {
        a._normal_title = b;
        if (a._dym_title == a._const_title_str) {
            if (!_.isUndefined(a._title_scroll_timer)) {
                clearInterval(a._title_scroll_timer)
            }
            document.title = b + " " + a._const_title_str
        }
    });
    $.subscribe("[to:wdg]/event/title/clear/normal", function (b) {
        if (a._dym_title == a._const_title_str) {
            document.title = a._const_title_str;
            if (!_.isUndefined(a._title_scroll_timer)) {
                clearInterval(a._title_scroll_timer)
            }
        }
        a._normal_title = a._const_title_str
    });
    $.subscribe("[to:wdg]/event/title/push/dym", function (e) {
        a._dym_title = e;
        document.title = e + " " + a._const_title_str;
        if (!_.isUndefined(a._title_scroll_timer)) {
            clearInterval(a._title_scroll_timer)
        }
        var c = document.title;
        var b = 0;
        a._title_scroll_timer = setInterval(function () {
            if (b == c.length - 1) {
                b = 0
            }
            document.title = c.substr(b);
            b++
        }, a._title_scroll_timer_speed)
    });
    $.subscribe("[to:wdg]/event/title/clear/dym", function (b) {
        if (a._normal_title != a._const_title_str) {
            document.title = a._normal_title
        } else {
            document.title = a._const_title_str;
            if (!_.isUndefined(a._title_scroll_timer)) {
                clearInterval(a._title_scroll_timer)
            }
        }
        a._dym_title = a._const_title_str
    })
}});
Airdroid.WorkSpace = {};
Airdroid.NewSMSCount = {};
Airdroid.WorkSpace.Model = Backbone.Model.extend({defaults:{build_in:[
    {name:"My Android", mod:"devinfo", modIcon:""},
    {name:"Applications", mod:"applications", modIcon:"<img style='vertical-align:middle;' src='ui/theme/default/image/ws-left-item-app.jpg'/*tpa=http://192.168.119.101:8888/ui/theme/default/image/ws-left-item-app.jpg*//>"},
    {name:"Download", mod:"taskmanage", modIcon:"<img style='vertical-align:middle;' src='ui/theme/default/image/ws-left-item-download.jpg'/*tpa=http://192.168.119.101:8888/ui/theme/default/image/ws-left-item-download.jpg*//>"},
    {name:"AppMarket", mod:"appmarket", modIcon:"<img style='vertical-align:middle;' src='ui/theme/default/image/ws-left-item-download.jpg'/*tpa=http://192.168.119.101:8888/ui/theme/default/image/ws-left-item-download.jpg*//>"},
    {name:"FileManage", mod:"filemanage", modIcon:"<img style='vertical-align:middle;' src='ui/theme/default/image/ws-left-item-download.jpg'/*tpa=http://192.168.119.101:8888/ui/theme/default/image/ws-left-item-download.jpg*//>"}
]}, setModuleMenuName:function (b, c) {
    var a = this;
    _.each(this.defaults.build_in, function (e) {
        if (e.mod == b) {
            e.name = c;
            $('.ws-mod-list li[mod="' + b + '"] .ws-mod-name', $(a.view.el)).html(c)
        }
    })
}, clear:function () {
    this.destroy();
    this.view.remove()
}});
Airdroid.WorkSpace.View = Backbone.View.extend({el:"body", template:null, visibleWindow:[], isDraging:false, aboutUsTemplate:null, initialize:function () {
    var a = Airdroid.Util.GetTemplate("workspace");
    this.template = _.template(a);
    _.bindAll(this, "render");
    this.model.bind("change", this.render);
    this.model.view = this;
    this.render();
    this.createOrLoadMod()
}, setSearchMarket:function (c) {
    var b = "";
    var a = "";
    if (c == "google") {
        a = Airdroid.UsedLang.Workspace._tip_searchbar_google;
        b = "ui/theme/default/images/google.png"
        /*tpa=http://192.168.119.101:8888/ui/theme/default/images/google.png*/
    }
    $("#pagelet_search_bar .pagelet_market").attr("title", a).attr("market", c).find("img").attr("src", b)
}, searchApps:function (a) {
    var c = $("#pagelet_search_bar .pagelet_market").attr("market");
    var b = "";
    if (c == "google") {
        b = "https://market.android.com/search?q=" + a + "&so=1&c=apps&hl=en"
    }
    window.open(b);
    _gaq.push(["_trackEvent", "[ Mod_Market ]", "Open", null, null])
}, showDeskTop:function () {
    var a = this;
    $("#main_container .window").each(function () {
        if ($(this).css("z-index") > 0 && $(this).css("display") == "block") {
            a.visibleWindow.push($(this).hide())
        }
    })
}, addToFavorite:function (b, c) {
    if (!b) {
        b = window.location
    }
    if (!c) {
        c = document.title
    }
    var a = navigator.userAgent.toLowerCase();
    if (window.sidebar) {
        window.sidebar.addPanel(c, b, "")
    } else {
        if (window.external) {
            if (a.indexOf("chrome") == -1) {
                window.external.AddFavorite(b, c)
            } else {
                showMsgBox(Airdroid.UsedLang.Workspace._add_favorite_tip.format("CTRL+D"), null, true)
            }
        } else {
            if (window.opera && window.print) {
                return true
            } else {
                if (a.indexOf("konqueror") != -1) {
                    showMsgBox(Airdroid.UsedLang.Workspace._add_favorite_tip.format("CTRL+D"), null, true)
                } else {
                    if (a.indexOf("webkit") != -1) {
                        showMsgBox(Airdroid.UsedLang.Workspace._add_favorite_tip.format("CTRL+D"), null, true)
                    } else {
                        showMsgBox(Airdroid.UsedLang.Workspace._not_support_add_favorite)
                    }
                }
            }
        }
    }
}, render:function () {
    var b = this;
    var l = "http://" + Airdroid.Env.ConnectionAddress;
    $(this.el).append(this.template({UsedLang:Airdroid.UsedLang.Workspace, hostAddress:l}));
    noticeMsg.setup();
    (new NoticeWidgetUILogic()).StartListen();
    $(".specialNoticeLowBat5-clear").click(function () {
        $(".specialNoticeLowBat5").hide()
    });
    $(".specialNoticeLowBat20-clear").click(function () {
        $(".specialNoticeLowBat20").hide()
    });
    Windownize($("#webbrowser"), {title:"Web Browser", icon:"ui/theme/default/images/icon_browser_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_browser_80.png*/, resize:function (x, w) {
        var v = w.helper;
        var u = v.width() - 23;
        var t = v.height() - 46;
        $("#webbrowser").css("width", u + "px");
        $("#webbrowser").css("height", t + "px");
        if (Airdroid.Cache.WebBrowser.isCleanMode) {
            $("#webbrowser .webbrowser_container").css("height", t - 42 + "px")
        } else {
            $("#webbrowser .webbrowser_container").css("height", t - 78 + "px");
            $("#webbrowser .webbrowser_bar .webbrowser_input").css("width", u - 105 + "px");
            $("#webbrowser .webbrowser_tabs .tabs").css("width", u - 58 + "px")
        }
    }, minWidth:300, minHeight:100});
    Windownize($("#filemanage"), {title:"File", icon:"ui/theme/default/images/icon_file_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_file_80.png*/, minWidth:860, minHeight:600, resize:function (x, w) {
        var v = w.helper;
        var u = v.width() - 19;
        var t = v.height() - 45;
        $("#filemanage").css("width", u + "px");
        $("#filemanage").css("height", t + "px");
        $("#file_tree").css("height", t - 136 + "px");
        $("#hori_split").css("height", t - 136 + "px");
        $("#grid").css("width", u - 277 + "px");
        $("#grid").css("height", t - 136 + "px");
        $("#filemanage .win_bottom").css("left", 3 - $("#w_filemanage .window-body-l").width() + "px");
        $("#filemanage .win_bottom").css("padding-left", 1 + $("#w_filemanage .window-body-r").width() + "px");
        if (!_.isUndefined(Airdroid.ScrollPane.fileGridScrollAPI)) {
            Airdroid.ScrollPane.fileGridScrollAPI.reinitialise()
        }
        if (!_.isUndefined(Airdroid.ScrollPane.fileTreeScrollAPI)) {
            Airdroid.ScrollPane.fileTreeScrollAPI.reinitialise()
        }
        $.fixLoadingOverLayPosition()
    }, closeEvent:function () {
        if (!_.isUndefined(Airdroid.Cache.FileManageView)) {
            Airdroid.Cache.FileManageView.clearData()
        }
    }});
    Windownize($("#photo"), {title:"Photos", icon:"ui/theme/default/images/icon_photo_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_photo_80.png*/, minWidth:800, minHeight:600, resize:function (x, w) {
        var v = w.helper;
        var u = v.width() - 23;
        var t = v.height() - 46;
        $("#photo").css("width", u + "px");
        $("#photo").css("height", t + "px");
        Airdroid.Cache.Memia_Photo.setDivState();
        if (!_.isUndefined(Airdroid.Cache.Memia_Photo)) {
            Airdroid.Cache.Memia_Photo.updateScrollPanel()
        }
    }, closeEvent:function () {
        if (!_.isUndefined(Airdroid.Cache.Memia_Photo)) {
            Airdroid.Cache.Memia_Photo.clearData()
        }
    }});
    Windownize($("#music"), {title:"Music", icon:"ui/theme/default/images/icon_music_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_music_80.png*/, minWidth:1035, minHeight:600, resize:function (x, w) {
        var v = w.helper;
        var u = v.width() - 23;
        var t = v.height() - 46;
        $("#music").css("width", u + "px");
        $("#music").css("height", t + "px");
        Airdroid.Cache.Media_Music.setDivHeight();
        if (!_.isUndefined(Airdroid.Cache.Media_Music)) {
            Airdroid.Cache.Media_Music.updateScrollPanel()
        }
    }, closeEvent:function () {
        if (!_.isUndefined(Airdroid.Cache.Media_Music)) {
            Airdroid.Cache.Media_Music.clearData()
        }
    }});
    Windownize($("#ringtone"), {title:"Ringtone", icon:"ui/theme/default/images/icon_ringtone_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_ringtone_80.png*/, minWidth:870, minHeight:600, resize:function (x, w) {
        var v = w.helper;
        var u = v.width() - 23;
        var t = v.height() - 46;
        $("#ringtone").css("width", u + "px");
        $("#ringtone").css("height", t - 10 + "px");
        $("#ringtone .ringtone_top_box").css("width", u + "px");
        $("#telephone_list .ringtone_list").css("height", t - 85 + "px");
        $("#message_list .ringtone_list").css("height", t - 85 + "px");
        $("#alarm_list .ringtone_list").css("height", t - 85 + "px");
        if (!_.isUndefined(Airdroid.Cache.Media_Ringtone)) {
            Airdroid.Cache.Media_Ringtone.updateScrollPanel()
        }
    }, closeEvent:function () {
        if (!_.isUndefined(Airdroid.Cache.Media_Ringtone)) {
            Airdroid.Cache.Media_Ringtone.clearData()
        }
    }});
    Windownize($("#taskmanage"), {title:"Task Manager", icon:"ui/theme/default/images/icon_messages_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_messages_80.png*/, resize:function (x, w) {
        var v = w.helper;
        var u = v.width() - 23;
        var t = v.height() - 46;
        $("#taskmanage").css("width", u + "px");
        $("#taskmanage").css("height", t + "px");
        $("#taskmanage .app_list_container_c").css("height", t - 75 + "px");
        $("#task_list_view").css("height", t - 75 + "px");
        if (!_.isUndefined(Airdroid.ScrollPane.TaskListAPI)) {
            Airdroid.ScrollPane.TaskListAPI.reinitialise()
        }
    }, minWidth:500, minHeight:200});
    Windownize($("#applications"), {title:"Applications", icon:"ui/theme/default/images/icon_app_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_app_80.png*/, resize:function (x, w) {
        var v = w.helper;
        var u = v.width() - 23;
        var t = v.height() - 46;
        $("#applications").css("width", u + "px");
        $("#applications").css("height", t + "px");
        $("#applications #app_list").css("width", u + "px");
        $("#applications #more_app_container").css("width", u + 14 + "px");
        $("#applications #app_list").css("height", t + "px");
        $("#applications .app_list_container").css("height", t - 71 + "px");
        $("#applications #more_app_container").css("height", t - 39 + "px");
        $("#applications #app_list_view").css("height", t - 71 + "px");
        if (!_.isUndefined(Airdroid.ScrollPane.AppListAPI)) {
            Airdroid.ScrollPane.AppListAPI.reinitialise()
        }
        Airdroid.Cache.ApplicationsView.forceTriggerLazyLoad()
    }, closeEvent:function () {
        $("#applications .app-unknown-source-tip").addClass("hide");
        $("#applications #app_list_view .jspPane").css("padding", "0")
    }, beforeClose:function () {
        if ($.browser.msie) {
            var t = Airdroid.Cache.AppSWFUploader.getStats();
            if (t.in_progress == 1 || t.files_queued > 0) {
                showConfirmBox(Airdroid.UsedLang.Applications._confirmbox_close_cancel_all, function () {
                    $("#app_list_view_processing .app_list_item[uploadid]").each(function () {
                        var u = $(this).attr("uploadid");
                        var v = Airdroid.Cache.AppSWFUploader.getFile(u);
                        if (v.filestatus == SWFUpload.FILE_STATUS.IN_PROGRESS || v.filestatus == SWFUpload.FILE_STATUS.QUEUED) {
                            Airdroid.Cache.AppSWFUploader.cancelUpload(u, false)
                        }
                    });
                    $("#app_list_view_processing").html("");
                    $.publish("/e/t/bid", ["remove", "w_applications"])
                }, function () {
                    return false
                })
            } else {
                return true
            }
        } else {
            if (Airdroid.Cache.AppNoFlashUploader.getInProgress() > 0) {
                showConfirmBox(Airdroid.UsedLang.Applications._confirmbox_close_cancel_all, function () {
                    Airdroid.Cache.AppNoFlashUploader._handler.cancelAll();
                    $("#app_list_view_processing").html("");
                    $.publish("/e/t/bid", ["remove", "w_applications"])
                }, function () {
                    return false
                })
            } else {
                return true
            }
        }
    }, minWidth:880, minHeight:600});
    var o = Airdroid.Util.GetTemplate("sms");
    $("body").append(o);
    var j = new CommonDBLogic(l);
    j.StartListen();
    var s = new SingleChatJSLogic(l);
    s.StartListen();
    var g = new SingleChatUILogic();
    g.StartListen();
    var e = new SMSListWindowUILogic();
    e.StartListen();
    var k = new SMSListWindowJSLogic(l);
    k.StartListen();
    var c = new ContactUILogic();
    c.StartListen();
    var h = new NewContactUILogic();
    h.StartListen();
    var n = new EditContactUILogic();
    n.StartListen();
    var m = new CalllogJSLogic(l);
    m.StartListen();
    var f = new CalllogUILogic();
    f.StartListen();
    var q = new ContactLogic();
    q.InitComponent(l);
    q.KickOff();
    new (Airdroid.Clipboard.DB)(l).StartListen();
    new (Airdroid.Clipboard.UI)().StartListen();
    new (Airdroid.TitleWidget)().StartListen();
    $.subscribe("/e/w/o/bid", function (u) {
        var t = u.windowName;
        $("#" + t).show();
        $("#" + t).closest(".window").show();
        switch (t) {
            case"summary":
                $.publish("/e/t/bid", ["addsp", "summary", {name:"Summary", iconUrl:"ui/theme/default/images/icon_summary_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_summary_80.png*/}, true, Airdroid.UsedLang.Workspace._module_name_summary]);
                _gaq.push(["_trackEvent", "[ Mod_Summary ]", "Open", null, null]);
                break;
            case"applications":
                $.publish("/e/t/bid", ["add", "applications", {name:"App", iconUrl:"ui/theme/default/images/icon_app_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_app_80.png*/}, true, Airdroid.UsedLang.Workspace._module_name_applications]);
                Airdroid.Cache.AppCanLoad = true;
                $("#app_refresh").trigger("click");
                ajaxHelper(l + "/sdctl/comm/query_usai/?callback=?", function (v) {
                    if (v != null && v != undefined && !_.isUndefined(v.result)) {
                        if (v.result == 0) {
                            $("#applications .app-unknown-source-tip").removeClass("hide");
                            $("#applications #app_list_view .jspPane").css("padding", "24px 0 0 0");
                            $("#applications .app-install").addClass("disabled");
                            if (!_.isUndefined(Airdroid.Cache.AppSWFUploader)) {
                                Airdroid.Cache.AppSWFUploader.setButtonDisabled(true)
                            }
                        }
                    }
                });
                if (navigator.onLine) {
                    $("#applications .tab_more_apps").removeClass("hide")
                }
                if (!_.isUndefined(Airdroid.ScrollPane.AppListAPI)) {
                    Airdroid.ScrollPane.AppListAPI.reinitialise()
                }
                Airdroid.Cache.ApplicationsView.forceTriggerLazyLoad();
                _gaq.push(["_trackEvent", "[ Mod_Applications ]", "Open", null, null]);
                break;
            case"taskmanage":
                Airdroid.Cache.TaskManageView.initSocket();
                if (!_.isUndefined(Airdroid.Cache.Tinyscrollbar_task)) {
                    Airdroid.Cache.Tinyscrollbar_task.tinyscrollbar_update()
                }
                $.publish("/e/t/bid", ["add", "taskmanage", {name:"Task", iconUrl:"ui/theme/default/images/icon_messages_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_messages_80.png*/}, true, Airdroid.UsedLang.Workspace._module_name_taskmanage]);
                break;
            case"appmarket":
                window.open("https://market.android.com/");
                _gaq.push(["_trackEvent", "[ Mod_Market ]", "Open", null, null]);
                break;
            case"webbrowser":
                $.publish("/e/t/bid", ["add", "webbrowser", {name:"Browser", iconUrl:"ui/theme/default/images/icon_browser_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_browser_80.png*/}, true, Airdroid.UsedLang.Workspace._module_name_webbrowser]);
                _gaq.push(["_trackEvent", "[ Mod_Browser ]", "Open", null, null]);
                break;
            case"filemanage":
                Airdroid.Cache.FileManageView.showSDCardSummary();
                Airdroid.Cache.FileManageView.initView();
                Airdroid.Cache.FileManageView.initData();
                $.publish("/e/t/bid", ["add", "filemanage", {name:"File", iconUrl:"ui/theme/default/images/icon_file_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_file_80.png*/}, true, Airdroid.UsedLang.Workspace._module_name_filemanage]);
                _gaq.push(["_trackEvent", "[ Mod_FileManage ]", "Open", null, null]);
                break;
            case"fileupload":
                $.publish("/e/t/bid", ["add", "fileupload", {name:"Import", iconUrl:"ui/theme/default/images/icon_file_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_file_80.png*/}, true, Airdroid.UsedLang.Workspace._module_name_fileupload]);
                _gaq.push(["_trackEvent", "[ Mod_FileManage ][ Action_Import ]", "Open", null, null]);
                break;
            case"photo":
                Airdroid.Cache.Memia_Photo.initView();
                Airdroid.Cache.Memia_Photo.initData();
                $.publish("/e/t/bid", ["add", "photo", {name:"Photos", iconUrl:"ui/theme/default/images/icon_photo_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_photo_80.png*/}, true, Airdroid.UsedLang.Workspace._module_name_photo]);
                _gaq.push(["_trackEvent", "[ Mod_Photo ]", "Open", null, null]);
                break;
            case"music":
                Airdroid.Cache.Media_Music.initView();
                Airdroid.Cache.Media_Music.initData();
                $.publish("/e/t/bid", ["add", "music", {name:"Music", iconUrl:"ui/theme/default/images/icon_music_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_music_80.png*/}, true, Airdroid.UsedLang.Workspace._module_name_music]);
                _gaq.push(["_trackEvent", "[ Mod_Music ]", "Open", null, null]);
                break;
            case"ringtone":
                Airdroid.Cache.Media_Ringtone.initView();
                Airdroid.Cache.Media_Ringtone.initData();
                $.publish("/e/t/bid", ["add", "ringtone", {name:"Ringtone", iconUrl:"ui/theme/default/images/icon_ringtone_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_ringtone_80.png*/}, true, Airdroid.UsedLang.Workspace._module_name_ringtone]);
                _gaq.push(["_trackEvent", "[ Mod_Ringtone ]", "Open", null, null]);
                break;
            case"smslist":
                $.publish("[to:ui]/event/smslist/show", []);
                _gaq.push(["_trackEvent", "[ Mod_Smslist ]", "Open", null, null]);
                break;
            case"contacts":
                $.publish("[to:ui]/event/contacts/show", []);
                _gaq.push(["_trackEvent", "[ Mod_Contacts ]", "Open", null, null]);
                break;
            case"calllog":
                $.publish("[to:ui]/event/allcalllog/show", []);
                _gaq.push(["_trackEvent", "[ Mod_Calllog ]", "Open", null, null]);
                break;
            case"clipboard":
                $.publish("[to:ui]/event/clipboard/show", []);
                _gaq.push(["_trackEvent", "[ Mod_Clipboard ]", "Open", null, null]);
                break;
            default:
                $.publish("/e/t/bid", ["add", t, {name:"Import", iconUrl:"ui/theme/default/images/icon_import_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_import_80.png*/}, true, u.tipMsg]);
                _gaq.push(["_trackEvent", "[ Mod_FileManage ][ Action_Import ]", "Open", null, null]);
                break
        }
        $(window).trigger("resize");
        $("#" + t).closest(".window").css("z-index", getTopperZIndex())
    });
    $.subscribe("/e/t/bid", function (x, y, w, v, t) {
        if (_.isUndefined(t)) {
            t = y
        }
        if (x == "add") {
            var u = $('<div class="task-item" id="m' + y + '" title="' + t + '"><img src="' + w.iconUrl + '"><span>' + w.name + "</span></div>");
            if ($("#taskbar_content").find("#m" + y).length == 1) {
                $("#taskbar_content").find("#m" + y).addClass("active");
                $("#" + y).closest(".window").show();
                $("#" + y).closest(".window").css("z-index", getTopperZIndex());
                return false
            }
            u.click(function () {
                if ($("#" + y).closest(".window").is(":hidden")) {
                    $("#" + y).closest(".window").show();
                    $("#" + y).closest(".window").css("z-index", getTopperZIndex());
                    $(this).addClass("active")
                } else {
                    $("#" + y).closest(".window").hide();
                    $(this).removeClass("active")
                }
            });
            if (v) {
                u.addClass("active")
            }
            $("#taskbar_content").append(u);
            center($("#" + y).closest(".window"))
        } else {
            if (x == "addsp") {
                var u = $('<div class="task-item" id="m' + y + '" title="' + t + '"><img src="' + w.iconUrl + '"><span>' + w.name + "</span></div>");
                if ($("#taskbar_content").find("#m" + y).length == 1) {
                    $("#taskbar_content").find("#m" + y).addClass("active");
                    return false
                }
                u.click(function () {
                    if ($("#" + y).is(":hidden")) {
                        $("#" + y).show();
                        $("#" + y).css("z-index", getTopperZIndex());
                        $(this).addClass("active")
                    } else {
                        $("#" + y).hide();
                        $(this).removeClass("active")
                    }
                });
                if (v) {
                    u.addClass("active")
                }
                if (y != "im-window") {
                    center($("#" + y))
                }
                $("#" + y).css("z-index", getTopperZIndex());
                $("#taskbar_content").append(u)
            } else {
                if (x == "remove") {
                    $("#taskbar_content").find("#m" + y).remove();
                    $("#" + y).closest(".window").hide()
                } else {
                    if (x == "min") {
                        $("#taskbar_content").find("#m" + y).removeClass("active");
                        $("#" + y).closest(".window").hide()
                    } else {
                        if (x == "removesp") {
                            $("#taskbar_content").find("#m" + y).remove();
                            $("#" + y).hide()
                        } else {
                            if (x == "minsp") {
                                $("#taskbar_content").find("#m" + y).removeClass("active");
                                $("#" + y).hide()
                            }
                        }
                    }
                }
            }
        }
    });
    $("#main_container a.icon").liveDraggable({zIndex:10000, opacity:$.browser.msie ? false : 0.66, start:function (u, t) {
        b.isDraging = true
    }, drag:function (z, w) {
        b.isDraging = true;
        var v = w.helper;
        var y = v.position().left + _icon_width / 2 - _icon_padding_left;
        var x = v.position().top + _icon_height / 2 - _icon_padding_top;
        var u = Math.floor(y / _icon_width);
        var A = Math.floor(x / _icon_height);
        var t = _.any(DesktopMap, function (B) {
            return B.x == u && B.y == A
        });
        if (!t) {
            $(this).draggable("option", "revert", false)
        } else {
            $(this).draggable("option", "revert", true)
        }
    }, stop:function (z, w) {
        var v = w.helper;
        var y = v.position().left + _icon_width / 2 - _icon_padding_left;
        var x = v.position().top + _icon_height / 2 - _icon_padding_top;
        var u = Math.floor(y / _icon_width);
        var A = Math.floor(x / _icon_height);
        var t = _.any(DesktopMap, function (B) {
            return B.x == u && B.y == A
        });
        if (!t) {
            v.css({left:_icon_padding_left + u * _icon_width, top:_icon_padding_top + A * _icon_height});
            storeCurrentDesktopMap()
        }
    }});
    $("#shortcut_bar").find(".shurtcut_icon_wrap").hover(function () {
        $(this).addClass("shurtcut_icon_wrap_hover")
    },function () {
        $(this).removeClass("shurtcut_icon_wrap_hover")
    }).end().find(".shurtcut_icon").click(function (u) {
        var t = $(u.currentTarget).attr("menu");
        if (t == "download") {
            $.publish("/e/w/o/bid", [
                {windowName:"taskmanage"}
            ])
        } else {
            if (t == "new_sms") {
                $.publish("[to:ui]/event/newsms/create", [])
            } else {
                if (t == "new_contact") {
                    $.publish("[to:ui]/event/newcontact/show", [])
                } else {
                    if (t == "show_desktop") {
                        if (b.visibleWindow.length == 0) {
                            b.showDeskTop()
                        } else {
                            _.each(b.visibleWindow, function (w) {
                                w.show()
                            });
                            b.visibleWindow = []
                        }
                    } else {
                        if (t == "log_off") {
                            showConfirmBox(Airdroid.UsedLang.Workspace._confirm_box_text_shutdown_app, function () {
                                $.jsonp({type:"GET", url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/comm/logout/", async:true, cache:false, dataType:"jsonp"});
                                setTimeout(function () {
                                    window.location.reload()
                                }, 2000)
                            }, function () {
                            })
                        } else {
                            if (t == "more_menu") {
                                var v = $(u.currentTarget).position();
                                $("#more_menu_opration").css("left", v.left + 52 + "px").css("top", v.top - 10 + "px").toggle();
                                if (u.stopPropagation) {
                                    u.stopPropagation()
                                } else {
                                    u.cancelBubble = true
                                }
                            }
                        }
                    }
                }
            }
        }
    });
    $("#more_menu_opration a").click(function (u) {
        var t = $(u.currentTarget).attr("menu");
        if (t == "help_doc") {
            $.publish("/e/w/o/bid", [
                {windowName:"webbrowser"}
            ]);
            Airdroid.Cache.WebBrowser.addBrowserTab("help_doc", Airdroid.UsedLang.Workspace._webbrowser_tab_name_help_doc, "http://www.airdroid.com/userguide.html")
        } else {
            if (t == "lock_sys") {
                r.showDeskTop();
                $("#tbox_pwd").val("");
                $(".clew").html(Airdroid.UsedLang.Login._plain_text_locked);
                loginEnable();
                $("#login").css("margin", "0");
                $("body").block({message:$("#login"), css:{cursor:"default"}, overlayCSS:{cursor:"default"}})
            } else {
                if (t == "add_to_favi") {
                    b.addToFavorite("http://" + Airdroid.Env.ConnectionAddress, Airdroid.UsedLang.Workspace._favorite_title)
                } else {
                    if (t == "blog") {
                        $.publish("/e/w/o/bid", [
                            {windowName:"webbrowser"}
                        ]);
                        Airdroid.Cache.WebBrowser.addBrowserTab("blog", Airdroid.UsedLang.Workspace._webbrowser_tab_name_blog, "http://airdroid.tumblr.com/")
                    } else {
                        if (t == "facebook") {
                            $.publish("/e/w/o/bid", [
                                {windowName:"webbrowser"}
                            ]);
                            Airdroid.Cache.WebBrowser.addBrowserTab("facebook", Airdroid.UsedLang.Workspace._webbrowser_tab_name_facebook, "http://www.facebook.com/AirDroid")
                        } else {
                            if (t == "twitter") {
                                $.publish("/e/w/o/bid", [
                                    {windowName:"webbrowser"}
                                ]);
                                Airdroid.Cache.WebBrowser.addBrowserTab("twitter", Airdroid.UsedLang.Workspace._webbrowser_tab_name_twitter, "http://twitter.com/AirDroid_Team")
                            }
                        }
                    }
                }
            }
        }
    });
    $("#summaryWidget").draggable({containment:"parent", zIndex:10000, stop:function () {
        $(this).css("z-index", getTopperZIndex())
    }}).click(function () {
        $(this).css("z-index", getTopperZIndex())
    });
    $("#summaryWidgetDetail").bind("click", function () {
        $.publish("/e/w/o/bid", [
            {windowName:"summary"}
        ]);
        return false
    });
    var r = this;
    var p = "Search apps...";
    $("#pagelet_search_input").val(p).focus(function () {
        if ($(this).val() == p) {
            $(this).val("")
        }
    }).blur(function () {
        if ($(this).val() == "") {
            $(this).val(p)
        }
    });
    $("#pagelet_search_bar .pagelet_search_buttom").click(function () {
        var t = $("#pagelet_search_input").val();
        if (t != p && t != "") {
            r.searchApps(t);
            $("#pagelet_search_input").val(p)
        }
    });
    $("#pagelet_search_bar .appmarket_list_item").click(function (t) {
        var u = $(t.currentTarget).attr("menu");
        r.setSearchMarket(u);
        $.cookie("app_search_market", u);
        $("#appmarket_list_wrap").hide()
    });
    $("#pagelet_search_input").keyup(function (u) {
        if (u.keyCode == 13) {
            var t = $("#pagelet_search_input").val();
            if (t != p && t != "") {
                r.searchApps(t);
                $("#pagelet_search_input").val(p)
            }
        }
    });
    var a = $.cookie("app_search_market");
    if (_.isUndefined(a) || a == null) {
        a = "google"
    }
    r.setSearchMarket(a);
    $("#musicPlayerWidget").draggable({containment:"parent", start:function () {
        $("#play_type").hide()
    }}).find(".close_icon").click(function () {
        Airdroid.Media.closePlayerWin()
    }).end().find(".min_icon").click(function () {
        $("#musicPlayerWidget").hide();
        $("<div class='task_item_min music_min_icon' title='" + Airdroid.Media.musicTitle + "'><img src='ui/theme/default/images/player_min_icon.png'/*tpa=http://192.168.119.101:8888/ui/theme/default/images/player_min_icon.png*/ height='24px'/></div>").click(function () {
            $("#musicPlayerWidget").show();
            $(this).remove()
        }).appendTo($("#taskbar_content"))
    }).end().find(".jp-controls .jp-prev").click(function () {
        Airdroid.Media.palyerAction("prev", true)
    }).end().find(".jp-controls .jp-next").click(function () {
        Airdroid.Media.palyerAction("next", true)
    }).end().find(".jp-play-type").click(function (u) {
        var t = $("#musicPlayerWidget").position();
        $("#play_type").css("top", t.top + 77 + "px").css("left", t.left + 128 + "px").css("z-index", $("#musicPlayerWidget").css("z-index") + 1).toggle()
    });
    $("#play_type").find("a").click(function (u) {
        var t = $(u.currentTarget).attr("type");
        Airdroid.Media.playMode = t;
        $("#musicPlayerWidget").find(".jp-play-type a").attr("class", t).attr("title", $(u.currentTarget).html());
        $("#play_type").hide();
        if (u.stopPropagation) {
            u.stopPropagation()
        } else {
            u.cancelBubble = true
        }
    });
    $("#taskbar", this.el).jixedbar({showOnTop:true, roundedCorners:false, roundedButtons:false});
    $("#taskbar", this.el).css("margin-left", "0");
    $("#inner_about_us").click(function (t) {
        if (!r.aboutUsTemplate) {
            r.aboutUsTemplate = $(Airdroid.Util.GetTemplate("about-us")).find(".window-x").click(function (u) {
                $.unblockUI()
            }).end().find(".website a").click(function () {
                $.unblockUI();
                $.publish("/e/w/o/bid", [
                    {windowName:"webbrowser"}
                ]);
                Airdroid.Cache.WebBrowser.addBrowserTab("about_us", "Airdroid", "http://www.airdroid.com/")
            }).end().find("a.btn_blue62").click(function () {
                $.jsonp({type:"GET", url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/comm/appupdate/?callback=?", async:true, cache:false, dataType:"jsonp"});
                $.unblockUI();
                showDelayMask("<span style='color:#ffffff;font-weight:bold;font-size:14px;'>" + Airdroid.UsedLang.Workspace._update_tip + "</span>", $("#main_container"), 5000)
            }).end()
        }
        r.aboutUsTemplate.find("span.version a").html($("#version").html());
        if ($("#newVersionIcon").css("display") != "none") {
            r.aboutUsTemplate.find("a.btn_blue62").show()
        } else {
            r.aboutUsTemplate.find("a.btn_blue62").hide()
        }
        $.blockUI({message:r.aboutUsTemplate, css:{border:"none", width:"520px", height:"225px", backgroundColor:"none", padding:"0px"}, overlayCSS:{backgroundColor:"none", cursor:"default"}})
    });
    $.subscribe("[to:ui]/event/socket/sms/receive", function (v) {
        var y = v.phone;
        var x = v.body;
        var t = v.time;
        var A = v.df;
        var B = v.displayadd;
        var u = v.threadId == undefined ? -1 : v.threadId;
        if (_.isUndefined(Airdroid.NewSMSCount[y])) {
            Airdroid.NewSMSCount[y] = 1
        } else {
            Airdroid.NewSMSCount[y] = Airdroid.NewSMSCount[y] + 1
        }
        var C = B;
        var z = y;
        $.publish("[to:ui]/event/front/new/sms/render", [u, z, C, true, true, v.time, A]);
        var w = $('<span style="cursor:pointer">' + Airdroid.UsedLang.Workspace._notice_receive_N_sms_view + "</span>");
        w.click(function () {
            Airdroid.NewSMSCount[y] = 0;
            $.publish("[to:ui]/e/nw/dpl/remove", ["nns" + windowNameTrim(idFilter(y))]);
            $.publish("[to:ui]/event/chat/single", [u, z, C, true, true, false, v.time]);
            $.publish("[to:wdg]/event/title/clear/dym", [])
        });
        $.publish("[to:wdg]/event/title/push/dym", [Airdroid.Lang.TitleWidget._nf1_n_msg_receive.format(Airdroid.NewSMSCount[y])]);
        $.publish("[to:ui]/e/nw/dpl", ["nns" + windowNameTrim(idFilter(y)), "sms", {msgBody:Airdroid.UsedLang.Workspace._nf1_notice_receive_N_sms_from_N.format(B, '<span class="notice_sms_n">' + Airdroid.NewSMSCount[y] + "</span>"), msgStatus:w}])
    })
}, clear:function () {
    this.model.clear()
}, changeDeviceStatus:function (e) {
    var c = e.battery / 100;
    var a = $("#taskbar_battery_v").width();
    var f = (a * c).toFixed(0);
    if (e.batterycharging == true) {
        $("#taskbar_battery_v").attr("style", "text-indent:10px; background:transparent url('ui/theme/default/images/frame.png'/*tpa=http://192.168.119.101:8888/ui/theme/default/images/frame.png*/) no-repeat -62px -130px;")
    } else {
        $("#taskbar_battery_v").attr("style", "")
    }
    if (c <= 0.2) {
        $("#taskbar_battery_vbg").attr("style", 'background:transparent url("ui/theme/default/images/frame.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/frame.png*/) no-repeat -61px -161px;')
    } else {
        $("#taskbar_battery_vbg").attr("style", "")
    }
    $("#taskbar_battery_vbg").css("width", f + "px");
    $("#taskbar_battery_v").html(e.battery + "%");
    $("#taskbar_wifi").attr("class", "wifi" + e.wifi_signal).attr("title", e.wifi_name);
    $("#taskbar_signal").attr("class", "signal" + e.gsm_signal);
    if (e.sms_unread > 0) {
        $("#desktopicon-sms-count").html(e.sms_unread).removeClass("hide");
        $.publish("[to:wdg]/event/title/push/normal", [Airdroid.Lang.TitleWidget._nf1_cur_n_msg_unread.format(e.sms_unread)])
    } else {
        $("#desktopicon-sms-count").addClass("hide");
        $.publish("[to:wdg]/event/title/clear/normal", [])
    }
    var b = function () {
        $(".specialNoticeLowBat5").hide();
        $(".specialNoticeLowBat20").hide()
    };
    if (e.batterycharging) {
        b()
    }
    if (c <= 0.05 && e.batterycharging == false) {
        if ($(".specialNoticeLowBat5").attr("showed") == undefined) {
            b();
            $(".specialNoticeLowBat5").show();
            $(".specialNoticeLowBat5").attr("showed", "true")
        }
    } else {
        if (c > 0.05 && c <= 0.2 && e.batterycharging == false) {
            if ($(".specialNoticeLowBat20").attr("showed") == undefined) {
                b();
                $(".specialNoticeLowBat20").show();
                $(".specialNoticeLowBat20").attr("showed", "true")
            }
        }
    }
    if (e.updateinfo != null) {
        $("#newVersionIcon").show()
    } else {
        $("#newVersionIcon").hide()
    }
}, createOrLoadMod:function () {
    var a = this;
    if (_.isUndefined(Airdroid.Cache.SummaryModel)) {
        Airdroid.Cache.SummaryModel = new Airdroid.Summary.Model;
        Airdroid.Cache.SummaryView = new Airdroid.Summary.View({model:Airdroid.Cache.SummaryModel});
        setTimeout(function () {
            if (_.isUndefined(Airdroid.Cache.ApplicationsModel)) {
                Airdroid.Cache.ApplicationsModel = new Airdroid.Applications.Model;
                Airdroid.Cache.ApplicationsView = new Airdroid.Applications.View({model:Airdroid.Cache.ApplicationsModel})
            }
            updateLoginProcess(30, false);
            setTimeout(function () {
                if (_.isUndefined(Airdroid.Cache.WebBrowser)) {
                    Airdroid.Cache.WebBrowser = new Airdroid.WebBrowser.View()
                }
                updateLoginProcess(35);
                setTimeout(function () {
                    if (_.isUndefined(Airdroid.Cache.TaskManageModel)) {
                        Airdroid.Cache.TaskManageModel = new Airdroid.TaskManage.ModuleModel;
                        Airdroid.Cache.TaskManageView = new Airdroid.TaskManage.ModuleView({model:Airdroid.Cache.TaskManageModel});
                        Airdroid.Cache.TaskManageView.init()
                    }
                    updateLoginProcess(45);
                    setTimeout(function () {
                        if (_.isUndefined(Airdroid.Cache.FileManageView)) {
                            Airdroid.Cache.FileManageView = new Airdroid.FileManage.View()
                        }
                        updateLoginProcess(55);
                        setTimeout(function () {
                            if (_.isUndefined(Airdroid.Cache.Memia_Photo)) {
                                Airdroid.Cache.Memia_Photo = new Airdroid.Media.PhotoModuleView()
                            }
                            updateLoginProcess(60);
                            setTimeout(function () {
                                if (_.isUndefined(Airdroid.Cache.Media_Music)) {
                                    Airdroid.Cache.Media_Music = new Airdroid.Media.MusicModuleView()
                                }
                                updateLoginProcess(65);
                                setTimeout(function () {
                                    if (_.isUndefined(Airdroid.Cache.Media_Ringtone)) {
                                        Airdroid.Cache.Media_Ringtone = new Airdroid.Media.RingtoneModuleView()
                                    }
                                    updateLoginProcess(70);
                                    $("#main_container a.icon").click(function () {
                                        if (a.isDraging) {
                                            a.isDraging = false;
                                            return
                                        }
                                        var b = $(this).attr("href").substr(1);
                                        $.publish("/e/w/o/bid", [
                                            {windowName:b}
                                        ])
                                    });
                                    $("#main_container").css("height", $(window).height() - 45 + "px");
                                    $.publish("[to:ui]/event/login/major/complete", [])
                                }, 100)
                            }, 100)
                        }, 100)
                    }, 100)
                }, 100)
            }, 100)
        }, 100)
    }
}});
Airdroid.AppUnknownSourceAllow = false;
Airdroid.Applications = {};
Airdroid.Applications.Config = {SoftDefault:{sort:0, order:0, apktype:1}};
Airdroid.Applications.BlockModel = Backbone.Model.extend({url:null, initialize:function () {
    this.url = "http://" + Airdroid.Env.ConnectionAddress + this.get("id")
}});
Airdroid.Applications.Collection = Backbone.Collection.extend({model:Airdroid.Applications.BlockModel, modelAdd:function (a) {
    var b = this;
    a.bind("change", function (c) {
        var f = c.get("list");
        for (var e = 0; e < f.length; e++) {
            store.set("@App@" + f[e].id + "@" + f[e].vcode, f[e])
        }
        b.itemRenderProxy(c)
    });
    a.fetch({error:function (c) {
    }})
}, initialize:function () {
    this.bind("add", this.modelAdd);
    _.bindAll(this, "getRecordsByPage")
}, status:{pendingBlock:[]}, setting:{blockSize:3}, itemRenderProxy:function (a) {
}, getModelByPage:function (b) {
    var a;
    a = _.detect(this.models, function (k) {
        return k.get("page") - 1 == b && k.get("apktype") == Airdroid.Applications.Config.apktype && k.get("sort") == Airdroid.Applications.Config.sort && k.get("order") == Airdroid.Applications.Config.order
    });
    if (!_.isUndefined(a)) {
        return a
    } else {
        a = {list:[]};
        var c = b * this.setting.blockSize;
        var h = (b + 1) * this.setting.blockSize - 1;
        var j = Airdroid.Cache.ApplicationsView.current_view;
        if (h > $(".app_list_item", j).length - 1) {
            h = $(".app_list_item", j).length - 1
        }
        var g;
        for (var f = c; f <= h; f++) {
            var e = $(".app_list_item", j).eq(f);
            g = store.get("@App@" + e.attr("sid") + "@" + e.find(".app_list_item_vcode").html());
            if (_.isUndefined(g)) {
                return undefined
            }
            a.list.push(g)
        }
        return new Backbone.Model(a)
    }
}, getRecordsByPage:function (b, a, f) {
    if (_.isFunction(f)) {
        this.itemRenderProxy = function (g) {
            f(g)
        }
    }
    this.setting.blockSize = a;
    var e = this.pageMapper(b, a);
    var c = this.dataMerger(e);
    if (e.allReady == false) {
        this.advancedFetch(e.missingBlock, 4)
    }
    return c
}, pageMapper:function (a, j) {
    var l = a * j;
    var g = (a + 1) * j - 1;
    var c = Math.floor(l / this.setting.blockSize);
    var f = Math.floor(g / this.setting.blockSize);
    var k = true;
    var h = [];
    var e = [];
    for (var b = c; b <= f; b++) {
        if (_.isUndefined(this.getModelByPage(b))) {
            e.push(b);
            k = false
        } else {
            h.push(b);
            this.itemRenderProxy(this.getModelByPage(b))
        }
    }
    return{allReady:k, readyBlock:h, missingBlock:e, startAt:c, endAt:f, rStart:l, rEnd:g}
}, dataMerger:function (b) {
    var a = this;
    var f = {list:[]};
    var c = b.readyBlock;
    if (c.length == 1) {
        var h = this.getModelByPage(c[0]);
        var g = h.get("list").slice(b.startAt - c[0] * a.setting.blockSize, b.endAt - b.startAt + 1);
        f.list = g
    } else {
        var g = [];
        for (var e = 0; e < c.length; e++) {
            if (e != 0 && e != c.length - 1) {
                g = g.concat(this.getModelByPage(c[e]).get("list"))
            } else {
                if (e == 0) {
                    g = g.concat(this.getModelByPage(c[0]).get("list").slice(b.rStart - c[0] * this.setting.blockSize))
                } else {
                    if (e == c.length - 1) {
                        g = g.concat(this.getModelByPage(c[c.length - 1]).get("list").slice(0, (b.rEnd + 1 % this.setting.blockSize) == 0 ? this.setting.blockSize : b.rEnd + 1 % this.setting.blockSize))
                    }
                }
            }
        }
        f.list = g
    }
    return f
}, advancedFetch:function (a, c) {
    var b = this;
    _.each(a, function (e) {
        var f = e + "@" + Airdroid.Applications.Config.apktype + "@" + Airdroid.Applications.Config.sort + "@" + Airdroid.Applications.Config.order;
        if (_.isUndefined(_.detect(b.status.pendingBlock, function (g) {
            return g == f
        }))) {
            b.status.pendingBlock.push(f);
            b.add(new Airdroid.Applications.BlockModel({id:"/sdctl/app/list/?apktype=" + Airdroid.Applications.Config.apktype + "&listtype=1&sort=" + Airdroid.Applications.Config.sort + "&order=" + Airdroid.Applications.Config.order + "&pcount=" + b.setting.blockSize + "&page=" + (e + 1) + "&callback=?"}))
        }
    })
}, resetAll:function () {
    this.reset();
    this.status.pendingBlock = []
}});
Airdroid.Applications.SearchCache = [];
Airdroid.Applications.SoftStore = new Airdroid.Applications.Collection;
Airdroid.Applications.Model = Backbone.Model.extend({defaults:{sort:null, order:null, apktype:null}, initialize:function () {
    this.bind("change", function () {
        Airdroid.Applications.Config.sort = this.get("sort");
        Airdroid.Applications.Config.order = this.get("order");
        Airdroid.Applications.Config.apktype = this.get("apktype")
    })
}, validate:function (a) {
    if (a.sort < 0 || a.sort > 3 || a.order < 0 || a.order > 1 || a.apktype < 0 || a.apktype > 1) {
        return"Error:Invalid settings for applications.model."
    }
}, getSimpleDataUrl:function () {
    return"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/app/idlist/?apktype=" + this.get("apktype") + "&sort=" + this.get("sort") + "&order=" + this.get("order") + "&callback=?"
}, GetCurrentStatusIdentify:function () {
    var a;
    if (this.get("apktype") == 1) {
        a = "user_"
    } else {
        a = "system_"
    }
    a += this.get("sort").toString() + this.get("order").toString();
    return a
}});
Airdroid.Applications.View = Backbone.View.extend({forceFresh:false, el:"#applications", itemel:"#app_list_view", template:null, item_template:null, install_item_template:null, install_confirm_tip_mask_template:null, uninstall_confirm_tip_mask_template:null, current_view:null, app_list_view_user:"#app_list_view_user", atApp:true, atSystem:false, sortChange:false, events:{"click .installed_apps":"appTypeChange2Install", "click .system_apps":"appTypeChange2System", "click .more_apps":"appTypeChange2More", "click .app-backup":"appBackup", "click .app-uninstall":"appUninstall", "click .app_list_item .checkbox":"selectApp", "click .app_list_item_col_name":"selectAppByOther", "click .app-backup-selected":"appBackupSelected", "click #app_list .app_list_top_c .checkbox":"selectAllItem", "click .app-uninstall-selected":"appUninstallSelected", "keyup #app_search_input":"searchApp", "click .title_row a":"sortTypeChange", "click #app_info_uninstall":"appInfoUninstall", "click #app_info_backup":"appInfoBackup", "click #app_refresh":"forceRefreshContent", "click .app_search_cross":"clearSearchFilter", "click .app-stop-upload":"forceCancelUpload", "mouseover .app_list_item":"overItem", "mouseout .app_list_item":"outItem", "click .app-unknown-source-guide-close":"closeUnknownGuide", "click .app-unknown-source-guide":"openUnknownGuide"}, openUnknownGuide:function () {
    $.publish("/e/w/o/bid", [
        {windowName:"webbrowser"}
    ]);
    Airdroid.Cache.WebBrowser.addBrowserTab("User Guide", Airdroid.UsedLang.Workspace._webbrowser_tab_name_help_doc, "http://www.airdroid.com/apps.html#301");
    return false
}, closeUnknownGuide:function () {
    $("#applications .app-unknown-source-tip").addClass("hide");
    $("#applications #app_list_view .jspPane").css("padding", "0")
}, overItem:function (a) {
    if ($(a.currentTarget).hasClass("app_item_hover")) {
        return
    }
    $(a.currentTarget).addClass("app_list_item_hover")
}, outItem:function (a) {
    $(a.currentTarget).removeClass("app_list_item_hover")
}, forceRefreshContent:function () {
    this.forceFresh = true;
    this.model.trigger("change")
}, forceTriggerLazyLoad:function () {
    var a = Airdroid.Cache.DetectPosition;
    Airdroid.Cache.DetectPosition = Airdroid.Cache.ScrollTop - 150;
    Airdroid.Cache.ApplicationsView.current_view.trigger("scroll");
    Airdroid.Cache.DetectPosition = a
}, initialize:function () {
    var b = this;
    var h = Airdroid.Util.GetTemplate("applications");
    this.template = _.template(h);
    var a = Airdroid.Util.GetTemplate("applications-item");
    this.item_template = _.template(a);
    var g = Airdroid.Util.GetTemplate("tips");
    this.uninstall_confirm_tip_mask_template = _.template(g);
    var f = Airdroid.Util.GetTemplate("tips");
    this.install_confirm_tip_mask_template = _.template(f);
    var e = Airdroid.Util.GetTemplate("applications-install-item");
    this.install_item_template = _.template(e);
    $(this.el).html(this.template({UsedLang:Airdroid.UsedLang.Applications}));
    var j = $("#app_list_view", this.el).bind("jsp-scroll-y", _.throttle(function (l, n, m, k) {
        Airdroid.Cache.ScrollTop = n;
        if (Math.abs(Airdroid.Cache.ScrollTop - Airdroid.Cache.DetectPosition) < Airdroid.Cache.AutoLoadTriggerScrollHeight) {
            return
        }
        Airdroid.Cache.DetectPosition = Airdroid.Cache.ScrollTop;
        Airdroid.Cache.ApplicationsView.forceTriggerLazyLoad()
    }, Airdroid.Config.ThrottleTime)).jScrollPane({animateScroll:true, mouseWheelSpeed:108, arrowButtonSpeed:108, verticalDragMinHeight:18});
    Airdroid.ScrollPane.AppListAPI = j.data("jsp");
    var c = $("#app_info_item_permissions", this.el).jScrollPane({animateScroll:true, verticalDragMinHeight:18});
    Airdroid.ScrollPane.AppInfoAPI = c.data("jsp");
    Airdroid.Cache.UploaderLoaded = false;
    _.bindAll(this, "render", "autoLoadPage", "renderSingleItem", "showAppDetail", "appBackupSelected", "selectAllItem", "appUninstall", "delayRenderSoftName", "appUninstall", "sortTypeChange", "appTypeChange2Install", "appTypeChange2System", "e_InstallAppBySid");
    this.model.bind("change", this.render);
    this.model.view = this;
    this.model.set(Airdroid.Config.SoftDefault)
}, _log_app_user_view:null, _log_app_sys_view:null, appTypeChange2Install:function (h) {
    if ($(h.currentTarget).parent().hasClass("tab_current")) {
        return
    }
    $(".app_search_cross").trigger("click");
    $(".app-install").removeClass("disabled");
    if (!_.isUndefined(Airdroid.Cache.AppSWFUploader)) {
        Airdroid.Cache.AppSWFUploader.setButtonDisabled(false)
    }
    $(".app-install input").attr("disabled", false);
    $("#app_list_view_processing").css("display", "");
    $("#applications .app-backup-selected").addClass("disabled");
    $("#applications .app-uninstall-selected").addClass("disabled");
    $(".app-select-all").css("backgroundPosition", "0px -144px").find("input").attr("checked", false);
    $(".app_search_cross").trigger("click");
    var l = this;
    var j = $(h.currentTarget);
    var m = $(".system_apps");
    m.closest(".tab_current").addClass("tab").removeClass("tab_current");
    $(".more_apps").closest(".tab_current").addClass("tab").removeClass("tab_current");
    j.closest(".tab").addClass("tab_current").removeClass("tab");
    $("#more_app_container").hide();
    l.atSystem = false;
    l.atApp = true;
    var g = Airdroid.ScrollPane.AppListAPI.getContentPane();
    var b = g;
    var a = $("#app_list_view_system > div:visible", g).eq(0);
    if (a.length == 1) {
        this._log_app_sys_view = a
    }
    if (this._log_app_user_view != null && !this.sortChange) {
        l.model.set({apktype:1}, {silent:true});
        Airdroid.Applications.Config.apktype = 1;
        var f = $("#app_list_view_user", g);
        var c = $("#app_list_view_system", g);
        var k = this._log_app_user_view;
        l.current_view = k;
        c.children().hide();
        f.children().hide();
        k.show();
        k.find(".app_list_item").show();
        Airdroid.Applications.SearchCache.length = 0;
        Airdroid.ScrollPane.AppListAPI.reinitialise();
        Airdroid.ScrollPane.AppListAPI.scrollToY("0", false);
        this.freshOpBtnStatus();
        if (Airdroid.Cache.ApplicationsView.current_view.find(".app_list_item:visible").length > 0) {
            var n = true;
            Airdroid.Cache.ApplicationsView.current_view.find(".app_list_item:visible").each(function () {
                if ($(this).find("input").attr("checked") == false) {
                    n = false;
                    return false
                }
            });
            if (n) {
                $(".app-select-all").css("backgroundPosition", "0px -196px").find("input").attr("checked", true)
            }
        }
        return
    }
    l.model.set({apktype:1})
}, appTypeChange2System:function (h) {
    if ($(h.currentTarget).parent().hasClass("tab_current")) {
        return
    }
    $(".app_search_cross").trigger("click");
    $(".app-install").addClass("disabled");
    if (!_.isUndefined(Airdroid.Cache.AppSWFUploader)) {
        Airdroid.Cache.AppSWFUploader.setButtonDisabled(true)
    }
    $(".app-install input").attr("disabled", true);
    $("#app_list_view_processing").hide();
    $("#applications .app-backup-selected").addClass("disabled");
    $("#applications .app-uninstall-selected").addClass("disabled");
    $(".app-select-all").css("backgroundPosition", "0px -144px").find("input").attr("checked", false);
    var l = this;
    var j = $(h.currentTarget);
    var m = $(".installed_apps");
    m.closest(".tab_current").addClass("tab").removeClass("tab_current");
    $(".more_apps").closest(".tab_current").addClass("tab").removeClass("tab_current");
    j.closest(".tab").addClass("tab_current").removeClass("tab");
    $("#more_app_container").hide();
    l.atSystem = true;
    l.atApp = false;
    var g = Airdroid.ScrollPane.AppListAPI.getContentPane();
    var b = g;
    var a = $("#app_list_view_user > div:visible", g).eq(0);
    if (a.length == 1) {
        this._log_app_user_view = a
    }
    if (this._log_app_sys_view != null && !this.sortChange) {
        l.model.set({apktype:0}, {silent:true});
        Airdroid.Applications.Config.apktype = 0;
        var f = $("#app_list_view_user", g);
        var c = $("#app_list_view_system", g);
        var k = this._log_app_sys_view;
        l.current_view = k;
        c.children().hide();
        f.children().hide();
        k.show();
        k.find(".app_list_item").show();
        Airdroid.Applications.SearchCache.length = 0;
        Airdroid.ScrollPane.AppListAPI.reinitialise();
        Airdroid.ScrollPane.AppListAPI.scrollToY("0", false);
        this.freshOpBtnStatus();
        if (Airdroid.Cache.ApplicationsView.current_view.find(".app_list_item:visible").length > 0) {
            var n = true;
            Airdroid.Cache.ApplicationsView.current_view.find(".app_list_item:visible").each(function () {
                if ($(this).find("input").attr("checked") == false) {
                    n = false;
                    return false
                }
            });
            if (n) {
                $(".app-select-all").css("backgroundPosition", "0px -196px").find("input").attr("checked", true)
            }
        }
        return
    }
    l.model.set({apktype:0})
}, appTypeChange2More:function (c) {
    if ($(c.currentTarget).parent().hasClass("tab_current")) {
        return
    }
    var a = this;
    var b = $(c.currentTarget);
    $("#applications .app-backup-selected").addClass("disabled");
    $("#applications .app-uninstall-selected").addClass("disabled");
    $("#applications .app-install").addClass("disabled");
    if (!_.isUndefined(Airdroid.Cache.AppSWFUploader)) {
        Airdroid.Cache.AppSWFUploader.setButtonDisabled(true)
    }
    b.closest(".tab").addClass("tab_current").removeClass("tab");
    $(".installed_apps").closest(".tab_current").addClass("tab").removeClass("tab_current");
    $(".system_apps").closest(".tab_current").addClass("tab").removeClass("tab_current");
    _gaq.push(["_trackEvent", "[ Mod_Applications ][ More_App ]", "Open", null, null]);
    $("#more_app_container").show();
    if (_.isUndefined($("#more_app_iframe").attr("src"))) {
        $("#more_app_iframe").attr("src", "http://www.airdroid.com/recommend/moreapp.html")
    }
}, sortTypeChange:function (c) {
    var f = parseInt($(c.currentTarget).attr("sortType"));
    var b = false;
    var a = this.model.get("order");
    if ($(c.currentTarget).hasClass("sort_1")) {
        b = true;
        $(c.currentTarget).removeClass("sort_1");
        $(c.currentTarget).addClass("sort_2");
        a = 1
    } else {
        if ($(c.currentTarget).hasClass("sort_2")) {
            b = true;
            $(c.currentTarget).removeClass("sort_2");
            $(c.currentTarget).addClass("sort_1");
            a = 0
        } else {
            $(".title_row a").each(function () {
                $(this).removeClass("sort_1");
                $(this).removeClass("sort_2")
            });
            $(c.currentTarget).addClass("sort_1");
            a = 0
        }
    }
    if (b) {
        a == 0 ? 1 : 0
    }
    Airdroid.Applications.SearchCache.length = 0;
    this.model.set({sort:f, order:a});
    this.sortChange = true
}, appInfoBackup:function (c) {
    var b = $(c.currentTarget).parents(".command");
    var a = b.attr("sid");
    window.location = "http:///" + Airdroid.Env.ConnectionAddress + "/sdctl/app/export/" + a
}, appBackup:function (c) {
    if (isiPad()) {
        showMsgBox(Airdroid.UsedLang.Applications._msgbox_text_ipad_not_supported);
        return false
    }
    var b = $(c.currentTarget).parents(".app_list_item");
    var a = b.attr("sid");
    window.location = "http:///" + Airdroid.Env.ConnectionAddress + "/sdctl/app/export/" + a;
    return false
}, appBackupSelected:function (c) {
    if ($(c.currentTarget).hasClass("disabled") || $(c.currentTarget).hasClass("btn-state-disabled")) {
        return false
    }
    if (isiPad()) {
        showMsgBox(Airdroid.UsedLang.Applications._msgbox_text_ipad_not_supported);
        return false
    }
    var a = $(".app_list_container_c .checkbox:visible input:checked", this.el);
    if (a.length == 0) {
        showMsgBox(Airdroid.UsedLang.Applications._msgbox_text_one_or_more_2_backup, null, true);
        return false
    }
    var b = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/zip/Apps_Exported_By_AirDroid.zip?type=1&params=";
    var f = {apkids:[]};
    a.each(function () {
        var e = $(this).val();
        f.apkids.push(e)
    });
    b += JSON.stringify(f);
    window.location = b
}, appInfoUninstall:function (f) {
    var c = $(f.currentTarget).parents(".command");
    var a = c.attr("sid");
    var b = this;
    showConfirmBox(Airdroid.UsedLang.Applications._confirmbox_text_delete_this_app, function () {
        c = b.current_view.find('.app_list_item[sid="' + a + '"]');
        showWaitingTip(c, Airdroid.UsedLang.Applications._plain_text_send_uninstall_query);
        $.jsonp({url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/app/uninstall/" + a + "?callback=?", success:function (e) {
            clearWaitingTip(c);
            if (e.result == 0) {
                showMsgBox(Airdroid.UsedLang.Applications._msgbox_text_uninstall_error)
            } else {
                if (e.result == 1) {
                    c.remove();
                    showTipMsg(Airdroid.UsedLang.Applications._msgbox_text_uninstall_suc)
                } else {
                    if (e.result == 2) {
                        showMaskTip(c, "del", "tips_wait_for_uninstall_confirm", "applications", Airdroid.UsedLang.Applications._plain_text_uninstalling, 280, Airdroid.UsedLang.Applications._plain_text_clear)
                    }
                }
            }
            Airdroid.Applications.SoftStore.resetAll()
        }, error:function () {
            NetworkError()
        }})
    }, function () {
    })
}, e_RemoveAppBySid:function (a) {
    clearMaskTip();
    var c = $("#applications .app_list_item[sid='" + a + "']");
    var b = c.find(".app_list_item_icon").attr("src");
    Airdroid.Applications.SearchCache = _.reject(Airdroid.Applications.SearchCache, function (e) {
        return e == c.find(".app_list_item_name").html().toString().toLowerCase()
    });
    c.remove();
    Airdroid.ScrollPane.AppListAPI.reinitialise();
    $.publish("[to:ui]/e/nw/dpl/remove", ["u" + idFilter(a), 5000, Airdroid.UsedLang.Applications._plain_text_ok])
}, e_CancelRemoveAppBySid:function (a) {
    clearMaskTip();
    var c = $("#applications .app_list_item[sid='" + a + "']");
    c.find(".waiting").html("<span style='color:red'>" + Airdroid.UsedLang.Applications._plain_text_remote_cancel + "</span>");
    c.find(".waiting").fadeOut(5000, function () {
        $(this).remove();
        c.find(".app_list_item_command_line").css("display", "");
        c.unbind("click")
    });
    var b = c.find(".app_list_item_icon").attr("src");
    $.publish("[to:ui]/e/nw/dpl/remove", ["u" + idFilter(a), 5000, Airdroid.UsedLang.Applications._plain_text_cancelled])
}, e_InstallAppBySid:function (c, a) {
    var b = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/app/appicon/" + c + ".png";
    $.publish("[to:ui]/e/nw/dpl", ["i" + idFilter(c), "custom", {msgIcon:b, msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_install_N.format(a), msgStatus:Airdroid.UsedLang.Applications._plain_text_processing}, {}]);
    a = _.isEmpty(a) ? c : a;
    var e = this;
    var g = $('#applications #app_list_view_processing .app_list_item[sid="' + c + '"]');
    g.remove();
    var f = $(e.app_list_view_user).find('.app_list_item[sid="' + c + '"]').length;
    if (f == 0) {
        $.jsonp({url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/app/appinfo/" + c + "?callback=?", success:function (j) {
            var h = {list:[]};
            h.list.push(j);
            h.UsedLang = Airdroid.UsedLang.Applications;
            var l = $(e.item_template(h));
            $(".app_list_item_icon", l).attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/app/appicon/" + j.id + ".png");
            $(".app_list_item_name", l).html(j.name);
            $(".app_list_item_version", l).html("v" + j.ver);
            $(".app_list_item_col_size", l).html(e._paddingText(j.size, 8));
            $(".app_list_item_col_date", l).html(j.date);
            $(".app_list_item_vcode", l).html(j.ver_code);
            try {
                $("#app_list_item_permission", l).html(j.pers.toString().replace(/,/g, "<br>"))
            } catch (k) {
            }
            clearMaskTip();
            $(e.app_list_view_user).children().prepend(l);
            Airdroid.ScrollPane.AppListAPI.reinitialise();
            $.publish("[to:ui]/e/nw/dpl", ["i" + idFilter(c), "custom", {msgIcon:b, msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_install_N.format(a), msgStatus:Airdroid.UsedLang.Applications._plain_text_ok}, {delayRemove:true, delayRemoveTime:5000}])
        }, error:function (h) {
            $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(c), "custom", {msgIcon:b, msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_install_N.format(a), msgStatus:Airdroid.UsedLang.Applications._plain_text_failed}, {delayRemove:true, delayRemoveTime:5000}])
        }})
    }
}, e_CancelInstallAppBySid:function (c, a) {
    var b = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/app/appicon/" + c + ".png";
    clearMaskTip();
    var e = $('#applications #app_list_view_processing .app_list_item[sid="' + c + '"]');
    e.remove();
    a = _.isEmpty(a) ? c : a;
    $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(c), "custom", {msgIcon:b, msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_install_N.format(a), msgStatus:Airdroid.UsedLang.Applications._plain_text_cancelled}, {delayRemove:true, delayRemoveTime:5000}])
}, appUninstall:function (g) {
    var f = $(g.currentTarget).parents(".app_list_item");
    var b = f.attr("sid");
    var a = f.find(".app_list_item_name").html();
    var c = f.find(".app_list_item_icon").attr("src");
    showConfirmBox("confirm to delete this item?", function () {
        showWaitingTip(f, Airdroid.UsedLang.Applications._plain_text_send_uninstall_query);
        $.publish("[to:ui]/e/nw/dpl", ["u" + idFilter(b), "custom", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_uninstall_N.format(a), msgIcon:c, msgStatus:Airdroid.UsedLang.Applications._plain_text_processing}, {}]);
        $.jsonp({url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/app/uninstall/" + b + "?callback=?", success:function (e) {
            clearWaitingTip(f);
            if (e.result == 0) {
                showMsgBox(Airdroid.UsedLang.Applications._msgbox_text_uninstall_error);
                $.publish("[to:ui]/e/nw/dpl", ["u" + idFilter(b), "custom", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_uninstall_N.format(a), msgIcon:c, msgStatus:Airdroid.UsedLang.Applications._plain_text_failed}, {delayRemove:true, delayRemoveTime:5000}])
            } else {
                if (e.result == 1) {
                    f.remove();
                    showTipMsg("Uninstall successfully!");
                    $.publish("[to:ui]/e/nw/dpl", ["u" + idFilter(b), "custom", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_uninstall_N.format(a), msgIcon:c, msgStatus:Airdroid.UsedLang.Applications._plain_text_ok}, {delayRemove:true, delayRemoveTime:5000}])
                } else {
                    if (e.result == 2) {
                        showMaskTip(f, "del", "tips_wait_for_uninstall_confirm", "applications", Airdroid.UsedLang.Applications._plain_text_uninstalling, 280, Airdroid.UsedLang.Applications._plain_text_clear);
                        $.publish("[to:ui]/e/nw/dpl", ["u" + idFilter(b), "custom", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_uninstall_N.format(a), msgIcon:c, msgStatus:Airdroid.UsedLang.Applications._plain_text_tap_on_device}, {}])
                    }
                }
            }
            Airdroid.Applications.SoftStore.resetAll()
        }, error:function () {
            NetworkError();
            $.publish("[to:ui]/e/nw/dpl/remove", ["u" + idFilter(b)]);
            f.find(".app_item_tip").remove();
            f.find(".app_list_item_command_line").show()
        }})
    }, function () {
    });
    return false
}, appUninstallSelected:function (f) {
    if ($(f.currentTarget).hasClass("disabled") || $(f.currentTarget).hasClass("btn-state-disabled")) {
        return false
    }
    var b = Airdroid.Cache.ApplicationsView.current_view.find(".checkbox:visible input:checked");
    var c = b.size();
    if (c == 0) {
        showMsgBox(Airdroid.UsedLang.Applications._msgbox_text_one_or_more_2_uninstall);
        return false
    }
    var a = 0;
    $(f.currentTarget).html("Del:0/" + c);
    showConfirmBox(Airdroid.UsedLang.Applications._confirmbox_text_delete_these_N_app.format(c), function () {
        b.each(function () {
            var e = $(this).val();
            var g = Airdroid.Cache.ApplicationsView.current_view.find('.app_list_item[sid="' + e + '"]');
            showWaitingTip(g, Airdroid.UsedLang.Applications._plain_text_send_uninstall_query);
            $.jsonp({url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/app/uninstall/" + e + "?callback=?", success:function (h) {
                clearWaitingTip(g);
                if (h.result == 0) {
                    showMsgBox(Airdroid.UsedLang.Applications._msgbox_text_uninstall_error)
                } else {
                    if (h.result == 1) {
                        g.remove()
                    } else {
                        if (h.result == 2) {
                            showMaskTip(g, "del", "tips_wait_for_uninstall_confirm", "applications", Airdroid.UsedLang.Applications._plain_text_uninstalling, 280, Airdroid.UsedLang.Applications._plain_text_clear)
                        }
                    }
                }
                Airdroid.Applications.SoftStore.resetAll()
            }, error:function () {
                NetworkError()
            }});
            a++;
            $(f.currentTarget).html("Del:" + a + "/" + c);
            Airdroid.Applications.SoftStore.resetAll()
        });
        $(f.currentTarget).html(Airdroid.UsedLang.Applications._plain_text_uninstall)
    }, function () {
        $(f.currentTarget).html(Airdroid.UsedLang.Applications._plain_text_uninstall)
    })
}, showAppDetail:function (a) {
    if (isiPad() && !isLandScape()) {
        return false
    }
    $(".app_item_hover", this.el).removeClass("app_item_hover");
    $(".app_list_item_col_command a").css("display", "");
    $(a.currentTarget).parent().addClass("app_item_hover");
    $(".app_list_item_col_command a", target).css("display", "inline")
}, freshOpBtnStatus:function () {
    if (Airdroid.Cache.ApplicationsView.current_view.find(".checkbox:visible input:checked").length > 0) {
        $("#applications .app-backup-selected").removeClass("disabled").removeClass("btn-state-disabled");
        if (this.atApp) {
            $("#applications .app-uninstall-selected").removeClass("disabled").removeClass("btn-state-disabled")
        }
    } else {
        $("#applications .app-backup-selected").addClass("disabled").addClass("btn-state-disabled");
        if (this.atApp) {
            $("#applications .app-uninstall-selected").addClass("disabled").addClass("btn-state-disabled")
        }
    }
}, selectApp:function (b) {
    var c = $(b.currentTarget);
    if (c.children("input").attr("checked") == true) {
        c.children("input").attr("checked", false);
        c.css("backgroundPosition", "0px -144px");
        $(".app-select-all").css("backgroundPosition", "0px -144px").find("input").attr("checked", false)
    } else {
        c.children("input").attr("checked", true);
        c.css("backgroundPosition", "0px -196px");
        if (Airdroid.Cache.ApplicationsView.current_view.find(".app_list_item:visible").length > 0) {
            var a = true;
            Airdroid.Cache.ApplicationsView.current_view.find(".app_list_item:visible").each(function () {
                if ($(this).find("input").attr("checked") == false) {
                    a = false;
                    return false
                }
            });
            if (a) {
                $(".app-select-all").css("backgroundPosition", "0px -196px").find("input").attr("checked", true)
            }
        }
    }
    this.freshOpBtnStatus()
}, selectAppByOther:function (b) {
    var c = $(b.currentTarget).closest(".app_list_item").find(".checkbox");
    if (c.children("input").attr("checked") == true) {
        c.children("input").attr("checked", false);
        c.css("backgroundPosition", "0px -144px");
        $(".app-select-all").css("backgroundPosition", "0px -144px").find("input").attr("checked", false)
    } else {
        c.children("input").attr("checked", true);
        c.css("backgroundPosition", "0px -196px");
        if (Airdroid.Cache.ApplicationsView.current_view.find(".app_list_item:visible").length > 0) {
            var a = true;
            Airdroid.Cache.ApplicationsView.current_view.find(".app_list_item:visible").each(function () {
                if ($(this).find("input").attr("checked") == false) {
                    a = false;
                    return false
                }
            });
            if (a) {
                $(".app-select-all").css("backgroundPosition", "0px -196px").find("input").attr("checked", true)
            }
        }
    }
    this.freshOpBtnStatus()
}, selectAllItem:function (b) {
    if ($(b.currentTarget).children("input").attr("checked") == true) {
        var a = Airdroid.Cache.ApplicationsView.current_view.find(".app_list_item:visible .checkbox");
        a.children("input").attr("checked", false);
        a.css("backgroundPosition", "0px -144px");
        $(b.currentTarget).children("input").attr("checked", false);
        $(b.currentTarget).css("backgroundPosition", "0px -144px")
    } else {
        var a = Airdroid.Cache.ApplicationsView.current_view.find(".app_list_item:visible .checkbox");
        a.children("input").attr("checked", true);
        a.css("backgroundPosition", "0px -196px");
        $(b.currentTarget).children("input").attr("checked", true);
        $(b.currentTarget).css("backgroundPosition", "0px -196px")
    }
    this.freshOpBtnStatus()
}, clearSearchFilter:function () {
    $("#app_refresh").removeAttr("disabled");
    $("#applications #app_search_input").val("");
    $(".app_list_item", Airdroid.Cache.ApplicationsView.current_view).show();
    $("#app_list .search26_r").removeClass("app_search_cross");
    if (!_.isUndefined(Airdroid.ScrollPane.AppListAPI)) {
        Airdroid.ScrollPane.AppListAPI.reinitialise()
    }
}, searchApp:function (b) {
    clearTimeout($.data(this, "timer"));
    var a = setTimeout(function () {
        var e = $.trim($(b.currentTarget).val()).toLowerCase();
        if (e.length == 0) {
            $("#app_refresh").removeAttr("disabled");
            $(".app_list_item", Airdroid.Cache.ApplicationsView.current_view).show();
            $("#app_list .search26_r").removeClass("app_search_cross");
            if (!_.isUndefined(Airdroid.ScrollPane.AppListAPI)) {
                Airdroid.ScrollPane.AppListAPI.reinitialise()
            }
            return
        }
        $("#app_refresh").attr("disabled", "disabled");
        var f = $(".app_list_item", Airdroid.Cache.ApplicationsView.current_view);
        if (Airdroid.Applications.SearchCache.length == 0) {
            for (var c = 0; c < f.length; c++) {
                Airdroid.Applications.SearchCache[c] = f.eq(c).find(".app_list_item_name").html().toString().toLowerCase()
            }
        }
        for (var c = 0; c < Airdroid.Applications.SearchCache.length; c++) {
            if (Airdroid.Applications.SearchCache[c].indexOf(e) == -1) {
                f.eq(c).attr("style", "display:none;")
            } else {
                f.eq(c).removeAttr("style")
            }
        }
        if (!_.isUndefined(Airdroid.ScrollPane.AppListAPI)) {
            Airdroid.ScrollPane.AppListAPI.reinitialise()
        }
        $("#app_list .search26_r").addClass("app_search_cross");
        setTimeout(function () {
            Airdroid.Cache.ApplicationsView.forceTriggerLazyLoad()
        }, 1000)
    }, 500);
    $(this).data("timer", a)
}, autoLoadPage:function (a) {
    Airdroid.Applications.SoftStore.getRecordsByPage(a, 3, this.renderSingleItem)
}, _paddingText:function (a, b) {
    return'<span style="display:block;width: 54px;text-align:right;">' + a + "</span>"
}, renderSingleItem:function (b) {
    var a = this;
    _.each(b.get("list"), function (f) {
        var g = $(".app_list_item[sid='" + f.id + "']", $(a.el));
        $(".app_list_item_icon", g).attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/app/appicon/" + f.id + ".png");
        $(".app_list_item_name", g).html(f.name);
        var c = f.vname;
        if (c.length > 0) {
            $(".app_list_item_version", g).html((_.isNaN(parseInt(f.vname.toString().substr(0, 1))) ? "" : "v") + f.vname)
        }
        $(".app_list_item_col_size", g).html(a._paddingText(f.size, 8));
        $(".app_list_item_col_date", g).html(f.date);
        try {
            $("#app_list_item_permission", g).html(f.pers.toString().replace(/,/g, "<br>"))
        } catch (e) {
        }
    })
}, delayRenderSoftName:function (b) {
    var a = this;
    b = b.list;
    for (var c = 0; c < b.length; c++) {
        var e = $(".app_list_item[sid='" + b[c].id + "']", $(a.el));
        $(".app_list_item_name", e).html(b[c].name);
        $(".app_list_item_vcode", e).html(b[c].vcode);
        var f = e.index()
    }
}, forceCancelUpload:function (c) {
    var b = $(c.currentTarget).parents(".app_list_item[uploadID]");
    var a = b.attr("uploadID");
    showConfirmBox("确认取消上传?", function () {
        b.css("background-color", "lightgray");
        b.css("text-decoration", "line-through");
        setTimeout(function () {
            if ($.browser.msie) {
                Airdroid.Cache.AppSWFUploader.cancelUpload(a)
            } else {
                Airdroid.Cache.AppNoFlashUploader._handler.cancel(a)
            }
        }, 1000)
    }, function () {
    })
}, render:function () {
    var m = this;
    var h = Airdroid.ScrollPane.AppListAPI.getContentPane();
    var a = h;
    var k = $("#app_list_view_processing", h);
    var c = $("#app_list_view_user", h);
    var b = $("#app_list_view_system", h);
    if (!Airdroid.Cache.UploaderLoaded) {
        if ($.browser.msie) {
            var e = {flash_url:"js/base/swfupload.swf"/*tpa=http://192.168.119.101:8888/js/base/swfupload.swf*/, flash9_url:"js/base/swfupload_fp9.swf"/*tpa=http://192.168.119.101:8888/js/base/swfupload_fp9.swf*/, upload_url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/comm/install/", file_types:"*.apk", file_types_description:"Android Package", button_placeholder_id:"app_install_btn", button_image_url:"ui/theme/default/images/install.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/install.png*/, button_width:90, button_height:26, button_action:SWFUpload.BUTTON_ACTION.SELECT_FILES, button_cursor:SWFUpload.CURSOR.HAND, button_window_mode:SWFUpload.WINDOW_MODE.TRANSPARENT, file_dialog_complete_handler:function () {
                this.startUpload();
                Airdroid.ScrollPane.AppListAPI.scrollTo(0, 0)
            }, file_queued_handler:function (o) {
                var n = Airdroid.Cache.AppSWFUploader.getStats();
                if (k.children().length > 0 && n.in_progress == 1) {
                    k.children().first().after(m.install_item_template({uploadID:o.id, fileName:o.name, fileSize:bytesToSize(o.size), UsedLang:Airdroid.UsedLang.Applications}))
                } else {
                    k.append(m.install_item_template({uploadID:o.id, fileName:o.name, fileSize:bytesToSize(o.size), UsedLang:Airdroid.UsedLang.Applications}))
                }
            }, upload_start_handler:function (n) {
                var o = n.name;
                Airdroid.Cache.AppSWFUploader.setUploadURL("http://" + Airdroid.Env.ConnectionAddress + "/sdctl/comm/upfile/?loader=2&fname=" + o + "&after=1&rtype=1");
                $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(n.id), "apk", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_upload_N.format(n.name), msgStatus:"0%"}, {}])
            }, upload_progress_handler:function (o, r, p) {
                var q = $('.app_list_item[uploadID="' + o.id + '"]', k);
                $(".app_list_item_col_size", q).html('<span style="display:block;width: 50px;text-align:right;">' + bytesToSize(p) + "</span>");
                showWaitingTip(q, Airdroid.UsedLang.Applications._plain_text_uploading);
                var n = (r / p).toFixed(2);
                $(".upload_progress_ing", q).css("width", n * 100 + "px");
                $(".upload_progress_v", q).html(Math.round(n * 100) + "%");
                $.publish("[to:ui]/e/nw/dpl/mod", ["ul" + idFilter(o.id), Airdroid.UsedLang.Applications._nf1_plain_text_upload_N.format(o.name), Math.round(n * 100) + "%"])
            }, upload_error_handler:function (n, p, q) {
                if (p == SWFUpload.UPLOAD_ERROR.FILE_CANCELLED) {
                    $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(n.id), "apk", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_upload_N.format(n.name), msgStatus:Airdroid.UsedLang.Applications._plain_text_cancelled}, {delayRemove:true, delayRemoveTime:5000}])
                } else {
                    showMsgBox("Error occurs during uploading.<br/>Install action aborted!");
                    $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(n.id), "apk", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_upload_N.format(n.name), msgStatus:Airdroid.UsedLang.Applications._plain_text_failed}, {delayRemove:true, delayRemoveTime:5000}])
                }
                var o = $('.app_list_item[uploadID="' + n.id + '"]', k);
                o.remove();
                Airdroid.ScrollPane.AppListAPI.reinitialise()
            }, upload_success_handler:function (p, o, n) {
                var q = $('.app_list_item[uploadID="' + p.id + '"]', k);
                o = $.parseJSON(o);
                if (o.result == 1) {
                    showWaitingTip(q, "");
                    showMaskTip(q, "install", "tips_wait_for_install_confirm", "applications", "Installing...", 280, "Clear", true);
                    q.attr("sid", o.apkid);
                    $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(p.id), "apk", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_upload_N.format(p.name), msgStatus:Airdroid.UsedLang.Applications._plain_text_ok}, {delayRemove:true, delayRemoveTime:5000}]);
                    $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(p.id), "apk", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_click_ok_on_phone.format(p.name), msgStatus:Airdroid.UsedLang.Applications._plain_text_ok}, {delayRemove:true, delayRemoveTime:7000}]);
                    return
                } else {
                    showMsgBox("Error occurs during installing.<br/>Install action aborted!");
                    $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(p.id), "apk", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_upload_N.format(p.name), msgStatus:Airdroid.UsedLang.Applications._plain_text_failed}, {delayRemove:true, delayRemoveTime:5000}])
                }
                q.remove();
                Airdroid.ScrollPane.AppListAPI.reinitialise()
            }};
            Airdroid.Cache.AppSWFUploader = new SWFUpload(e)
        } else {
            Airdroid.Cache.AppNoFlashUploader = new qq.AppFileUploader({action:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/comm/upfile/", element:document.getElementById("app_install_btn"), debug:false, allowedExtensions:["apk"], maxConnections:1, onSubmit:function (o, n) {
                Airdroid.Cache.AppNoFlashUploader.setParams({loader:3, fname:n, after:1, rtype:1});
                Airdroid.ScrollPane.AppListAPI.scrollTo(0, 0);
                k.append(m.install_item_template({uploadID:o, fileName:n, fileSize:"unknown", UsedLang:Airdroid.UsedLang.Applications}));
                $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(o), "apk", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_upload_N.format(n), msgStatus:"0%"}, {}])
            }, onProgress:function (s, r, n, p) {
                var q = $('.app_list_item[uploadID="' + s + '"]', k);
                $(".app_list_item_col_size", q).html('<span style="display:block;width: 50px;text-align:right;">' + bytesToSize(p) + "</span>");
                var o = (n / p).toFixed(2);
                showWaitingTip(q, Airdroid.UsedLang.Applications._plain_text_uploading);
                $(".upload_progress_ing", q).css("width", o * 100 + "px");
                $(".upload_progress_v", q).html(Math.round(o * 100) + "%");
                $.publish("[to:ui]/e/nw/dpl/mod", ["ul" + idFilter(s), Airdroid.UsedLang.Applications._nf1_plain_text_upload_N.format(r), Math.round(o * 100) + "%"])
            }, onComplete:function (q, p, o) {
                var n = $('.app_list_item[uploadID="' + q + '"]', k);
                serverData = o;
                if (serverData.result == 1) {
                    showWaitingTip(n, "");
                    showMaskTip(n, "install", "tips_wait_for_install_confirm", "applications", "Installing...", 280, "Clear", true);
                    $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(q), "apk", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_upload_N.format(p), msgStatus:Airdroid.UsedLang.Applications._plain_text_ok}, {delayRemove:true, delayRemoveTime:5000}]);
                    $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(q), "apk", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_click_ok_on_phone.format(p), msgStatus:Airdroid.UsedLang.Applications._plain_text_ok}, {delayRemove:true, delayRemoveTime:7000}]);
                    n.attr("sid", serverData.apkid);
                    return
                } else {
                    showMsgBox("Error occurs during installing.<br/>Install action aborted!");
                    $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(q), "apk", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_upload_N.format(p), msgStatus:Airdroid.UsedLang.Applications._plain_text_failed}, {delayRemove:true, delayRemoveTime:5000}])
                }
                n.remove();
                Airdroid.ScrollPane.AppListAPI.reinitialise()
            }, onCancel:function (p, o) {
                var n = $('.app_list_item[uploadID="' + p + '"]', k);
                n.remove();
                $.publish("[to:ui]/e/nw/dpl", ["ul" + idFilter(p), "apk", {msgBody:Airdroid.UsedLang.Applications._nf1_plain_text_upload_N.format(o), msgStatus:Airdroid.UsedLang.Applications._plain_text_cancelled}, {delayRemove:true, delayRemoveTime:5000}]);
                Airdroid.ScrollPane.AppListAPI.reinitialise()
            }})
        }
        Airdroid.Cache.UploaderLoaded = true
    }
    $("#app_search_input", this.el).val("");
    Airdroid.Applications.SearchCache.length = 0;
    var f = this.model.GetCurrentStatusIdentify();
    var l = $("#app_list_view_" + f, h);
    if (l.length == 1 && !this.forceFresh) {
        this.current_view = l;
        b.children().hide();
        c.children().hide();
        l.show();
        l.find(".app_list_item").show();
        Airdroid.ScrollPane.AppListAPI.reinitialise();
        return
    }
    var j = "app_list_view_" + f;
    if (this.forceFresh) {
        a.find("#" + j).remove();
        $("#app_list .search26_r").removeClass("app_search_cross")
    }
    if (this.model.get("apktype") == 1) {
        Airdroid.ScrollPane.AppListAPI.reinitialise();
        c.append('<div id="' + j + '"><div style="display: block;margin:0 auto;margin-top: 220px;width: 121px;"><img src="ui/theme/default/images/loading.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/loading.gif*/ valign="bottom"></div></div>')
    } else {
        if (this.model.get("apktype") == 0) {
            Airdroid.ScrollPane.AppListAPI.reinitialise();
            b.append('<div id="' + j + '"><div style="display: block;margin:0 auto;margin-top: 220px;width: 121px;"><img src="ui/theme/default/images/loading.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/loading.gif*/ valign="bottom"></div></div>')
        }
    }
    l = $("#app_list_view_" + f, h);
    var g = $("#app_info");
    this.current_view = l;
    b.children().hide();
    c.children().hide();
    l.show();
    $.jsonp({url:this.model.getSimpleDataUrl(), success:function (n) {
        Airdroid.Cache.DetectPosition = 0;
        Airdroid.Cache.ScrollTop = 0;
        n.UsedLang = Airdroid.UsedLang.Applications;
        try {
            l.html(m.item_template(n));
            if (m.model.get("apktype") == 0) {
                $(".app-uninstall", l).remove()
            }
            Airdroid.ScrollPane.AppListAPI.reinitialise()
        } catch (o) {
        }
        l.lazyLoaderM({LazyElements:".app_list_item[sid]", TargetView:l}, m.autoLoadPage);
        if (n.cached != "0") {
            Airdroid.Util.Disable($("#app_search_input", m.el));
            Airdroid.Timer = setInterval(function () {
                $.jsonp({url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/app/cache/status/?callback=?", success:function (p) {
                    if (p.status == 3) {
                        $.jsonp({url:m.model.getSimpleDataUrl(), success:function (q) {
                            m.delayRenderSoftName(q)
                        }});
                        Airdroid.Util.Enable($("#app_search_input", m.el));
                        clearInterval(Airdroid.Timer)
                    }
                }})
            }, 5000)
        } else {
            m.delayRenderSoftName(n)
        }
    }, error:function (n, o) {
        NetworkError();
        l.html("")
    }, complete:function () {
        m.forceTriggerLazyLoad()
    }})
}});
Airdroid.TaskManage = {};
Airdroid.TaskManage.isInit = true;
Airdroid.TaskManage.Status = {waiting:100, stoped:101, downloading:102, downloaded:103, installing:104, installed:105, installForSure:106, failed:200, deleted:201, installFailed:202, install_cancel:107};
Airdroid.TaskManage.ajax = (function () {
    return{getTaskByid:function (a, b, c) {
        $.jsonp({url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/taskmanage/query/?id=" + a + "&callback=?", dataType:"jsonp", success:b, error:c})
    }, taskOpration:function (a, c, b, e) {
        $.jsonp({url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/taskmanage/operat/?id=" + a + "&type=" + c + "&callback=?", dataType:"jsonp", success:b, error:e})
    }}
})();
Airdroid.TaskManage.fmt = (function () {
    var b = 1000;
    var j = "B/s";
    var g = "KB/s";
    var h = "MB/s";
    var f = 1024;
    var e = "B";
    var a = "KB";
    var c = "MB";
    return{percentString:function (k) {
        if (isNaN(k)) {
            return 0
        } else {
            if (k < 10) {
                return k.toFixed(2)
            } else {
                if (k < 100) {
                    return k.toFixed(1)
                } else {
                    return k.toFixed(0)
                }
            }
        }
    }, size:function (k) {
        if (k < f) {
            return[k, e].join("")
        }
        var l;
        var m;
        if (k < Math.pow(f, 2)) {
            l = k / f;
            m = a
        } else {
            if (k < Math.pow(f, 3)) {
                l = k / Math.pow(f, 2);
                m = c
            }
        }
        return l <= 9.995 ? [l.toFixed(2), m].join("") : [l.toFixed(1), m].join("")
    }, speedBps:function (k) {
        if (k < b) {
            return[k, j].join("")
        } else {
            return this.speed(this.toKBps(k))
        }
    }, toKBps:function (k) {
        return Math.floor(k / b)
    }, speed:function (k) {
        var l = k;
        if (l <= 999.95) {
            return[l.toFixed(1), g].join("")
        }
        l /= b;
        if (l <= 99.995) {
            return[l.toFixed(2), h].join("")
        }
        if (l <= 999.95) {
            return[l.toFixed(1), h].join("")
        }
        l /= b;
        return[l.toFixed(2), speed_G_str].join("")
    }, timeInterval:function (n) {
        var k;
        var o = Math.floor(n / 86400);
        var l = Math.floor((n % 86400) / 3600);
        var m = Math.floor((n % 3600) / 60);
        var n = Math.floor((n % 3600) % 60);
        if (o > 0 && l == 0) {
            k = [o, "days"]
        } else {
            if (o > 0 && l > 0) {
                k = [o, "days", l, "hr"]
            } else {
                if (l > 0 && m == 0) {
                    k = [l, "hr"]
                } else {
                    if (l > 0 && m > 0) {
                        k = [l, "hr", m, "min"]
                    } else {
                        if (m > 0 && n == 0) {
                            k = [m, "min"]
                        } else {
                            if (m > 0 && n > 0) {
                                k = [m, "min", n, "seconds"]
                            } else {
                                k = [n, "seconds"]
                            }
                        }
                    }
                }
            }
        }
        return k.join(" ")
    }, status:function (m) {
        var l = "";
        var k = Airdroid.TaskManage.Status;
        switch (m) {
            case k.waiting:
                l = "waiting";
                break;
            case k.stoped:
                l = "stoped";
                break;
            case k.downloading:
                l = "downloading";
                break;
            case k.downloaded:
                l = "downloaded";
                break;
            case k.installing:
                l = "installing";
                break;
            case k.installed:
                l = "installed";
                break;
            case k.failed:
                l = "failed";
                break;
            case k.deleted:
                l = "deleted";
                break;
            case k.installFailed:
                l = "timeout";
                break;
            case k.install_cancel:
                l = "install_cancel";
                break
        }
        return l
    }}
})();
Airdroid.TaskManage.Task = Backbone.Model.extend({defaults:{id:"", name:"", url:"", icon:"", remark:"2.3", total:0, readed:0, speed:0, status:"", type:1}});
Airdroid.TaskManage.TaskCollection = Backbone.Collection.extend({model:Airdroid.TaskManage.Task, getByTaskId:function (a) {
    return this.detect(function (b) {
        return(b.get("id") == a)
    })
}, getByTaskStatus:function (a) {
    return this.detect(function (b) {
        return(b.get("status") == a)
    })
}, getUnCompleteTasks:function () {
    return this.select(function (a) {
        return(a.get("status") == 100 || a.get("status") == 101 || a.get("status") == 102 || a.get("status") == 200)
    }).length
}, getByTaskUrl:function (a) {
    return this.detect(function (b) {
        return(b.get("url") == a)
    })
}});
Airdroid.TaskManage.TaskView = Backbone.View.extend({el:"#task_list_view", waiting_install_tip_mask_template:null, task_tr_id:"", initialize:function () {
    var a = Airdroid.Util.GetTemplate("tips");
    this.waiting_install_tip_mask_template = _.template(a);
    _.bindAll(this, "render", "changeProgressBar", "changeSpeed", "changeStatus", "changeTotal");
    this.model.bind("change:readed", this.changeProgressBar);
    this.model.bind("change:speed", this.changeSpeed);
    this.model.bind("change:status", this.changeStatus);
    this.model.bind("change:total", this.changeTotal)
}, render:function () {
    Airdroid.ScrollPane.TaskListAPI.getContentPane().prepend(_.template(this.task_template, this.model.toJSON()));
    this.task_tr_id = "task_tr_" + this.model.get("id");
    this.changeProgressBar();
    this.changeSpeed();
    this.changeStatus();
    this.changeTotal();
    this.bindEvent();
    return this
}, bindEvent:function () {
    $("#" + this.task_tr_id + " .checkbox").click(function () {
        var a = $("input:checkbox", this);
        if (a.attr("checked")) {
            $(this).removeClass("checkbox_selected");
            $(this).parent().removeClass("app_list_item_selected")
        } else {
            $(this).addClass("checkbox_selected");
            $(this).parent().addClass("app_list_item_selected")
        }
        a.attr("checked", !a.attr("checked"));
        Airdroid.Cache.TaskManageView.updateCheckAll()
    })
}, changeProgressBar:function () {
    var a = Airdroid.TaskManage.fmt.percentString(100 * this.model.get("readed") / this.model.get("total"));
    $("#" + this.task_tr_id + " .download_progress div:first-child").animate({width:a + "px"}, {queue:false, duration:300});
    $("#" + this.task_tr_id + " .download_progress_v").html(a + " %")
}, changeSpeed:function () {
    var a = $("#" + this.task_tr_id + " .download_speed");
    var c = $("#" + this.task_tr_id + " .app_list_item_col_remain");
    if (this.model.get("status") == Airdroid.TaskManage.Status.downloading) {
        a.html(Airdroid.TaskManage.fmt.speedBps(this.model.get("speed")));
        $.publish("/event/widget/task/speed", [
            {speed:bytesToSize(this.model.get("speed")) + "/s"}
        ]);
        if (this.model.get("speed") > 0) {
            var b = ((this.model.get("total") - this.model.get("readed")) / this.model.get("speed")).toFixed(0);
            b > 0 ? c.html(Airdroid.TaskManage.fmt.timeInterval(b)) : c.html("")
        } else {
            c.html("")
        }
    } else {
        c.html("");
        $.publish("/event/widget/task/speed", [
            {speed:"No Task"}
        ])
    }
}, changeStatus:function () {
    if (this.model.get("status") == Airdroid.TaskManage.Status.installing) {
        $("#" + this.task_tr_id + " .app_list_item_col_state .download_progress").hide();
        $("#" + this.task_tr_id + " .app_list_item_col_state").append(' <div class="installing">Installing...</div>')
    } else {
        $("#" + this.task_tr_id + " .app_list_item_col_state .download_progress").show();
        $("#" + this.task_tr_id + " .app_list_item_col_state .installing").remove()
    }
    var h = $("#" + this.task_tr_id + " .download_progress>div:first-child");
    if (this.model.get("status") == Airdroid.TaskManage.Status.stoped) {
        h.attr("class", "download_progress_n")
    } else {
        if (this.model.get("status") == Airdroid.TaskManage.Status.failed) {
            h.attr("class", "download_progress_e")
        } else {
            h.attr("class", "download_progress_ing")
        }
    }
    var j = $("#" + this.task_tr_id + " .app_list_item_col_remain");
    var e = $("#" + this.task_tr_id + " .download_speed");
    var a = $("#" + this.task_tr_id + " .app_list_item_col_command2");
    if (this.model.get("status") == Airdroid.TaskManage.Status.waiting) {
        j.html("");
        e.html("waiting");
        a.html('<a href="#" taskid="' + this.model.get("id") + '">Start</a><a href="#" taskid="' + this.model.get("id") + '">Delete</a>')
    } else {
        if (this.model.get("status") == Airdroid.TaskManage.Status.stoped) {
            j.html("");
            e.html("stoped");
            a.html('<a href="#" taskid="' + this.model.get("id") + '">Start</a><a href="#" taskid="' + this.model.get("id") + '">Delete</a>')
        } else {
            if (this.model.get("status") == Airdroid.TaskManage.Status.downloading) {
                a.html('<a href="#" taskid="' + this.model.get("id") + '">Stop</a><a href="#" taskid="' + this.model.get("id") + '">Delete</a>')
            } else {
                if (this.model.get("status") == Airdroid.TaskManage.Status.downloaded) {
                    j.html("");
                    e.html("downloaded");
                    if (!Airdroid.TaskManage.isInit) {
                        showTipMsg(this.model.get("name") + " download completed");
                        var g = this.model.get("id");
                        var c = this.model.get("name");
                        $.publish("[to:ui]/e/nw/dpl", ["t" + idFilter(g), "apk", {msgBody:"Please click on phone for installing" + c, msgStatus:""}, {delayRemove:true, delayRemoveTime:5000}])
                    }
                    a.html('<a href="#" taskid="' + this.model.get("id") + '">Delete</a>')
                } else {
                    if (this.model.get("status") == Airdroid.TaskManage.Status.installing) {
                        var g = this.model.get("id");
                        var c = this.model.get("name");
                        $.publish("[to:ui]/e/nw/dpl", ["t" + idFilter(g), "apk", {msgBody:"Install " + c, msgStatus:"Processing"}, {}]);
                        j.html("");
                        a.html("")
                    } else {
                        if (this.model.get("status") == Airdroid.TaskManage.Status.installed) {
                            var g = this.model.get("id");
                            var c = this.model.get("name");
                            $.publish("[to:ui]/e/nw/dpl", ["t" + idFilter(g), "apk", {msgBody:"Install " + c, msgStatus:"OK"}, {delayRemove:true, delayRemoveTime:5000}]);
                            j.html("");
                            var f = $("#taskmanage #task_tr_" + this.model.get("id"));
                            $(".download_progress", f).show();
                            $(".waiting", f).hide();
                            e.html("Installed");
                            if (!Airdroid.TaskManage.isInit) {
                                showTipMsg("Install Success: " + this.model.get("name"))
                            }
                            a.html('<a href="#" taskid="' + this.model.get("id") + '">Delete</a>')
                        } else {
                            if (this.model.get("status") == Airdroid.TaskManage.Status.failed) {
                                var g = this.model.get("id");
                                var c = this.model.get("name");
                                $.publish("[to:ui]/e/nw/dpl", ["t" + idFilter(g), "apk", {msgBody:"Install " + c, msgStatus:"Failed"}, {delayRemove:true, delayRemoveTime:5000}]);
                                j.html("");
                                e.html("Failed");
                                a.html('<a href="#" taskid="' + this.model.get("id") + '">Retry</a><a href="#" taskid="' + this.model.get("id") + '">Delete</a>')
                            } else {
                                if (this.model.get("status") == Airdroid.TaskManage.Status.deleted) {
                                    Airdroid.Cache.TaskManageModel.deleteTaskById(this.model.get("id"))
                                } else {
                                    if (this.model.get("status") == Airdroid.TaskManage.Status.installFailed) {
                                        j.html("");
                                        e.html("timeout");
                                        a.html('<a href="#" taskid="' + this.model.get("id") + '">Delete</a>')
                                    } else {
                                        if (this.model.get("status") == Airdroid.TaskManage.Status.installForSure) {
                                            j.html("");
                                            a.html('<a href="#" taskid="' + this.model.get("id") + '">Delete</a>');
                                            var b = this;
                                            var f = $("#taskmanage #task_tr_" + this.model.get("id"));
                                            showDownloadMaskTip(f, "install", "tips_wait_for_install_confirm", "taskmanage", "Instailing", 280, "Delete")
                                        } else {
                                            if (this.model.get("status") == Airdroid.TaskManage.Status.install_cancel) {
                                                var g = this.model.get("id");
                                                var c = this.model.get("name");
                                                $.publish("[to:ui]/e/nw/dpl", ["t" + idFilter(g), "apk", {msgBody:"Install " + c, msgStatus:"Cancelled"}, {delayRemove:true, delayRemoveTime:5000}]);
                                                clearMaskTip();
                                                e.html("Downloaded")
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}, changeTotal:function () {
    $("#" + this.task_tr_id + " .app_list_item_col_size").html(Airdroid.TaskManage.fmt.size(this.model.get("total")))
}});
Airdroid.TaskManage.TaskListView = Backbone.View.extend({template:null, initialize:function () {
    this.template = Airdroid.Util.GetTemplate("task-item");
    _.bindAll(this, "render", "addTask");
    this.model.bind("add", this.addTask);
    this.model.bind("remove", this.removeTask)
}, render:function () {
    return this
}, addTask:function (a) {
    var b = new Airdroid.TaskManage.TaskView({model:a});
    b.task_template = this.template;
    b.render()
}, removeTask:function (a) {
    $("#task_tr_" + a.get("id")).remove()
}});
Airdroid.TaskManage.ModuleModel = Backbone.Model.extend({tasks:null, initialize:function () {
    this.tasks = new Airdroid.TaskManage.TaskCollection;
    _.bindAll(this, "addOrUpdate")
}, addData:function (a) {
    a = _.toArray(a).reverse();
    _.each(a, this.addOrUpdate);
    this.upDateUnCompleteCount();
    if (!_.isUndefined(Airdroid.ScrollPane.TaskListAPI)) {
        Airdroid.ScrollPane.TaskListAPI.reinitialise()
    }
    Airdroid.TaskManage.isInit = false
}, upDateUnCompleteCount:function () {
    var a = this.tasks.getUnCompleteTasks();
    if (a == 0) {
        $("#downloadWidgetTaskCount").hide()
    } else {
        $("#downloadWidgetTaskCount").html(a).show()
    }
}, addOrUpdate:function (b) {
    var a = this.tasks.getByTaskId(b.id);
    if (!a) {
        this.tasks.add(b)
    } else {
        a.set(b)
    }
}, updateTasks:function () {
    Airdroid.TaskManage.ajax.getTaskByid(-1, function (a) {
        Airdroid.Cache.TaskManageModel.addData(a);
        Airdroid.TaskManage.isInit = false
    }, function () {
        showMsgBox("connect to server error!")
    })
}, updateTasksByPollWay:function () {
    Airdroid.Cache.TaskTimer = setInterval(this.updateTasks, 1000)
}, deleteTaskById:function (a) {
    this.tasks.remove(this.tasks.getByTaskId(a))
}, removeInstalled:function (f) {
    var c = new Array();
    for (var e = 0, a = this.tasks.models.length; e < a; e++) {
        var b = this.tasks.models[e];
        if (b.get("status") == 105) {
            c.push(b)
        }
    }
    _.each(c, function (g) {
        Airdroid.Cache.TaskManageModel.deleteTaskById(g.get("id"))
    })
}, reomveAll:function () {
    alert(this.tasks.length);
    this.tasks.each(function (a) {
        alert("wew");
        a.set({status:201});
        alert(a.get("status"))
    })
}});
Airdroid.TaskManage.ModuleView = Backbone.View.extend({el:"#taskmanage", template:null, initialize:function () {
    this.template = Airdroid.Util.GetTemplate("taskmanage");
    this.taskListView = new Airdroid.TaskManage.TaskListView({model:this.model.tasks});
    this.hasInitScoket = false
}, events:{"click .btn_start":"handleStart", "click .btn_stop":"handleStop", "click .btn_download":"handleDownload", "click #removeInstalled":"handleRemoveInstalled", "click #deleteSelect":"handleDeleteSelect"}, render:function () {
    $(this.el).html(this.template);
    this.bindEvent();
    return this
}, updateCheckAll:function () {
    var a = $(".app_list_top_c .checkbox_all");
    a.attr("checked", ($("#task_list_view input:checkbox").length > 0 && $("#task_list_view input:checkbox").length == $("#task_list_view input:checked").length));
    a.attr("checked") ? a.parent().addClass("checkbox_selected") : a.parent().removeClass("checkbox_selected")
}, bindEvent:function () {
    $("#taskmanage .app_list_top_c .checkbox").click(function () {
        if ($("input:checkbox", this).attr("checked")) {
            $("input:checkbox", this).attr("checked", false);
            $(this).removeClass("checkbox_selected");
            $("#task_list_view .checkbox").each(function () {
                $(this).removeClass("checkbox_selected").parent().removeClass("app_list_item_selected");
                $(this).children("input:checkbox").attr("checked", false)
            })
        } else {
            $("input:checkbox", this).attr("checked", true);
            $(this).addClass("checkbox_selected");
            $("#task_list_view .checkbox").each(function () {
                $(this).addClass("checkbox_selected").parent().addClass("app_list_item_selected");
                $(this).children("input:checkbox").attr("checked", true)
            })
        }
    });
    $(".app_list_item_col_command2 a").live("click", function () {
        var c = $(this).html();
        var a = $(this).attr("taskid");
        if (c == "Delete") {
            showConfirmBox("Are you sure to delete this task?", function () {
                Airdroid.TaskManage.ajax.taskOpration(a, 1, function (e) {
                    Airdroid.Cache.TaskManageModel.deleteTaskById(a);
                    Airdroid.Cache.TaskManageModel.upDateUnCompleteCount();
                    if (!_.isUndefined(Airdroid.ScrollPane.TaskListAPI)) {
                        Airdroid.ScrollPane.TaskListAPI.reinitialise()
                    }
                }, function () {
                    showMsgBox("failed to delete the task!")
                })
            })
        } else {
            var b = 0;
            switch (c) {
                case"Start":
                    b = 5;
                    break;
                case"Retry":
                    b = 2;
                    break;
                case"Stop":
                    b = 4;
                    break;
                case"Continue":
                    b = 5;
                    break
            }
            Airdroid.TaskManage.ajax.taskOpration(a, b, null, function (e) {
                showMsgBox("failed to " + e + " the task!")
            })
        }
    });
    return
}, show:function () {
    if (this.view) {
        Airdroid.TaskManage.ajax.getTaskByid(-1, function (a) {
            Airdroid.Cache.TaskManageModel.addData(a)
        }, function () {
            showMsgBox("connect to server error!")
        });
        $(this.el).html(this.view)
    }
}, handleRemoveInstalled:function () {
    Airdroid.TaskManage.ajax.taskOpration(-1, 3, function (a) {
        Airdroid.Cache.TaskManageModel.removeInstalled();
        Airdroid.Cache.TaskManageView.updateCheckAll()
    }, function () {
        showMsgBox("failed to remove installed!")
    })
}, handleStart:function () {
    var a = this.getTaskIds();
    if (a.length == 0) {
        showMsgBox("please select task to start!");
        return
    }
    _.each(a, function (b) {
        +Airdroid.TaskManage.ajax.taskOpration(b, 2, function (c) {
            showMsgBox("start sucesss")
        }, function () {
            showMsgBox("connect to server error!")
        })
    })
}, handleStop:function () {
    var a = this.getTaskIds();
    if (a.length == 0) {
        showMsgBox("please select task to start!");
        return
    }
    _.each(a, function (b) {
        Airdroid.TaskManage.ajax.taskOpration(b, 4, function (c) {
            showMsgBox("stop sucesss")
        }, function () {
            showMsgBox("connect to server error!")
        })
    })
}, handleDeleteSelect:function () {
    var a = this.getTaskIds();
    if (a.length == 0) {
        showMsgBox("please select task to delete!");
        return
    }
    showConfirmBox("are you sure to delete the selected tasks?", function () {
        Airdroid.TaskManage.ajax.taskOpration(a.join(","), 1, function (c) {
            if (c != null && c.id != null) {
                var b = c.id.split(",")
            }
            _.each(b, function (e) {
                if (e != null && e != "") {
                    Airdroid.Cache.TaskManageModel.deleteTaskById(e)
                }
            });
            Airdroid.Cache.TaskManageModel.upDateUnCompleteCount();
            Airdroid.Cache.TaskManageView.updateCheckAll()
        }, function () {
            showMsgBox("failed to delete the task!")
        });
        if (!_.isUndefined(Airdroid.ScrollPane.TaskListAPI)) {
            Airdroid.ScrollPane.TaskListAPI.reinitialise()
        }
    })
}, getTaskIds:function () {
    return _.map($("#task_list_view input:checked", this.el), function (a) {
        return $(a).attr("taskid")
    })
}, handleDownload:function () {
    var a = $(".taskdownload-input", this.el).attr("value");
    if (a != "" && a != "http://") {
        downloadApp("1", "apk", null, a);
        $(".taskdownload-input", this.el).attr("value", "")
    }
}, initSocket:function () {
    if (this.hasInitScoket) {
        return
    }
    Airdroid.TaskManage.ajax.getTaskByid(-1, function (a) {
        Airdroid.Cache.TaskManageModel.addData(a);
        var b = setInterval(function () {
            if (Airdroid.Socket.support) {
                if (Airdroid.Socket.isConnect) {
                    var c = {event:"download_progress", send:"web", data:""};
                    Airdroid.Socket.send(JSON.stringify(c));
                    clearInterval(b)
                }
            } else {
                clearInterval(b)
            }
        }, 1000)
    }, function () {
        showMsgBox("connect to server error!")
    });
    this.hasInitScoket = true
}, init:function () {
    Airdroid.Cache.TaskManageView.render();
    var a = $("#task_list_view").jScrollPane({animateScroll:true, mouseWheelSpeed:108, arrowButtonSpeed:108, verticalDragMinHeight:18});
    Airdroid.ScrollPane.TaskListAPI = a.data("jsp");
    Airdroid.ScrollPane.TaskListAPI.reinitialise()
}});
Airdroid.WebBrowser = {};
Airdroid.WebBrowser.View = Backbone.View.extend({el:"#webbrowser", template:null, tab_template:null, system_tab_ids:["help_doc", "about_us"], isCleanMode:true, events:{"click .webbrowser_tabs .tabs .tab_title":"webTabClickHandler", "click .webbrowser_tabs .tabs .tab_c .tab_close":"tabCloseClickHandler", "click .webbrowser_bar a":"barAclickHandler", "click .webbrowser_tabs .tabs_actions a":"tabActionsAclickHandler", "click #webbrowser .webbrowser_tabs .tabs_list_wrap_container a":"tabListItemClick", "click #webbrowser .webbrowser_tabs .tabs_list_wrap_arrow":"listArrowClickHandler"}, initialize:function () {
    var a = this;
    a.template = _.template(Airdroid.Util.GetTemplate("browser"));
    a.render();
    a.tab_template = '<div class="web_tab tab_current">                                <div class="tab_l"></div>                                <div class="tab_r"></div>                                <div class="tab_c">                                    <div class="tab_loading"><img src="ui/theme/default/images/loading_.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/loading_.gif*//></div>                                    <div class="tab_title"></div>                                    <div class="tab_close" title="close"></div>                                </div>                            </div>';
    if (a.isCleanMode) {
        $(".webbrowser_bar", this.el).hide();
        $(".webbrowser_tabs", this.el).css("top", "2px").find(".tabs_actions").hide().end().find(".tabs").css("width", "100%");
        $(".webbrowser_container", this.el).css({top:"42px"})
    } else {
        $("#webbrowser_url_input").keyup(function (b) {
            if (b.keyCode == 13) {
                a.forward()
            }
        })
    }
}, render:function () {
    $(this.el).html(this.template({usedLang:Airdroid.UsedLang.Browser}));
    return this
}, forward:function () {
    var b = $("#webbrowser_url_input").val();
    b = $.trim(b);
    var a = "";
    if (b != "") {
        if (!/^http:\/\//.test(b)) {
            b = "http://" + b
        }
        a = $(".webbrowser_tabs .tab_current").attr("tab_id");
        if (_.include(this.system_tab_ids, a)) {
            a = this.addBrowserTab(null, "New Tab", b)
        } else {
            $(".webbrowser_container").find("#" + a).attr("src", b)
        }
        $("#webbrowser_url_input").val(b);
        this.loadingIframe($(".webbrowser_container").find("#" + a))
    }
}, addBrowserTab:function (c, f, b) {
    if (c == null) {
        c = _.uniqueId("web_tab")
    }
    if ($(".webbrowser_tabs .tabs div[tab_id='" + c + "']").length > 0) {
        $(".webbrowser_tabs .tabs div[tab_id='" + c + "']", this.el).addClass("tab_current").removeClass("tab").siblings(".tab_current").addClass("tab").removeClass("tab_current");
        $(".webbrowser_container").find("#" + c).show().siblings("iframe").hide()
    } else {
        var e = $(this.tab_template);
        e.find(".tab_title").html(f).end().appendTo($(".webbrowser_tabs .tabs .tabs_container").find(".tab_current").removeClass("tab_current").addClass("tab").end(), this.el);
        if (c != null) {
            e.attr("tab_id", c)
        }
        $(".webbrowser_container").find("iframe").hide();
        var a = $("<iframe>");
        a.attr("src", b).appendTo($(".webbrowser_container"), this.el);
        if (c != null) {
            a.attr("id", c)
        }
        if (b != "" && b != null) {
            this.loadingIframe(a)
        }
        $("<a>").appendTo($("#webbrowser_tab_list .tabs_list_wrap_container")).attr("tab_id", c).html(f).addClass("tab_selected").siblings(".tab_selected").removeClass("tab_selected")
    }
    return c
}, loadingIframe:function (a) {
    var b = $(".webbrowser_tabs .tabs div[tab_id='" + a.attr("id") + "']", this.el);
    b.find(".tab_loading img").show();
    a.load(function () {
        b.find(".tab_loading img").hide()
    })
}, tabListItemClick:function (b) {
    var a = $(b.currentTarget).attr("tab_id");
    $(".webbrowser_tabs .tabs div[tab_id='" + a + "']", this.el).addClass("tab_current").removeClass("tab").siblings(".tab_current").addClass("tab").removeClass("tab_current");
    $(".webbrowser_container").find("#" + a).show().siblings("iframe").hide();
    this.setCurrentListTabItem();
    $("#webbrowser_tab_list").hide()
}, listArrowClickHandler:function (a) {
    $("#webbrowser_tab_list").hide()
}, webTabClickHandler:function (c) {
    var b = $(c.currentTarget).parents(".web_tab");
    var a = b.attr("tab_id");
    b.addClass("tab_current").removeClass("tab");
    b.siblings(".tab_current").addClass("tab").removeClass("tab_current");
    $(".webbrowser_container").find("#" + a).show().siblings("iframe").hide();
    this.setCurrentListTabItem()
}, tabCloseClickHandler:function (a) {
    this.doCloseTab($(a.currentTarget).parents(".web_tab").attr("tab_id"))
}, doCloseTab:function (a) {
    var b = $(".webbrowser_tabs .tabs div[tab_id='" + a + "']", this.el);
    if (b.hasClass("tab_current")) {
        b.prev("div.tab.htm"/*tpa=http://192.168.119.101:8888/div.tab*/).addClass("tab_current").removeClass("tab").end().remove();
        $(".webbrowser_container").find("#" + a).prev("iframe").show().end().remove()
    } else {
        b.remove();
        $(".webbrowser_container").find("#" + a).remove()
    }
    $("#webbrowser_tab_list .tabs_list_wrap_container a[tab_id='" + a + "']").remove();
    this.checkEmpty();
    this.setCurrentListTabItem()
}, setCurrentListTabItem:function () {
    $("#webbrowser_tab_list .tabs_list_wrap_container a[tab_id='" + $(".webbrowser_tabs .tabs .tabs_container .tab_current").attr("tab_id") + "']").addClass("tab_selected").siblings(".tab_selected").removeClass("tab_selected")
}, barAclickHandler:function (b) {
    var c = $(b.currentTarget).attr("menu");
    var a = $(".webbrowser_container").find("iframe:visible");
    if (c == "back" && a.attr("src") != "") {
        parent.document.getElementById(a.attr("id")).contentWindow.history.go(-1);
        this.loadingIframe(a)
    } else {
        if (c == "go" && a.attr("src") != "") {
            parent.document.getElementById(a.attr("id")).contentWindow.history.go(1);
            this.loadingIframe(a)
        } else {
            if (c == "refresh" && a.attr("src") != "") {
                parent.document.getElementById(a.attr("id")).contentWindow.location.reload(false);
                this.loadingIframe(a)
            } else {
                if (c == "forward") {
                    this.forward()
                }
            }
        }
    }
}, tabActionsAclickHandler:function (a) {
    var b = $(a.currentTarget).attr("menu");
    if (b == "add_tab") {
        this.addBrowserTab(null, Airdroid.UsedLang.Browser._new_tab, "")
    } else {
        if (b == "list_tabs") {
            $("#webbrowser_tab_list").toggle()
        }
    }
}, checkEmpty:function () {
    if ($(".webbrowser_container").find("iframe").length == 0) {
        this.addBrowserTab(null, Airdroid.UsedLang.Browser._new_tab, "")
    }
}});
if (jQuery) {
    (function (a) {
        a.extend({rootPath:"/sd/", fileBody:"#file_main_view", gridArea:"#file_grid .jspPane", treeArea:"#file_tree", rootName:"SD Card", fileWin:"#w_filemanage", fileNameReg:/[\\\:\/\*\?\"<>|]/, visibaleFileItemsAr:[], loadingFileItemsThreadFinished:true, dirStack:{index:0, stack:["/sd/"]}, severHandler:function (g, b, f, e, c) {
            var h = e + "?" + a.param(g);
            dataType = c || "jsonp";
            if (dataType == "jsonp") {
                h = h + "&callback=?"
            }
            if (a.isFunction(b)) {
                b.apply(this, [a.fileWin])
            }
            a.jsonp({type:"GET", url:h, async:true, cache:false, dataType:dataType, success:f, error:function (k, l, j) {
                a.loadingEndHandler();
                NetworkError()
            }})
        }, dropHander:function (b, m) {
            var e = a(b.target);
            var k = m.draggable;
            var h = [
                {abSrc:k.attr("absrc"), extName:k.attr("extName")}
            ];
            var l = e.attr("absrc");
            if (!l) {
                return
            }
            var n = h[0].abSrc.substring(0, h[0].abSrc.lastIndexOf("/"));
            if (n == "/sd") {
                n = a.rootPath
            }
            if (l == n) {
                return
            }
            k.siblings(".ui-selected").each(function () {
                var o = a(this).attr("absrc");
                if (o) {
                    h.push({abSrc:o, extName:a(this).attr("extName")})
                }
            });
            var c = [];
            var g = [];
            _.each(h, function (o) {
                if (o.extName == "dir") {
                    g.push(o.abSrc.substr(o.abSrc.lastIndexOf("/") + 1))
                } else {
                    c.push(o.abSrc.substr(o.abSrc.lastIndexOf("/") + 1))
                }
            });
            var j = 1;
            var f = {spath:n, dpath:l, files:c.join(Airdroid.FileManage.seprate), dirs:g.join(Airdroid.FileManage.seprate), delsource:j};
            a.severHandler(f, function () {
                a.loadingHandler(a.fileWin)
            }, function () {
                if (g.length > 0) {
                    a.refreshTree(n, true);
                    a.refreshTree(l, true)
                }
                a.refreshGrid({cur_path:n});
                a.loadingEndHandler();
                a.publish("[to:ui]/e/nw/dpl", ["drop_ok_tip", "", {msgBody:Airdroid.UsedLang.Filemanage._tip_copy_cut_ok.format(Airdroid.UsedLang.Filemanage._menu_drop, c.join(",") + g.join(","), n, l), msgStatus:"OK"}, {delayRemove:true, delayRemoveTime:15000}])
            }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/moveto")
        }, exportSelectedItems:function () {
            var c = a(".ui-selected", a.gridArea);
            if (c.length == 0) {
                showDelayMask(Airdroid.UsedLang.Filemanage._not_select_item, a("#w_filemanage"));
                return
            }
            if (c.length == 1 && c.attr("extname") != "dir") {
                a("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/export?saveas=1&pathfile=" + encodeURIComponent(c.attr("abSrc")));
                return
            }
            var b = [];
            c.each(function () {
                b.push({abSrc:a(this).attr("absrc"), extName:a(this).attr("extName")})
            });
            a.doDownLoadZip(b, Airdroid.UsedLang.Filemanage._export_zip_name + ".zip")
        }, checkDropAccept:function (f, g) {
            var c = g || a(this);
            var e = [
                {abSrc:f.attr("absrc"), extName:f.attr("extName")}
            ];
            f.siblings(".ui-selected").each(function () {
                e.push({abSrc:a(this).attr("absrc"), extName:a(this).attr("extName")})
            });
            var b = c.attr("absrc");
            return a.checkAcceptBatch(e, b)
        }, checkAcceptBatch:function (f, c) {
            if (a.isArray(f)) {
                var b = f.length;
                for (var e = 0; e < b; e++) {
                    if (!a.checkAccept(f[e], c)) {
                        return false
                    }
                }
                return true
            } else {
                return a.checkAccept(f, c)
            }
        }, checkAccept:function (c, b) {
            var e = c.abSrc;
            var f = e.substring(0, e.lastIndexOf("/"));
            if (!b || !e || e == a.rootPath || e == b || f == b) {
                return false
            }
            e = e + "/";
            if (e == b.substr(0, e.length)) {
                return false
            }
            return true
        }, refreshGrid:function (b) {
            a(a.gridArea).grid(b)
        }, refreshTree:function (e, c) {
            if (!e) {
                return
            }
            var b = a(a.treeArea + " div[absrc='" + e + "']");
            if (c) {
                b.siblings("ul").remove()
            }
            b.tree()
        }, refreshAll:function (c, b) {
            a.refreshTree(b, true);
            a.refreshTree(c);
            a.refreshGrid()
        }, clearContextMenu:function () {
            a("div.context_menu").remove()
        }, newfolderHandler:function (b) {
            showPromptBox(Airdroid.UsedLang.Filemanage._add_dir_title, Airdroid.UsedLang.Filemanage._add_dir_input_name, "", function () {
                var c = arguments[0];
                if (_.isUndefined(c) || c == "") {
                    return
                }
                c = a.trim(c);
                a.severHandler({cur_path:a.currentHandleSrc, newdir:c}, null, function (e) {
                    if (e.result == 1) {
                        a.refreshTree(a.currentHandleSrc, true);
                        a.refreshGrid()
                    } else {
                        if (e.result == -1) {
                            showMsgBox(Airdroid.UsedLang.Filemanage._add_dir_fail_fileexist.format(c))
                        } else {
                            showMsgBox(Airdroid.UsedLang.Filemanage._add_dir_fail.format(c))
                        }
                    }
                }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/createdir")
            }, null, function () {
                var c = arguments[0];
                if (_.isUndefined(c) || c == "") {
                    return Airdroid.UsedLang.Filemanage._name_is_null
                }
                if (a.fileNameReg.test(c)) {
                    return Airdroid.UsedLang.Filemanage._illegal_character
                }
                var e = false;
                a(".file_grid", a.gridArea).each(function () {
                    var f = a(this).attr("file_name");
                    if (f == c) {
                        e = true
                    }
                });
                if (e) {
                    return Airdroid.UsedLang.Filemanage._name_exist
                }
                return null
            })
        }, renameHandler:function (b) {
            var c = b.data.selectedItems[0];
            a.doRename(c)
        }, doRename:function (g) {
            var b = a.currentHandleSrc;
            var h = false;
            if (b != a.rootPath && b.substr(b.length - 1) == "/") {
                h = true
            }
            var c = false;
            if (g.abSrc == b) {
                c = true;
                if (h) {
                    b = b.substr(0, b.lastIndexOf("/") - 1)
                } else {
                    b = b.substr(0, b.lastIndexOf("/"))
                }
            }
            var f = g.abSrc.substr(g.abSrc.lastIndexOf("/") + 1);
            var e = 0;
            if (g.extName != "dir") {
                e = 1
            }
            showPromptBox(Airdroid.UsedLang.Filemanage._rename_title, Airdroid.UsedLang.Filemanage._rename_input_name, f, function () {
                var j = arguments[0];
                if (_.isUndefined(j) || j == "") {
                    return
                }
                a.severHandler({cur_path:b, obj:f, newname:j, type:e}, null, function (k) {
                    if (k.result == 1) {
                        if (e == 0) {
                            if (b == "/sd") {
                                b = "/sd/"
                            }
                            a(a.treeArea).find('div[absrc="' + g.abSrc + '"]').remove();
                            a.refreshTree(b, true)
                        }
                        if (c) {
                            a.refreshGrid({cur_path:b + "/" + j})
                        } else {
                            a.refreshGrid()
                        }
                    } else {
                        if (k.result == -1) {
                            showMsgBox(Airdroid.UsedLang.Filemanage._name_exist)
                        } else {
                            showMsgBox(Airdroid.UsedLang.Filemanage._rename_file_fail.format(f))
                        }
                    }
                }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/rename")
            }, function () {
            }, function () {
                var j = arguments[0];
                if (_.isUndefined(j) || j == "") {
                    return Airdroid.UsedLang.Filemanage._name_is_null
                }
                if (a.fileNameReg.test(j)) {
                    return Airdroid.UsedLang.Filemanage._illegal_character
                }
                if (j == f) {
                    return Airdroid.UsedLang.Filemanage._name_not_changed
                }
                var k = false;
                a(".file_grid", a.gridArea).each(function () {
                    var l = a(this).attr("file_name");
                    if (l == j) {
                        k = true
                    }
                });
                if (k) {
                    return Airdroid.UsedLang.Filemanage._name_exist
                }
                return null
            });
            if (e == 1) {
                createSelection(document.getElementById("prompInput"), 0, f.lastIndexOf("."))
            }
        }, deleteHandler:function (b) {
            var c = b.data.selectedItems;
            a.doDelete(c)
        }, doDelete:function (k, g, c) {
            var b = a.currentHandleSrc;
            var h = false;
            if (b != a.rootPath && b.substr(b.length - 1) == "/") {
                h = true
            }
            if (k[0].abSrc == b) {
                if (h) {
                    b = b.substr(0, b.lastIndexOf("/") - 1)
                } else {
                    b = b.substr(0, b.lastIndexOf("/"))
                }
            }
            var f = [];
            var e = false;
            _.each(k, function (l) {
                f.push(l.abSrc.substr(l.abSrc.lastIndexOf("/") + 1));
                if (l.extName == "dir") {
                    e = true
                }
            });
            var j = Airdroid.UsedLang.Filemanage._confirm_delete_single_file;
            if (f.length > 1) {
                j = Airdroid.UsedLang.Filemanage._confirm_delete_multi_file.format(f.length)
            }
            showConfirmBox(j, function () {
                var l = null;
                if (g) {
                    l = a.loadingHandler(g)
                }
                a.severHandler({cur_path:b, files:f.join(Airdroid.FileManage.seprate)}, l, function (m) {
                    a.loadingEndHandler();
                    if (b == "/sd") {
                        b = "/sd/"
                    }
                    if (e) {
                        a.refreshTree(b, true)
                    }
                    a.refreshGrid({cur_path:b});
                    if (c) {
                        c.apply()
                    }
                }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/delete")
            }, function () {
            }, "Delete")
        }, copyHandler:function (b) {
            var c = b.data.selectedItems;
            a.extend({copySource:{type:"copy", fileItems:c}});
            a("#filemanage .abtn_wrap a[menu='Paste']").removeClass("btn-state-disabled")
        }, cutHandler:function (c) {
            var e = c.data.selectedItems;
            var b = false;
            if (e[0].abSrc == a.currentHandleSrc) {
                b = true
            }
            a.extend({copySource:{type:"cut", fileItems:e, isSelf:b, isTree:false}});
            a("#filemanage .abtn_wrap a[menu='Paste']").removeClass("btn-state-disabled")
        }, folderTreeCopyHandler:function (b) {
            var c = b.data.selectedItems;
            a.extend({copySource:{type:"copy", fileItems:c}})
        }, folderTreeCutHandler:function (c) {
            var e = c.data.selectedItems;
            var b = false;
            if (e[0].abSrc == a.currentHandleSrc) {
                b = true
            }
            a.extend({copySource:{type:"cut", fileItems:e, isSelf:b, isTree:true}})
        }, pasteHandler:function (b) {
            var e = b.data.selectedItems[0];
            if (!e || !e.abSrc) {
                return
            }
            var c = e.abSrc;
            a.doPaste(c)
        }, doPaste:function (e) {
            var c = a.copySource.fileItems[0].abSrc.substring(0, a.copySource.fileItems[0].abSrc.lastIndexOf("/"));
            if (c == "/sd") {
                c = a.rootPath
            }
            var f = [];
            var h = [];
            _.each(a.copySource.fileItems, function (j) {
                if (j.extName == "dir") {
                    h.push(j.abSrc.substr(j.abSrc.lastIndexOf("/") + 1))
                } else {
                    f.push(j.abSrc.substr(j.abSrc.lastIndexOf("/") + 1))
                }
            });
            var b = a.copySource.type == "copy" ? 0 : 1;
            var g = {spath:c, dpath:e, files:f.join(Airdroid.FileManage.seprate), dirs:h.join(Airdroid.FileManage.seprate), delsource:b};
            a.severHandler(g, a.loadingHandler(a.fileWin), function () {
                var j = false || (a.copySource.type == "cut");
                var k = Airdroid.UsedLang.Filemanage._menu_copy;
                if (j) {
                    k = Airdroid.UsedLang.Filemanage._menu_copy;
                    if (h.length > 0) {
                        if (a.copySource.isTree == true) {
                            a.refreshTree(c, true)
                        } else {
                            if (a.copySource.isSelf) {
                                a.refreshTree(c.substring(0, c.lastIndexOf("/")), true)
                            } else {
                                a.refreshTree(c, true)
                            }
                        }
                        a.refreshTree(e, true)
                    }
                } else {
                    if (h.length > 0) {
                        a.refreshTree(e)
                    }
                }
                a.publish("[to:ui]/e/nw/dpl", ["copy_cut_ok_tip", "", {msgBody:Airdroid.UsedLang.Filemanage._tip_copy_cut_ok.format(k, f.join(",") + h.join(","), c, e), msgStatus:"OK"}, {delayRemove:true, delayRemoveTime:15000}]);
                a.refreshGrid();
                a.copySource = null;
                a.loadingEndHandler()
            }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/moveto")
        }, downloadHandler:function (b) {
            var c = b.data.selectedItems[0];
            a("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/export?saveas=1&pathfile=" + encodeURIComponent(c.abSrc))
        }, downloadZipHandler:function (b) {
            var c = b.data.selectedItems;
            a.doDownLoadZip(c, Airdroid.UsedLang.Filemanage._export_zip_name + ".zip")
        }, doDownLoadZip:function (h, b) {
            var c = a.currentHandleSrc;
            var g = {};
            var f = [];
            _.each(h, function (j) {
                if (j.extName == "dir") {
                    var k = j.abSrc.substr(j.abSrc.lastIndexOf("/") + 1);
                    f.push(k + "/")
                } else {
                    f.push(j.abSrc.substr(j.abSrc.lastIndexOf("/") + 1))
                }
            });
            if (c == a.rootPath) {
                g.dir = c
            } else {
                g.dir = c + "/"
            }
            g.files = f;
            var e = JSON.stringify(g);
            a("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/zip/" + b + "?type=3&params=" + e)
        }, uploadHandler:function (b) {
            var c = b.data.selectedItems[0];
            var e = c.abSrc;
            a.openUploadWin(e)
        }, openUploadWin:function (b) {
            var c = {allUploadComplete:function () {
                if (a.currentHandleSrc == b) {
                    a.refreshGrid({cur_path:b})
                }
            }, flash_file_types:"*.*", suportTypeMsg:"", flash_file_types_description:Airdroid.UsedLang.Upload._file_types_desc_files};
            openUploaderWin(b, c, Airdroid.UsedLang.Upload._win_title_files)
        }, readTxtHandler:function (b) {
            var c = "UTF-8";
            showTxtView(b);
            a("#txt-content").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/export?saveas=0&pathfile=" + encodeURIComponent(b))
        }, changeEncoder:function (c) {
            var b = (a("#encode-bar").children(":radio:checked").attr("encoding")) || "UTF-8";
            var e = {type:"readtxt", name:"file", src:c, encoder:b};
            a.severHandler(e, null, function (f) {
                if (f.status == "success") {
                    a("#txt-content").val(f.data.content)
                }
            })
        }, navigatorHandler:function (g) {
            if (g == "/sd/") {
                g = "/sd"
            }
            var f = g.split("/");
            f.shift();
            var e = a("#nav_dir_div");
            f[0] = a.rootName || "SD Card";
            e.children(".naviwrap").remove();
            var b = f.length;
            for (var c = 0; c < b; c++) {
                if (f[c]) {
                    if (c == b - 1) {
                        a("<div  class='naviwrap'><span>" + f[c] + "</span></div>").appendTo(e)
                    } else {
                        a("<div  class='naviwrap navi-button'><a>" + f[c] + "</a><span style='padding-left:5px;'>»</span> </div>").bind("click",function () {
                            var j = "";
                            $e = a(this);
                            var k = $e.prevAll(".navi-button");
                            if (k.length > 0) {
                                k.each(function (l) {
                                    if (l < k.length - 1) {
                                        var m = a(this).children("a").text();
                                        j = "/" + m + j
                                    }
                                });
                                var h = $e.children("a").text();
                                j = "/sd" + j + "/" + h
                            } else {
                                j = "/sd/"
                            }
                            a(a.gridArea).grid({cur_path:j})
                        }).appendTo(e)
                    }
                }
            }
        }, stackHandler:function (g) {
            var e = a.dirStack.index;
            var f = a.dirStack.stack;
            var h = a("#toolbar_back");
            var c = a("#toolbar_forward");
            if (g != f[e]) {
                var b = f.length - e - 1;
                f.splice(e + 1, b, g);
                e++
            }
            if (e < 1) {
                h.addClass("btn_back_disable")
            } else {
                h.removeClass("btn_back_disable")
            }
            if (e == f.length - 1) {
                c.addClass("btn_go_disable")
            } else {
                c.removeClass("btn_go_disable")
            }
            a.dirStack.index = e
        }, stackRemoveCurrent:function () {
            var b = a.dirStack.index;
            if (b > 0) {
                a.dirStack.index = b - 1;
                a.dirStack.stack.splice(b, 1)
            }
        }, backHandler:function () {
            var b = a.dirStack.index;
            if (b > 0) {
                a.dirStack.index = b - 1;
                a(a.gridArea).grid({cur_path:a.dirStack.stack[b - 1]})
            }
        }, forwardHandler:function () {
            var b = a.dirStack.index;
            var c = a.dirStack.stack;
            if (c.length > 1 && b < c.length - 1) {
                a.dirStack.index = b + 1;
                a(a.gridArea).grid({cur_path:a.dirStack.stack[b + 1]})
            }
        }, detailsHandler:function (e) {
            var c = e.name;
            var f = new Date(e.last);
            var b = f.getFullYear() + "-" + (f.getMonth() + 1) + "-" + f.getDate() + " " + f.getHours() + ":" + f.getMinutes() + ":" + f.getSeconds();
            a("#file-details").empty().append('<table style="width:99%;"><tr><td rowspan="2" style="width:45px;"><img style="width:40px; height:40px;" src="' + e.imgsrc + '"/></td><td colspan="2">' + e.name + "</td></tr><tr><td>" + b + "</td><td>" + e.size + "</td></tr></table>")
        }, loadingFileItems:function () {
            a.loadingFileItemsThreadFinished = false;
            if (a.visibaleFileItemsAr.length > 0) {
                var e = a.visibaleFileItemsAr.shift();
                var c = e.attr("imgsrc");
                var b = e.attr("src");
                e.error(function () {
                    a(this).attr("fileType", "image").attr("src", b);
                    a.loadingFileItems()
                }).attr("src", c).removeAttr("fileType").imgpreload(function () {
                    a.loadingFileItems();
                    a(this).removeAttr("imgsrc");
                    if (a(this).parents(".file_grid").attr("orient")) {
                        var f = a(this).parents(".file_grid");
                        a.roateGridImg(f, "rotate_" + f.attr("orient"))
                    }
                })
            } else {
                a.loadingFileItemsThreadFinished = true
            }
        }, roateGridImg:function (b, c) {
            var e = b.find("img");
            e.attr("class", c)
        }, loadVisibaleFileItems:function () {
            a.visibaleFileItemsAr = [];
            a(a.gridArea).find('[fileType="image"]').each(function () {
                var c = Airdroid.ScrollPane.fileGridScrollAPI.getContentPane().position().top + 150;
                var b = c - a("#file_grid").height() - 150;
                var e = -a(this).parents(".file_grid").position().top;
                if (e <= c && e >= b && a(this).parents(".file_grid").css("display") != "none") {
                    a.visibaleFileItemsAr.push(a(this))
                }
            });
            if (a.loadingFileItemsThreadFinished) {
                a.loadingFileItems()
            }
        }, loadingHandler:function (b) {
            if (a(".loading_overlay").length > 0) {
                return
            }
            a('<div><img alt="" src="ui/theme/default/images/loading.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/loading.gif*//></div>').addClass("loading_overlay").appendTo(a(b));
            a.fixLoadingOverLayPosition(b)
        }, loadingEndHandler:function () {
            a(".loading_overlay").remove()
        }, noData:function (b, e, c) {
            a('<img src="ui/theme/default/images/no_data.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/no_data.png*/ />').css({position:"absolute", left:(e - 128) / 2 + "px", top:(c - 128) / 2 + "px"}).appendTo(b)
        }, fixLoadingOverLayPosition:function (e) {
            var c = a(e);
            var f = c.width();
            var b = c.height();
            a(".loading_overlay").css({"z-index":9999, top:(parseFloat(b) / 2) - 18 + "px", left:(parseFloat(f) / 2) - 54 + "px"})
        }, bodyHeight:function () {
            var c, b;
            if (a.browser.msie && a.browser.version < 7) {
                c = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);
                b = Math.max(document.documentElement.offsetHeight, document.body.offsetHeight);
                if (c < b) {
                    return a(window).height() + "px"
                } else {
                    return c + "px"
                }
            } else {
                return a(document).height() + "px"
            }
        }, bodyWidth:function () {
            var b, c;
            if (a.browser.msie && a.browser.version < 7) {
                b = Math.max(document.documentElement.scrollWidth, document.body.scrollWidth);
                c = Math.max(document.documentElement.offsetWidth, document.body.offsetWidth);
                if (b < c) {
                    return a(window).width() + "px"
                } else {
                    return b + "px"
                }
            } else {
                return a(document).width() + "px"
            }
        }, getTotalCapacity:function () {
            var b = {type:"totalcapacity", name:"file"};
            a.severHandler(b, null, function (c) {
                if (c.status == "success") {
                    a("#free-space").text(c.data.free);
                    a("#total-space").text(c.data.total)
                }
            })
        }})
    })(jQuery)
}
if (jQuery) {
    (function (a) {
        a.fn.extend({grid:function (c) {
            var k = {cur_path:a.rootPath};
            var b = this;
            var j = null;
            var e = "";
            if (b.attr("absrc")) {
                j = a.extend(k, {cur_path:b.attr("absrc")})
            }
            j = a.extend(k, c);
            var f = {distance:3, scope:"folder", opacity:0.5, containment:"#filemanage", appendTo:"#filemanage", cursor:"auto", scroll:false, cursorAt:{left:5, top:3}, revert:"invalid", helper:function () {
                var l = a(this);
                var m = l.siblings(".ui-selected");
                if (m.length > 0) {
                    var n = m.length + 1;
                    return a('<div class="ui-state-active" style="padding:3px;">' + Airdroid.UsedLang.Filemanage._drag_helper.format(n) + "</div>")
                } else {
                    return l.clone().addClass("item_drag")
                }
            }};
            var g = {greedy:true, scope:"folder", tolerance:"pointer", accept:a.checkDropAccept, hoverClass:"ui-state-highlight", drop:a.dropHander};
            b.MsgHandle = function (l) {
                if (_.isUndefined(l.err)) {
                    if (!_.isUndefined(l.cur_path)) {
                        b.bindGrid(l.cur_path, l.list)
                    }
                    a.loadVisibaleFileItems();
                    a(a.gridArea).find("div[rel=fancyboxshow]").fancybox({opacity:true, overlayShow:true, transitionIn:"elastic", transitionOut:"elastic", showBottomOprationPanel:true, module:"filemanage"});
                    a.loadingEndHandler();
                    a.publish("/event/filemanage/clearFilter");
                    if (!_.isUndefined(Airdroid.ScrollPane.fileGridScrollAPI)) {
                        Airdroid.ScrollPane.fileGridScrollAPI.reinitialise()
                    }
                    Airdroid.FileManage.abtnStatusChange([])
                } else {
                    showMsgBox(Airdroid.UsedLang.Filemanage._list_dir_fail.format(l.cur_path))
                }
            };
            b.bindGrid = function (u, q) {
                u = u.substr(0, u.lastIndexOf("/"));
                if (u == "/sd") {
                    u = a.rootPath
                }
                a.currentHandleSrc = u;
                var B = u;
                var n = q;
                b.empty();
                b.attr("absrc", B);
                a.navigatorHandler(B);
                a.stackHandler(B);
                if (n == null || n.length < 1) {
                    a.noData(b, a("#grid").width(), a("#grid").height());
                    return
                }
                var s = n.length;
                for (var t = 0; t < s; t++) {
                    var o = n[t];
                    var r = o.name;
                    var l = u;
                    var A = "dir";
                    var p = "";
                    if (l == a.rootPath) {
                        l += o.name
                    } else {
                        l = l + "/" + o.name
                    }
                    var z = "";
                    var y = "";
                    var x = 0;
                    var w = a("<div id='filegrid" + t + "'>");
                    if (o.type != 0) {
                        y = Airdroid.UsedLang.Filemanage._file_name + r + "\n" + dateFormat(new Date(o.last_modified));
                        z = "ui/theme/default/images/file/grid_dir.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/grid_dir.png*/;
                        if (o.type == 1) {
                            z = "ui/theme/default/images/file/grid_dirempty.png"
                            /*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/grid_dirempty.png*/
                        }
                        x = 1;
                        w.droppable(g)
                    } else {
                        y = Airdroid.UsedLang.Filemanage._file_name + r + "\n" + Airdroid.UsedLang.Filemanage._file_size + bytesToSize(o.size) + "\n" + dateFormat(new Date(o.last_modified));
                        A = r.substr(r.lastIndexOf(".") + 1);
                        if (A.match(/^(jpg|gif|png|bmp|jpeg)(.*)?$/i)) {
                            z = "ui/theme/default/images/file/defaultimg.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/defaultimg.png*/;
                            x = 1
                        } else {
                            if (A.match(/^(zip|rar|tar|gz)(.*)?$/i)) {
                                z = "ui/theme/default/images/file/fm_icon_zip.png"
                                /*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/fm_icon_zip.png*/
                            } else {
                                if (A.match(/^(3gp|avi|flv|swf|mov|mp4|rm|mpg|dat)(.*)?$/i)) {
                                    z = "ui/theme/default/images/file/fm_icon_video.png"
                                    /*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/fm_icon_video.png*/
                                } else {
                                    if (A.match(/^(mp3|ra|mid|wav|wma|ogg)(.*)?$/i)) {
                                        z = "ui/theme/default/images/file/fm_icon_mp3.png"
                                        /*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/fm_icon_mp3.png*/
                                    } else {
                                        if (A.match(/^(txt)(.*)?$/i)) {
                                            z = "ui/theme/default/images/file/fm_icon_txt.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/fm_icon_txt.png*/;
                                            x = 1
                                        } else {
                                            if (A.match(/^(pdf)(.*)?$/i)) {
                                                z = "ui/theme/default/images/file/fm_icon_pdf.png"
                                                /*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/fm_icon_pdf.png*/
                                            } else {
                                                if (A.match(/^(doc|ppt|xls)(.*)?$/i)) {
                                                    z = "ui/theme/default/images/file/fm_icon_office.png"
                                                    /*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/fm_icon_office.png*/
                                                } else {
                                                    if (A.match(/^(apk)(.*)?$/i)) {
                                                        z = "ui/theme/default/images/app-icon-default.png"
                                                        /*tpa=http://192.168.119.101:8888/ui/theme/default/images/app-icon-default.png*/
                                                    } else {
                                                        z = "ui/theme/default/images/file/fm_icon_default.png"
                                                        /*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/fm_icon_default.png*/
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    o.imgsrc = z;
                    w.appendTo(b).attr("extName", A).attr("file_name", o.name).attr("title", y).html("<div class='img_wrap'><img  class='fileGridIcon' src='" + z + "'/></div><span>" + r + "</span>").addClass("file_grid").attr("absrc", l).attr("open", x).hover(function () {
                        a(this).addClass("item_hover")
                    },function () {
                        a(this).removeClass("item_hover")
                    }).clickAndDblClick({oneclick:function (F) {
                        var I = a(this);
                        if (F.ctrlKey) {
                            if (I.hasClass("ui-selected")) {
                                I.removeClass("ui-selected")
                            } else {
                                I.removeClass("item_hover").addClass("ui-selected");
                                e = I.attr("id")
                            }
                        } else {
                            if (F.shiftKey) {
                                if (e != "") {
                                    I.siblings(".file_grid").each(function () {
                                        a(this).removeClass("ui-selected")
                                    });
                                    var H = I.attr("id");
                                    var E = e.substr("filegrid".length, e.length);
                                    var G = H.substr("filegrid".length, H.length);
                                    var D, C;
                                    if (parseInt(E) < parseInt(G)) {
                                        D = parseInt(E);
                                        C = parseInt(G)
                                    } else {
                                        D = parseInt(G);
                                        C = parseInt(E)
                                    }
                                    for (; D <= C; D++) {
                                        a("#filegrid" + D).addClass("ui-selected")
                                    }
                                } else {
                                    e = I.attr("id")
                                }
                            } else {
                                I.removeClass("item_hover").addClass("ui-selected");
                                I.siblings(".file_grid").each(function () {
                                    a(this).removeClass("ui-selected")
                                });
                                e = I.attr("id")
                            }
                        }
                        var J = a(a.gridArea + " .ui-selected");
                        Airdroid.FileManage.abtnStatusChange(J)
                    }, dblclick:function (E) {
                        var C = a(this);
                        var D = C.attr("extName");
                        if (D == "dir") {
                            a(a.gridArea).grid({cur_path:C.attr("absrc")})
                        } else {
                            if (D.toLowerCase() == "txt") {
                                a.readTxtHandler(C.attr("absrc"))
                            }
                        }
                        E.stopPropagation()
                    }});
                    var v = w.attr("extName");
                    if (v.match(/^(jpg|gif|png|bmp|jpeg)(.*)?$/i)) {
                        var m = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/export?saveas=0&pathfile=" + encodeURIComponent(w.attr("absrc"));
                        w.attr("href", m).attr("orient", o.orientation).attr("rel", "fancyboxshow").attr("fx_name", r).attr("fx_size", bytesToSize(o.size)).attr("fx_date", dateFormat(new Date(o.last_modified)));
                        o.imgsrc = p = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/queryicon?type=2&file=" + encodeURIComponent(w.attr("absrc"));
                        w.find("img").attr("fileType", "image").attr("imgsrc", p)
                    } else {
                        if (v.toLowerCase() == "apk") {
                            o.imgsrc = p = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/queryicon?type=1&file=" + encodeURIComponent(w.attr("absrc"));
                            w.find("img").attr("fileType", "image").attr("imgsrc", p)
                        }
                    }
                    a.extend(window.gridFolderMenuOpts, {target:w.attr("id")});
                    w.context_Menu(window.gridFolderMenuOpts).draggable(f).data("details", o)
                }
            };
            function h(l) {
                a.severHandler(l, a.loadingHandler, b.MsgHandle, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/query")
            }

            return b.each(function () {
                h(j);
                var l = a("#file_tree").find("div[absrc='" + j.cur_path + "']");
                if (l.length > 0) {
                    a("#file_tree").find(".ui-selected").removeClass("ui-selected");
                    l.addClass("ui-selected").removeClass("item_hover")
                }
            })
        }})
    })(jQuery)
}
if (jQuery) {
    (function (a) {
        a.fn.extend({tree:function (j) {
            var f = 50;
            var c = {cur_path:a.rootPath, refresh:false};
            var m = this;
            var e = null;
            if (m.attr("absrc")) {
                e = a.extend(c, {cur_path:m.attr("absrc")})
            }
            e = a.extend(e, j);
            var k = {distance:3, scope:"folder", containment:"#filemanage", appendTo:"#filemanage", cursor:"auto", scroll:false, cursorAt:{left:5, top:3}, revert:"invalid", helper:function () {
                return a('<div class="file_grid item_drag"><img class="icon"  src="ui/theme/default/images/file/grid_dir.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/grid_dir.png*/><span>' + a(this).text() + "</span></div>")
            }};
            var h = {scope:"folder", tolerance:"pointer", accept:a.checkDropAccept, hoverClass:"ui-state-highlight", drop:a.dropHander};
            m.MsgHandle = function (n) {
                if (_.isUndefined(n.err)) {
                    if (!_.isUndefined(n.cur_path)) {
                        e.refresh = true
                    }
                    m.bindTree(n.cur_path, n.list);
                    if (!_.isUndefined(Airdroid.ScrollPane.fileTreeScrollAPI)) {
                        Airdroid.ScrollPane.fileTreeScrollAPI.reinitialise()
                    }
                } else {
                }
            };
            m.bindTree = function (t, u) {
                var x = m.children("img:first");
                x.removeClass();
                m.attr("expandSta", "expand");
                if (u == null || u.length < 1) {
                    if (e.refresh) {
                        x.addClass("expand_empty").unbind();
                        m.children("img:eq(1)").removeClass().addClass("dir_empty");
                        m.unbind("dblclick")
                    }
                    return
                }
                var q = u.length;
                if (e.refresh && m.data("events") && !m.data("events")["dbclick"]) {
                    g(x);
                    m.children("img:eq(1)").removeClass().addClass("dir");
                    l(m, true)
                }
                x.addClass("expand_off");
                var y = parseInt(m.attr("depth")) + 1;
                var s = m.next("ul");
                if (s.length < 1) {
                    s = a("<ul>");
                    s.insertAfter(m)
                }
                if (t == a.rootPath) {
                    g(x);
                    m.find("span").text(a.rootName);
                    l(m, true)
                }
                for (var r = 0; r < q; r++) {
                    var p = u[r];
                    var o = t;
                    if (o == a.rootPath) {
                        o += p.name
                    } else {
                        o = o + p.name
                    }
                    if (e.refresh && a('#file_tree div[absrc="' + o + '"]').length > 0) {
                        continue
                    }
                    var w = a("<div class='leaf' style='cursor:pointer;'>");
                    var z = "collapse_off";
                    if (p.subdir == 0) {
                        z = "expand_empty"
                    }
                    var n = a("<img src='ui/theme/default/images/file/bg_blank.gif'/*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/bg_blank.gif*/ alt=''/>");
                    n.addClass(z).css("margin-left", y * 10 + "px").appendTo(w);
                    if (p.subdir == 1) {
                        g(n)
                    }
                    var v = "dir";
                    if (p.subdir == 0) {
                        v = "dir_empty"
                    }
                    a("<img src='ui/theme/default/images/file/bg_blank.gif'/*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/bg_blank.gif*/ alt=''/>").addClass(v).appendTo(w);
                    w.append("<span>" + p.name + "</span>").attr("absrc", o).attr("extName", "dir").attr("depth", y);
                    if (p.subdir == 0) {
                        l(w, false)
                    } else {
                        l(w, true)
                    }
                    a("<li>").append(w).appendTo(s)
                }
                s.hide().slideDown(this.speed, function () {
                    if (!_.isUndefined(Airdroid.ScrollPane.fileTreeScrollAPI)) {
                        Airdroid.ScrollPane.fileTreeScrollAPI.reinitialise()
                    }
                })
            };
            function g(n) {
                n.unbind("mouseover").bind("mouseover",function () {
                    var p = a(this);
                    var o = p.parent("div").attr("expandSta") || "collapse";
                    p.removeClass().addClass(o + "_on")
                }).unbind("mouseout").bind("mouseout",function () {
                    var p = a(this);
                    var o = p.parent("div").attr("expandSta") || "collapse";
                    p.removeClass().addClass(o + "_off")
                }).unbind("click").bind("click", function (p) {
                    var o = a(this).parent("div");
                    o.tree({cur_path:o.attr("absrc")});
                    if (!_.isUndefined(Airdroid.ScrollPane.fileTreeScrollAPI)) {
                        Airdroid.ScrollPane.fileTreeScrollAPI.reinitialise()
                    }
                    a.clearContextMenu();
                    p.stopPropagation()
                })
            }

            function l(o, n) {
                o.draggable(k).droppable(h);
                if (o.attr("absrc") != a.rootPath) {
                    o.context_Menu(window.treeMenuOpts)
                }
                o.hover(function () {
                    var p = a(this);
                    if (p.hasClass("ui-selected")) {
                        return
                    }
                    p.addClass("item_hover")
                },function () {
                    var p = a(this).children("div").eq(0);
                    if (p.hasClass("ui-selected")) {
                        return
                    }
                    a("#file_tree").find(".item_hover").removeClass("item_hover")
                }).unbind("click").bind("click", function (q) {
                    var p = a(this);
                    a(a.gridArea).grid({cur_path:p.attr("absrc")});
                    a.clearContextMenu();
                    q.stopPropagation()
                });
                if (n) {
                    o.unbind("dblclick").bind("dblclick", function (q) {
                        var p = a(this);
                        p.tree({cur_path:p.attr("absrc")});
                        a(a.gridArea).grid({cur_path:p.attr("absrc")});
                        q.stopPropagation()
                    })
                }
            }

            function b(n) {
                a.severHandler(n, function () {
                    if (n.refresh) {
                        return
                    }
                    m.children("img:first").removeClass().addClass("tree-loading")
                }, m.MsgHandle, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/file/querydir")
            }

            return m.each(function () {
                var n = m.next("ul:first");
                if (n.length > 0 && !e.refresh) {
                    if (n.css("display") == "none") {
                        n.slideDown(this.speed, function () {
                            if (!_.isUndefined(Airdroid.ScrollPane.fileTreeScrollAPI)) {
                                Airdroid.ScrollPane.fileTreeScrollAPI.reinitialise()
                            }
                        });
                        m.find("img:first").removeClass().addClass("expand_off");
                        m.attr("expandSta", "expand")
                    } else {
                        n.slideUp(this.speed, function () {
                            if (!_.isUndefined(Airdroid.ScrollPane.fileTreeScrollAPI)) {
                                Airdroid.ScrollPane.fileTreeScrollAPI.reinitialise()
                            }
                        });
                        m.find("img:first").removeClass().addClass("collapse_off");
                        m.attr("expandSta", "collapse")
                    }
                    return
                }
                b(e)
            })
        }})
    })(jQuery)
}
Airdroid.FileManage = {seprate:"(][)", abtnStatusChange:function (j) {
    var c = j.length;
    var e, g, b, h, f, a;
    if (c == 0) {
        this.fileDetailHandler(false);
        $("#filemanage .abtn_wrap a").addClass("btn-state-disabled")
    } else {
        if (c == 1) {
            f = $(j[0]);
            e = f.find("img").attr("src");
            a = f.data("details");
            g = a.name;
            h = a.last_modified;
            if (a.type == 0) {
                b = a.size
            }
            this.fileDetailHandler(true, c, e, g, b, h);
            $("#filemanage .abtn_wrap a").removeClass("btn-state-disabled")
        } else {
            if (c > 1) {
                f = $(j[0]);
                e = f.find("img").attr("src");
                g = "select " + c + " files";
                this.fileDetailHandler(true, c, e, g, b, h);
                $("#filemanage .abtn_wrap a").removeClass("btn-state-disabled");
                $("#filemanage .abtn_wrap a[menu='Rename']").addClass("btn-state-disabled")
            }
        }
    }
    if ($.copySource) {
        $("#filemanage .abtn_wrap a[menu='Paste']").removeClass("btn-state-disabled")
    } else {
        $("#filemanage .abtn_wrap a[menu='Paste']").addClass("btn-state-disabled")
    }
}, setMenuStatus:function (b, a) {
    if (a) {
        $("#filemanage .abtn_wrap a[menu='" + b + "']").addClass("btn-state-disabled")
    } else {
        $("#filemanage .abtn_wrap a[menu='" + b + "']").removeClass("btn-state-disabled")
    }
}, fileDetailHandler:function (a, c, f, e, b, g) {
    if (a) {
        if (!_.isUndefined(g)) {
            g = "" + dateFormat(new Date(g))
        } else {
            g = ""
        }
        if (!_.isUndefined(b) && b != 0) {
            b = "&nbsp;&nbsp;&nbsp;&nbsp;Size:" + bytesToSize(b)
        } else {
            b = ""
        }
        if (c > 1) {
            $("#filemanage .fileDetail").html('<div class="file_icon">                                                    <img src="' + f + '" height="30" />                                                </div>                                                <div class="title" style="line-height:30px;">' + e + "</div>")
        } else {
            $("#filemanage .fileDetail").html('<div class="file_icon">                                                        <img src="' + f + '" height="30" />                                                    </div>                                                    <div class="title">' + e + '</div><br />                                                    <div class="detail"><span class="updateDate">' + g + '</span> <span class="size"> ' + b + "</span></div>")
        }
    } else {
        $("#filemanage .fileDetail").empty()
    }
}};
Airdroid.FileManage.View = Backbone.View.extend({el:"#filemanage", isInitView:false, isInitData:false, events:{"keyup #file_search_input":"filterFileItem", "click .file_search_cross":"clearFileSearchFilter", "click #importFileBtn":"importFile", "click #newDirBtn":"newDir", "click #filemanage .abtn_wrap a":"abtnClick", "click #refreshFileBtn":"refresh"}, initialize:function () {
    var a = this;
    this.moduleTemplate = _.template(Airdroid.Util.GetTemplate("filemanage"));
    window.gridFolderMenuOpts = {target:"file_grid", parent:"#filemanage", groups:[
        {option:{name:Airdroid.UsedLang.Filemanage._menu_open, accept:function (b) {
            return b.siblings(".ui-selected").length == 0 && b.attr("open") == "1"
        }, handler:function (b) {
            _.each(b.data.selectedItems, function (c) {
                c.gridItem.trigger("dblclick")
            })
        }}},
        {option:{type:"seprate"}},
        {option:{accept:function (b) {
            return b.siblings(".ui-selected").length == 0 && b.attr("extName") == "dir"
        }, name:Airdroid.UsedLang.Filemanage._menu_import, handler:$.uploadHandler}},
        {option:{name:Airdroid.UsedLang.Filemanage._menu_export, accept:function (b) {
            return b.siblings(".ui-selected").length == 0 && b.attr("extName") != "dir"
        }, handler:$.downloadHandler}},
        {option:{name:Airdroid.UsedLang.Filemanage._menu_export_as_zip, handler:$.downloadZipHandler}},
        {option:{type:"seprate"}},
        {option:{name:Airdroid.UsedLang.Filemanage._menu_cut, handler:$.cutHandler}},
        {option:{name:Airdroid.UsedLang.Filemanage._menu_copy, handler:$.copyHandler}},
        {option:{accept:function (b) {
            return $.copySource && b.attr("extName") == "dir" && $.checkAcceptBatch($.copySource.fileItems, b.attr("absrc"))
        }, name:Airdroid.UsedLang.Filemanage._menu_paste, handler:$.pasteHandler}},
        {option:{type:"seprate"}},
        {option:{name:Airdroid.UsedLang.Filemanage._menu_delete, handler:$.deleteHandler}},
        {option:{accept:function (b) {
            return b.siblings(".ui-selected").length == 0
        }, name:Airdroid.UsedLang.Filemanage._menu_rename, handler:$.renameHandler}}
    ]};
    window.treeMenuOpts = {target:"fileTree", parent:"#filemanage", groups:[
        {option:{name:Airdroid.UsedLang.Filemanage._menu_import, handler:$.uploadHandler}},
        {option:{name:Airdroid.UsedLang.Filemanage._menu_export_as_zip, handler:$.downloadZipHandler}},
        {option:{type:"seprate"}},
        {option:{name:Airdroid.UsedLang.Filemanage._menu_cut, handler:$.folderTreeCutHandler}},
        {option:{name:Airdroid.UsedLang.Filemanage._menu_copy, handler:$.folderTreeCopyHandler}},
        {option:{accept:function (b) {
            return $.copySource && b.attr("extName") == "dir" && $.checkAcceptBatch($.copySource.fileItems, b.attr("absrc"))
        }, name:Airdroid.UsedLang.Filemanage._menu_paste, handler:$.pasteHandler}},
        {option:{type:"seprate"}},
        {option:{name:Airdroid.UsedLang.Filemanage._menu_delete, handler:$.deleteHandler}},
        {option:{accept:function (b) {
            return b.siblings(".ui-selected").length == 0
        }, name:Airdroid.UsedLang.Filemanage._menu_rename, handler:$.renameHandler}}
    ]};
    window.gridMenuOpts = {target:"file_grid", parent:"#filemanage", groups:[
        {option:{name:Airdroid.UsedLang.Filemanage._menu_new_folder, handler:$.newfolderHandler}},
        {option:{accept:function (b) {
            return $.copySource && $.checkAcceptBatch($.copySource.fileItems, $.currentHandleSrc)
        }, name:Airdroid.UsedLang.Filemanage._menu_paste, handler:function () {
            $.doPaste($.currentHandleSrc)
        }}},
        {option:{type:"seprate"}},
        {option:{name:Airdroid.UsedLang.Filemanage._menu_refresh, handler:function () {
            $.refreshGrid()
        }}},
        {option:{type:"seprate"}},
        {option:{name:Airdroid.UsedLang.Filemanage._menu_import, handler:function () {
            $.openUploadWin($.currentHandleSrc)
        }}}
    ]};
    window.gridDropOpts = {greedy:true, scope:"folder", tolerance:"pointer", accept:$.checkDropAccept, over:function (b, c) {
        c.helper.addClass("ui-state-active")
    }, out:function (b, c) {
        c.helper.removeClass("ui-state-active")
    }, drop:$.dropHander};
    this.render()
}, initView:function () {
    if (!this.isInitView) {
        this.isInitView = true;
        Airdroid.ScrollPane.fileGridScrollAPI = $("#file_grid").jScrollPane({animateScroll:true, mouseWheelSpeed:108}).bind("jsp-scroll-y",function (b, f, c, a) {
            $.clearContextMenu();
            $.loadVisibaleFileItems()
        }).data("jsp");
        Airdroid.ScrollPane.fileTreeScrollAPI = $("#file_tree").jScrollPane({animateScroll:true, mouseWheelSpeed:108}).bind("jsp-scroll-y",function (b, f, c, a) {
            $.clearContextMenu()
        }).data("jsp");
        $("#file_grid").bind("click",function (a) {
            $.clearContextMenu();
            a.stopPropagation()
        }).droppable(gridDropOpts);
        $("#grid").selectable({filter:".file_grid", stop:function (a, b) {
            var c = $($.gridArea + " .ui-selected");
            Airdroid.FileManage.abtnStatusChange(c)
        }, unselected:function (a, b) {
            var c = $($.gridArea + " .ui-selected");
            Airdroid.FileManage.abtnStatusChange(c)
        }});
        $("#toolbar_back").hover(function () {
            if (!$(this).hasClass("btn_back_disable")) {
                $(this).addClass("btn_back_hover")
            }
        },function () {
            $(this).removeClass("btn_back_hover")
        }).bind("click", function () {
            if (!$(this).hasClass("btn_back_disable")) {
                $.backHandler()
            }
        });
        $("#toolbar_forward").hover(function () {
            if (!$(this).hasClass("btn_go_disable")) {
                $(this).addClass("btn_go_hover")
            }
        },function () {
            $(this).removeClass("btn_go_hover")
        }).bind("click", function () {
            if (!$(this).hasClass("btn_go_disable")) {
                $.forwardHandler()
            }
        });
        $("#file_grid").context_Menu(window.gridMenuOpts);
        this.bindEvents()
    }
}, initData:function () {
    if (!this.isInitData) {
        this.isInitData = true;
        Airdroid.ScrollPane.fileTreeScrollAPI.getContentPane().html(' <ul>                                        <li>                                          <div id="file_tree_phone" class="leaf" depth="0" absrc="/sd/" style="cursor:pointer;">                                            <img class="collapse_off" src="ui/theme/default/images/file/bg_blank.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/bg_blank.gif*/ alt="" /><img class="dir" src="ui/theme/default/images/file/bg_blank.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/bg_blank.gif*/ alt="" /><span>SD Card</span>                                          </div>                                        </li>                                      </ul>').find("#file_tree_phone").tree();
        $($.gridArea).grid()
    }
}, clearData:function () {
    if (!_.isUndefined(Airdroid.ScrollPane.fileGridScrollAPI)) {
        Airdroid.ScrollPane.fileGridScrollAPI.getContentPane().empty();
        Airdroid.ScrollPane.fileGridScrollAPI.reinitialise()
    }
    if (!_.isUndefined(Airdroid.ScrollPane.fileTreeScrollAPI)) {
        Airdroid.ScrollPane.fileTreeScrollAPI.getContentPane().empty();
        Airdroid.ScrollPane.fileTreeScrollAPI.reinitialise()
    }
    this.isInitData = false
}, bindEvents:function () {
    $.subscribe("/event/filemanage/clearFilter", function (a) {
        $("#file_search_input", this.el).val("");
        $(".search26_r", this.el).removeClass("file_search_cross")
    })
}, render:function () {
    $(this.el).html(this.moduleTemplate({UsedLang:Airdroid.UsedLang.Filemanage}));
    return this
}, showSDCardSummary:function () {
    if (Airdroid.Cache.SummaryModel) {
        $("#sdCardSummary").html(Airdroid.UsedLang.Filemanage._sdcard_summary.format(bytesToSize(Airdroid.Cache.SummaryModel.get("size").sd_avail), bytesToSize(Airdroid.Cache.SummaryModel.get("size").sd_size)))
    }
}, abtnClick:function (c) {
    if ($(c.currentTarget).hasClass("btn-state-disabled")) {
        return
    }
    var b = $(c.currentTarget).attr("menu");
    if (!b) {
        return
    }
    var f = [];
    $(".ui-selected", $.gridArea).each(function () {
        f.push({abSrc:$(this).attr("absrc"), extName:$(this).attr("extName")})
    });
    switch (b) {
        case"Export":
            $.exportSelectedItems();
            break;
        case"Copy":
            $.extend({copySource:{type:"copy", fileItems:f}});
            Airdroid.FileManage.setMenuStatus("Paste", false);
            break;
        case"Cut":
            var a = false;
            if (f[0].abSrc == $.currentHandleSrc) {
                a = true
            }
            $.extend({copySource:{type:"cut", fileItems:f, isSelf:a}});
            Airdroid.FileManage.setMenuStatus("Paste", false);
            break;
        case"Paste":
            $.doPaste($.currentHandleSrc);
            Airdroid.FileManage.setMenuStatus("Paste", true);
            break;
        case"Rename":
            $.doRename(f[0]);
            break;
        case"Delete":
            $.doDelete(f);
            break
    }
}, importFile:function (a) {
    var b = {flash_file_types:"*.*", flash_file_types_description:Airdroid.UsedLang.Upload._file_types_desc_photos, suportTypeMsg:"", allUploadComplete:function () {
        $.refreshGrid({cur_path:$.currentHandleSrc})
    }};
    openUploaderWin($.currentHandleSrc, b, Airdroid.UsedLang.Upload._win_title_files)
}, newDir:function (a) {
    $.newfolderHandler(a)
}, refresh:function (a) {
    $.refreshGrid()
}, filterFileItem:function (e) {
    var self = this;
    var searchContent = $.trim($(e.currentTarget).val()).toLowerCase();
    if (searchContent.length == 0) {
        $(".file_grid", $.gridArea).show();
        $(".search26_r", self.el).removeClass("file_search_cross")
    } else {
        var target = $(".file_grid", $.gridArea).each(function () {
            var fileName = $(this).attr("file_name");
            if (eval("fileName.match(/" + searchContent + "/i)")) {
                $(this).show()
            } else {
                $(this).hide()
            }
        });
        $(".search26_r", self.el).addClass("file_search_cross")
    }
    if (!_.isUndefined(Airdroid.ScrollPane.fileGridScrollAPI)) {
        Airdroid.ScrollPane.fileGridScrollAPI.reinitialise();
        Airdroid.ScrollPane.fileGridScrollAPI.scrollToY(0)
    }
}, clearFileSearchFilter:function () {
    $("#file_search_input", this.el).val("");
    $(".file_grid", $.gridArea).show();
    $(".search26_r", this.el).removeClass("file_search_cross");
    if (!_.isUndefined(Airdroid.ScrollPane.fileGridScrollAPI)) {
        Airdroid.ScrollPane.fileGridScrollAPI.reinitialise();
        Airdroid.ScrollPane.fileGridScrollAPI.scrollToY(0)
    }
}});
Airdroid.Media = {uploadRefeshDelay:500, photoItemsPerPageNum:30, musicItemsPerPageNum:30, url:"test.url.htm"/*tpa=http://192.168.119.101:8888/test.url*/, JPlayer:null, musicTitle:"", playOrStopBtn:null, playMode:"flow", severHandler:function (f, a, e, c, b) {
    var g = c + "?" + $.param(f);
    dataType = b || "jsonp";
    if (dataType == "jsonp") {
        g = g + "&callback=?"
    }
    if ($.isFunction(a)) {
        a()
    }
    $.jsonp({type:"GET", url:g, async:true, cache:false, dataType:dataType, success:e, error:function (j, k, h) {
        $.loadingEndHandler();
        NetworkError()
    }})
}, initJPlayer:function () {
    var a = this;
    if (a.jPlayer == null) {
        var b = "html,flash";
        if ($.browser.mozilla || ($.browser.msie && $.browser.version != "9.0")) {
            b = "flash,html"
        }
        this.jPlayer = $("#audio_player").jPlayer({solution:b, swfPath:"./js/base/", wmode:"window", supplied:"mp3,oga,wav", cssSelectorAncestor:"#audio_player_container", play:function () {
            a.playOrStopBtn.removeClass("player_play").addClass("player_stop");
            a.playOrStopBtn.parents(".list_item").find(".icon_playing").show()
        }, pause:function () {
            a.playOrStopBtn.addClass("player_play").removeClass("player_stop");
            a.playOrStopBtn.parents(".list_item").find(".icon_playing").hide()
        }, ended:function () {
            if (a.playMode == "flow" || a.playMode == "flow_circle") {
                a.palyerAction("next", false)
            } else {
                if (a.playMode == "single_circle") {
                    a.playOrStopBtn.removeClass("player_stop").addClass("player_play");
                    a.playOrStopMedia(a.playOrStopBtn, a.musicTitle)
                }
            }
        }})
    }
}, playOrStopMedia:function (c, e) {
    if (c.hasClass("player_play")) {
        var a = c.attr("media_type").toLowerCase();
        var b = null;
        if ($("#audio_player").find("audio").length > 0) {
            if (a == "ogg") {
                b = {oga:c.attr("url")}
            } else {
                if (a == "mp3") {
                    b = {mp3:c.attr("url")}
                } else {
                    if (a == "wav") {
                        b = {wav:c.attr("url")}
                    }
                }
            }
        } else {
            if (a == "mp3") {
                b = {mp3:c.attr("url")}
            }
        }
        if (b == null) {
            showMsgBox(Airdroid.UsedLang.Common._player_not_suport_type, null, true);
            return
        }
        $("#musicPlayerWidget").css("z-index", 999999).show();
        this.media = b;
        if (this.playOrStopBtn != null && this.playOrStopBtn != c) {
            this.playOrStopBtn.removeClass("player_stop").addClass("player_play");
            this.playOrStopBtn.parents(".list_item").find(".icon_playing").hide()
        }
        this.playOrStopBtn = c;
        if (e.lenght > 50) {
            $("#audio_player_container .jp-title .no_scroll_span").hide();
            $("#audio_player_container .jp-title .scroll_span").html(e).parent().show()
        } else {
            $("#audio_player_container .jp-title marquee").hide();
            $("#audio_player_container .jp-title .no_scroll_span").html(e).show()
        }
        this.musicTitle = e;
        this.jPlayer.jPlayer("setMedia", b).jPlayer("play")
    } else {
        $("#musicPlayerWidget").css("z-index", 999999).show();
        this.playOrStopBtn = c;
        Airdroid.Media.jPlayer.jPlayer("stop")
    }
    $("#taskbar_content .music_min_icon").remove()
}, closePlayerWin:function () {
    Airdroid.Media.jPlayer.jPlayer("stop");
    $("#musicPlayerWidget").hide();
    this.playOrStopBtn.addClass("player_play").removeClass("player_stop");
    this.playOrStopBtn.attr("title", "play")
}, palyerAction:function (e, c) {
    var a, g, f;
    var b = this.playMode;
    if (c == true) {
        b = "flow_circle"
    }
    if (e == "prev") {
        if (this.playOrStopBtn) {
            f = this.playOrStopBtn.parents(".list_item").prev(".list_item")
        }
        if (f.length == 0 && b == "flow_circle") {
            f = this.playOrStopBtn.parents(".play_list").find(".list_item:last-child")
        }
    } else {
        if (e == "next") {
            if (this.playOrStopBtn) {
                f = this.playOrStopBtn.parents(".list_item").next(".list_item")
            }
            if (f.length == 0 && b == "flow_circle") {
                f = this.playOrStopBtn.parents(".play_list").find(".list_item:first-child")
            }
        }
    }
    if (f.hasClass("music_list_item")) {
        a = f.find(".col_opration .player_btn");
        g = f.find(".col_name").html()
    } else {
        a = f.find(".col_opration .player_btn");
        g = f.find(".col_name .name.htm"/*tpa=http://192.168.119.101:8888/.col_name .name*/).html()
    }
    if (a.length > 0) {
        this.playOrStopMedia(a, g)
    } else {
        this.playOrStopBtn.removeClass("player_stop").addClass("player_play");
        this.playOrStopBtn.parents(".list_item").find(".icon_playing").hide()
    }
}, listAllDirs:function () {
    this.severHandler({}, null, function (a) {
        if (a.list) {
            $.publish("/event/media/photo/listDirs", [
                {dirList:a.list}
            ])
        }
    }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/dirs/")
}, listOtherDirs:function () {
    this.severHandler({}, $.loadingHandler("#w_photo"), function (a) {
        $.loadingEndHandler();
        if (a.list) {
            $.publish("/event/media/photo/listOtherDirs", [
                {dirList:a.list}
            ])
        }
    }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/others/")
}, listDirImages:function (e, c) {
    var a = this;
    var b = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/images/" + e;
    if (e == "dir_camera") {
        b = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/camera/"
    } else {
        if (e == "dir_wallpaper") {
            b = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/wallpaper/"
        }
    }
    var f = {page:1, pcount:a.photoItemsPerPageNum};
    this.severHandler(f, $.loadingHandler("#w_photo"), function (g) {
        $.loadingEndHandler();
        if (g.list) {
            var h = Math.ceil(g.count / a.photoItemsPerPageNum);
            $.publish("/event/media/photo/listDirImages", [
                {dir_id:e, dir_name:c, path:g.path, total_pages:h, total_items:g.count, dirImagesList:g.list}
            ])
        }
    }, b)
}, loadingNextPageDirImages:function (f, a, e, g) {
    var b = this;
    var c = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/images/" + f;
    if (f == "dir_camera") {
        c = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/camera/"
    } else {
        if (f == "dir_wallpaper") {
            c = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/wallpaper/"
        }
    }
    var h = {page:a, pcount:this.photoItemsPerPageNum};
    this.severHandler(h, $.loadingHandler("#w_photo"), function (j) {
        $.loadingEndHandler();
        if (j.list) {
            var k = Math.ceil(j.count / b.photoItemsPerPageNum);
            $.publish("/event/media/photo/loadingNextPageDirImages", [
                {dir_id:f, curPage:a, total_pages:k, dirImagesList:j.list},
                e,
                g
            ])
        }
    }, c)
}, getOverView:function () {
    this.severHandler({}, null, function (a) {
        $.publish("/event/media/photo/overview", [
            {overview:a}
        ])
    }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/overview/")
}, rotatePhoto:function (a, b, c) {
    if (a == null) {
        return
    }
    this.severHandler({orient:b}, $.loadingHandler("#w_photo"), c, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/set_orientation/" + a)
}, listAlbums:function () {
    this.severHandler({}, $.loadingHandler("#w_music"), function (a) {
        $.loadingEndHandler();
        $.publish("/event/media/music/listAlbums", [
            {albums:a.list}
        ])
    }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/album/")
}, listArtist:function () {
    this.severHandler({}, null, function (a) {
        $.publish("/event/media/music/listArtist", [
            {artist:a.list}
        ])
    }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/artist/")
}, listSongs:function (c, e) {
    var a = this;
    var b = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/list/";
    if (c) {
        b = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/list/" + c
    }
    this.severHandler({pcount:this.musicItemsPerPageNum, page:1}, $.loadingHandler("#w_music"), function (f) {
        $.loadingEndHandler();
        var g = Math.ceil(f.count / a.musicItemsPerPageNum);
        $.publish("/event/media/music/listSongs", [
            {albumId:c, totalPages:g, albumName:e, songs:f.list, ringtone:f.ringtone, notification:f.notification, alarm:f.alarm}
        ])
    }, b)
}, loadingNextPageSongs:function (c, a) {
    var b = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/list/";
    if (c) {
        b = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/list/" + c
    }
    var e = {page:a, pcount:this.musicItemsPerPageNum};
    this.severHandler(e, $.loadingHandler("#w_music"), function (f) {
        $.loadingEndHandler();
        $.publish("/event/media/music/loadingNextPageSongs", [
            {songs:f.list, curPage:a}
        ])
    }, b)
}, listRingtones:function (a) {
    this.severHandler({type:a}, $.loadingHandler("#w_ringtone"), function (b) {
        $.loadingEndHandler();
        $.publish("/event/media/ringtone/list", [
            {ringtone_type:a, ringtone_list:b.list, using:b.def, using_sys:b.sys}
        ])
    }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/ringtone/")
}, setRingtone:function (b, f, c, a, e) {
    this.severHandler({type:f, sys:c, id:b}, $.loadingHandler(a), e, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/set_ringtone/")
}, duration:function (g) {
    var a;
    var g = g / 1000;
    var c = Math.floor(g / 3600);
    var e = Math.floor((g % 3600) / 60);
    var g = Math.floor((g % 3600) % 60);
    var b = e, f = g;
    if (e < 10) {
        b = "0" + e
    }
    if (g < 10) {
        f = "0" + g
    }
    if (c > 0) {
        a = c + " " + b + ":" + f
    } else {
        if (e > 0) {
            a = b + ":" + f
        } else {
            a = "00:" + f
        }
    }
    return a
}};
Airdroid.Media.PhotoModuleView = Backbone.View.extend({el:"#photo", moduleTemplate:"", listData:null, photoGalleryTemplate:"", isInitView:false, isInitData:false, list_type:"list_over", isLoading:false, perLoadThreadFinished:true, visibalItemsAr:[], lastSelectedIndex:"", events:{"click #photo .path_box .path_nav a":"navHander", "keyup #photo_search_input":"filterPhotoItem", "click #photo .search_cross":"clearPhotoSearchFilter", "click #photo_grid .grid_item .photo_item_command a":"photoItemCommandClickHander", "click #photo .abtn_wrap a":"abtnClickHander", "click #importPhotoBtn":"importPhoto", "click #photo .photo .checkbox":"selectPhoto", "click #photo .path_nav .checkbox":"selectAllPhotos", "click #refreshPhotoBtn":"refreshPhoto"}, initialize:function () {
    this.moduleTemplate = _.template(Airdroid.Util.GetTemplate("photo"));
    this.photoItemTemplate = '<div class="grid_item photo_item" >                            <div class="photo_item_top"></div>                            <div class="photo_item_body">                                <div class="photo">                                    <img src="ui/theme/default/images/file/defaultphoto.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/file/defaultphoto.png*//>                                    <p class="checkbox photo_item_chbox"><input type="checkbox"></p>                                </div>                                <div class="photo_item_command">                                    <a class="photo_download_icon" cmd="downLoad" title="' + Airdroid.UsedLang.Photo._menu_title_down_load + '">&nbsp;&nbsp;</a>                                    <a class="photo_setting" cmd="settingBg" title="' + Airdroid.UsedLang.Photo._menu_title_setting_bg + '">&nbsp;&nbsp;</a>                                    <a class="photo_delete" cmd="delete" title="' + Airdroid.UsedLang.Photo._menu_title_delete + '">&nbsp;&nbsp;</a>                                </div>                            </div>                            <div class="photo_item_bottom"></div>                        </div>'
}, initView:function () {
    var a = this;
    if (!a.isInitView) {
        a.isInitView = true;
        a.render();
        Airdroid.ScrollPane.photoScrollAPI = $("#photo_grid", a.el).bind("jsp-scroll-y", _.throttle(function (c, g, f, b) {
            if (b && !a.isLoading) {
                $.publish("/event/media/photo/startLoadingNextPageDirImages", [])
            }
            a.loadVisibaleItems()
        })).jScrollPane({animateScroll:true, mouseWheelSpeed:150}).data("jsp");
        a.container = Airdroid.ScrollPane.photoScrollAPI.getContentPane();
        a.bindEvent()
    }
}, initData:function () {
    if (!this.isInitData) {
        this.isInitData = true;
        Airdroid.Media.getOverView()
    }
}, clearData:function () {
    this.container.empty();
    this.updateScrollPanel();
    this.isInitData = false;
    this.isLoading = false;
    this.list_type = "list_over"
}, render:function () {
    $(this.el).html(this.moduleTemplate({common:Airdroid.UsedLang.Common}))
}, navHander:function (b) {
    var a = $(b.currentTarget);
    if (a.attr("from") == "gallery") {
        Airdroid.Cache.photoGallery = null
    }
    if (a.attr("dir_id") == "dir_index") {
        $.loadingHandler("#w_photo");
        Airdroid.Media.getOverView()
    } else {
        if (a.attr("dir_id") == "dir_others") {
            Airdroid.Media.listOtherDirs()
        } else {
            Airdroid.Media.listDirImages(a.attr("dir_id"), a.attr("dir_name"))
        }
    }
}, importPhoto:function (b) {
    b.stopPropagation();
    var a = this;
    if (a.listData == null || _.isUndefined(a.listData.path)) {
        showDelayMask(Airdroid.UsedLang.Photo._not_select_folder, $("#w_photo"));
        return
    }
    var c = {allowedExtensions:["png", "jpg", "gif", "bmp", "jpeg"], allUploadComplete:function () {
        setTimeout(function () {
            Airdroid.Media.listDirImages(a.listData.dir_id, a.listData.dir_name)
        }, Airdroid.Media.uploadRefeshDelay)
    }, flash_file_types:"*.png;*.jpg;*.gif;*.bmp;*.jpeg", suportTypeMsg:Airdroid.UsedLang.Upload._upload_suport.format("png, jpg, gif, bmp, jpeg"), flash_file_types_description:Airdroid.UsedLang.Upload._file_types_desc_photos};
    openUploaderWin(this.listData.path, c, Airdroid.UsedLang.Upload._win_title_photo)
}, refreshPhoto:function () {
    if (this.list_type == "list_images") {
        Airdroid.Media.listDirImages(this.listData.dir_id, this.listData.dir_name)
    } else {
        Airdroid.Media.listOtherDirs()
    }
}, updateScrollPanel:function () {
    if (!_.isUndefined(Airdroid.ScrollPane.photoScrollAPI)) {
        Airdroid.ScrollPane.photoScrollAPI.reinitialise()
    }
}, loadVisibaleItems:function () {
    var a = this;
    a.visibalItemsAr = [];
    $(this.el).find('[fileType="image"]').each(function () {
        var c = a.container.position().top + 200;
        var b = c - $("#photo_grid").height() - 200;
        var e = -$(this).parents(".grid_item").position().top;
        if (e <= c && e >= b && $(this).parents(".grid_item").css("display") != "none") {
            a.visibalItemsAr.push($(this))
        }
    });
    if (a.perLoadThreadFinished) {
        if ($.browser.msie) {
            this.preloadImageMSIE()
        } else {
            this.preloadImage()
        }
    }
}, preloadImage:function () {
    var b = this;
    b.perLoadThreadFinished = false;
    var a = "img_loading";
    if (b.list_type == "list_dirs") {
        a = "dir_thumb_loaing"
    }
    if (b.visibalItemsAr.length > 0) {
        var f = b.visibalItemsAr.shift();
        var e = f.attr("imgsrc");
        var c = f.attr("src");
        f.error(function () {
            $(this).parent().removeClass(a);
            $(this).attr("src", c);
            $(this).attr("fileType", "image");
            b.preloadImage()
        }).removeAttr("fileType").imgpreload(function () {
            $(this).attr("load_status", "1").removeAttr("imgsrc");
            $(this).show().parent().removeClass(a);
            if ($(this).attr("orient")) {
                if ($(this).attr("orient") != "0") {
                    $(this).attr("class", "rotate_" + $(this).attr("orient"))
                }
            }
            b.preloadImage()
        }).hide().attr("src", e).parent().addClass(a)
    } else {
        b.perLoadThreadFinished = true
    }
}, preloadImageMSIE:function () {
    var a = this;
    a.perLoadThreadFinished = false;
    if (a.visibalItemsAr.length > 0) {
        var e = a.visibalItemsAr.shift();
        var c = e.attr("imgsrc");
        var b = e.attr("src");
        e.error(function () {
            $(this).attr("src", b);
            $(this).attr("fileType", "image");
            a.preloadImageMSIE()
        }).removeAttr("fileType").imgpreload(function () {
            $(this).attr("load_status", "1").removeAttr("imgsrc");
            if ($(this).attr("orient")) {
                if ($(this).attr("orient") != "0") {
                    $(this).attr("class", "rotate_" + $(this).attr("orient"))
                }
            }
            a.preloadImageMSIE()
        }).attr("src", c)
    } else {
        a.perLoadThreadFinished = true
    }
}, setDivState:function () {
    if (this.list_type == "list_over") {
        $("#photo .tool_bar").hide();
        $("#photo .path_box").hide();
        $("#photo_grid").css("height", $("#photo").height() + "px")
    } else {
        if (this.list_type == "list_dirs") {
            $("#photo .tool_bar").show();
            $("#photo .path_box").show();
            $("#photo_grid").css("height", $("#photo").height() - 88 + "px")
        } else {
            if (this.list_type == "list_images") {
                $("#photo .tool_bar").show();
                $("#photo .path_box").show();
                $("#photo_grid").css("height", $("#photo").height() - 88 + "px")
            } else {
                if (this.list_type == "galleryView") {
                    $("#photo .tool_bar").hide();
                    $("#photo .path_box").show();
                    $("#photo_grid").css("height", $("#photo").height() - 32 + "px")
                }
            }
        }
    }
}, bindEvent:function () {
    var a = this;
    $.subscribe("/event/media/photo/overview", function (c) {
        a.list_type = "list_over";
        a.setDivState();
        a.container.children().remove();
        a.listData = null;
        var f = "ui/theme/default/images/camera.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/camera.png*/;
        $('<div class="grid_item">').html("<div class='dir_icon'><img src='" + f + "'  width='124' height='124' style='border:none;'/></div><div class='title'>" + Airdroid.UsedLang.Photo._camera + "(" + c.overview.camera + ")</div>").addClass("dir_item").click(function (g) {
            Airdroid.Media.listDirImages("dir_camera", Airdroid.UsedLang.Photo._camera)
        }).appendTo(a.container);
        var e = "ui/theme/default/images/wallpaper.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/wallpaper.png*/;
        $('<div class="grid_item">').html("<div class='dir_icon'><img src='" + e + "'  width='124' height='124'  style='border:none;'/></div><div class='title'>" + Airdroid.UsedLang.Photo._wallpaper + "(" + c.overview.wallpaper + ")</div>").addClass("dir_item").click(function (g) {
            Airdroid.Media.listDirImages("dir_wallpaper", Airdroid.UsedLang.Photo._wallpaper)
        }).appendTo(a.container);
        var b = "ui/theme/default/images/other.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/other.png*/;
        $('<div class="grid_item">').html("<div class='dir_icon'><img src='" + b + "'  width='124' height='124'  style='border:none;'/></div><div class='title'>" + Airdroid.UsedLang.Photo._other + "</div>").addClass("dir_item").click(function (g) {
            Airdroid.Media.listOtherDirs()
        }).appendTo(a.container);
        a.updateScrollPanel();
        $.loadingEndHandler()
    });
    $.subscribe("/event/media/photo/listOtherDirs", function (b) {
        a.list_type = "list_dirs";
        a.resetFilter();
        a.setDivState();
        a.listData = null;
        a.container.empty();
        _.each(b.dirList, function (e) {
            var c = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/dir/thumb/" + e.id + "?max=124";
            $('<div class="grid_item">').attr("dir_id", e.id).attr("dir_name", e.name).html("<div class='dir_icon'><div class='dir_thumb_wrap'><img imgsrc='" + c + "' fileType='image' src='ui/theme/default/images/image_folder.png'/*tpa=http://192.168.119.101:8888/ui/theme/default/images/image_folder.png*/ width='124' height='124'  style='border:none;'/></div></div><div class='title'><span>" + e.name + "</span>(" + e.count + ")</div>").addClass("dir_item").click(function (f) {
                Airdroid.Media.listDirImages($(this).attr("dir_id"), $(this).attr("dir_name"))
            }).appendTo(a.container)
        });
        if (b.dirList.length == 0) {
            $.noData(a.container, $("#photo_grid").width(), $("#photo_grid").height())
        }
        $("#photo .path_nav").html("<a class='up_path' dir_id='dir_index' dir_name='" + Airdroid.UsedLang.Photo._navi_home + "'></a><a dir_id='dir_index'>" + Airdroid.UsedLang.Photo._navi_home + "</a> »<span>" + Airdroid.UsedLang.Photo._navi_others + "</span>").parent().show();
        $("#photo .tool_bar").show();
        $("#photo .abtn_wrap a").addClass("btn-state-disabled");
        a.updateScrollPanel();
        a.loadVisibaleItems()
    });
    $.subscribe("/event/media/photo/listDirImages", function (c) {
        a.list_type = "list_images";
        a.resetFilter();
        a.setDivState();
        a.listData = c;
        a.total_items = c.total_items;
        a.container.empty();
        a.updateScrollPanel();
        a.container.attr("dir_id", c.dir_id).attr("total_pages", c.total_pages).attr("total_items", c.total_items).attr("cur_page", 1);
        a.lastSelectedIndex = "";
        var b = 0;
        _.each(c.dirImagesList, function (f) {
            var e = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/thumb/" + f.id + "?max=156";
            var g = $(a.photoItemTemplate).attr("filename", f.name).attr("title", Airdroid.UsedLang.Photo._file_name + f.name + "." + f.ext + "\n\r" + Airdroid.UsedLang.Photo._file_size + bytesToSize(f.size) + "\n" + f.width + " x " + f.height + "px").attr("photoid", f.id).attr("index", b).attr("href", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/raw/" + f.id).attr("rel", "fancyboxshow").attr("fx_name", f.name + "." + f.ext).attr("fx_size", bytesToSize(f.size)).attr("fx_pix", f.width + " x " + f.height + "px").hover(function () {
                $(this).find(".photo_item_command").show()
            },function () {
                $(this).find(".photo_item_command").hide()
            }).appendTo(a.container);
            g.find("img").attr("fileType", "image").attr("orient", f.orientation).height(156).attr("imgsrc", e).clickAndDblClick({oneclick:function (h) {
                a.photoItemClickHandler(h, $(h.currentTarget).parents(".photo_item"))
            }, dblclick:function (h) {
                a.fxView(c.total_items)
            }});
            b++
        });
        if (c.dirImagesList.length == 0) {
            $.noData(a.container, $("#photo_grid").width(), $("#photo_grid").height())
        }
        if (c.dir_id != "dir_camera" && c.dir_id != "dir_wallpaper") {
            $("#photo .path_nav").html("<a class='up_path' dir_id='dir_others' dir_name='" + Airdroid.UsedLang.Photo._navi_others + "'></a><a dir_id='dir_index' style='margin-left:15px;' dir_name='" + Airdroid.UsedLang.Photo._navi_home + "'>" + Airdroid.UsedLang.Photo._navi_home + "</a> »<a dir_id='dir_others' dir_name='" + Airdroid.UsedLang.Photo._navi_others + "'>" + Airdroid.UsedLang.Photo._navi_others + "</a> » <span>" + c.dir_name + "</span><p class='checkbox' style='z-index:2;position:absolute;right:170px;top:7px;'   title='" + Airdroid.UsedLang.Common._title_select_all + "'><input type='checkbox'  class='checkbox_all'></p><span style='z-index:2;position:absolute;right:110px;'>Select All</span>")
        } else {
            $("#photo .path_nav").html("<a class='up_path' dir_id='dir_index' dir_name='" + Airdroid.UsedLang.Photo._navi_home + "'></a><a dir_id='dir_index' style='margin-left:15px;' dir_name='" + Airdroid.UsedLang.Photo._navi_home + "'>" + Airdroid.UsedLang.Photo._navi_home + "</a> »<span>" + c.dir_name + "</span><p class='checkbox' style='z-index:2;position:absolute;right:170px;top:7px;'  title='" + Airdroid.UsedLang.Common._title_select_all + "'><input type='checkbox'  class='checkbox_all'></p><span style='z-index:2;position:absolute;right:110px;'>Select All</span>")
        }
        a.setAtnStatus();
        a.updateScrollPanel();
        a.loadVisibaleItems()
    });
    $.subscribe("/event/media/photo/startLoadingNextPageDirImages", function (c, f) {
        var b = parseInt(a.container.attr("total_pages")), e = parseInt(a.container.attr("cur_page"));
        if (b > e) {
            Airdroid.Media.loadingNextPageDirImages(a.container.attr("dir_id"), e + 1, c, f);
            a.isLoading = true
        }
    });
    $.subscribe("/event/media/photo/loadingNextPageDirImages", function (e, c, f) {
        a.list_type = "list_images";
        a.isLoading = false;
        var b = a.listData.dirImagesList.length;
        a.listData.dirImagesList = a.listData.dirImagesList.concat(e.dirImagesList);
        a.container.attr("cur_page", e.curPage).attr("total_pages", e.total_pages);
        _.each(e.dirImagesList, function (h) {
            var g = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/thumb/" + h.id + "?max=156";
            var j = $(a.photoItemTemplate).attr("filename", h.name).attr("title", Airdroid.UsedLang.Photo._file_name + h.name + "." + h.ext + "\n" + Airdroid.UsedLang.Photo._file_size + bytesToSize(h.size) + "\n" + h.width + " x " + h.height + "px").attr("photoid", h.id).attr("index", b).attr("href", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/raw/" + h.id).attr("rel", "fancyboxshow").attr("fx_name", h.name + "." + h.ext).attr("fx_size", bytesToSize(h.size)).attr("fx_pix", h.width + " x " + h.height + "px").hover(function () {
                $(this).find(".photo_item_command").show()
            },function () {
                $(this).find(".photo_item_command").hide()
            }).appendTo(a.container);
            j.find("img").attr("fileType", "image").attr("orient", h.orientation).height(156).attr("imgsrc", g).clickAndDblClick({oneclick:function (k) {
                a.photoItemClickHandler(k, $(k.currentTarget).parents(".photo_item"))
            }, dblclick:function (k) {
                a.fxView(a.container.attr("total_items"))
            }});
            if (f) {
                f.push(j)
            }
            if ($("#photo .path_nav .checkbox_all").attr("checked") == true) {
                j.find(".checkbox").children("input").attr("checked", true).end().css("backgroundPosition", "0px -196px")
            }
            b++
        });
        if (c) {
            c = f
        }
        a.updateScrollPanel()
    })
}, fxView:function (a) {
    $("#photo").find("div[rel=fancyboxshow]").fancybox({opacity:true, overlayShow:true, transitionIn:"elastic", transitionOut:"elastic", showBottomOprationPanel:true, module:"photo", type:"image", totalItems:a})
}, photoItemClickHandler:function (h, g) {
    if (h.ctrlKey) {
        var f = g.find(".checkbox");
        this.doSelectPhoto(f);
        if (f.children("input").attr("checked") == true) {
            lastSelectedIndex = g.attr("index")
        }
    } else {
        if (h.shiftKey) {
            if (lastSelectedIndex != "") {
                g.siblings(".photo_item").each(function () {
                    var e = $(this).find(".checkbox");
                    e.children("input").attr("checked", false);
                    e.css("backgroundPosition", "0px -144px")
                });
                var c = g.attr("index");
                var b, a;
                if (parseInt(lastSelectedIndex) < parseInt(c)) {
                    b = parseInt(lastSelectedIndex);
                    a = parseInt(c)
                } else {
                    b = parseInt(c);
                    a = parseInt(lastSelectedIndex)
                }
                for (; b <= a; b++) {
                    var f = $("#photo_grid .photo_item[index='" + b + "']").find(".checkbox");
                    f.children("input").attr("checked", true);
                    f.css("backgroundPosition", "0px -196px")
                }
            } else {
                lastSelectedIndex = g.attr("index")
            }
        } else {
            var f = g.find(".checkbox");
            if (f.children("input").attr("checked") == true) {
                f.children("input").attr("checked", false);
                f.css("backgroundPosition", "0px -144px")
            } else {
                f.children("input").attr("checked", true);
                f.css("backgroundPosition", "0px -196px")
            }
            lastSelectedIndex = g.attr("index")
        }
    }
    this.updateAbtnStatusAndSelectAll()
}, abtnClickHander:function (h) {
    var b = this;
    if ($(h.currentTarget).hasClass("btn-state-disabled")) {
        return
    }
    var g = $(h.currentTarget).attr("menu");
    if (!g) {
        return
    }
    var a = $("#photo_grid .photo_item_body input:checked");
    switch (g) {
        case"Backup":
            if ($("#photo .path_nav .checkbox_all").attr("checked") == true) {
                var j = {};
                var f = "";
                if (b.listData.dir_id == "dir_camera") {
                    j = {dir_type:2};
                    f = Airdroid.UsedLang.Photo._camera
                } else {
                    if (b.listData.dir_id == "dir_wallpaper") {
                        j = {dir_type:3};
                        f = Airdroid.UsedLang.Photo._wallpaper
                    } else {
                        j = {dir_type:1, dir_id:b.listData.dir_id};
                        f = b.listData.dir_name
                    }
                }
                $("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/zip/" + f + ".zip?type=7&params=" + JSON.stringify(j))
            } else {
                if (a.length == 1) {
                    $("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/raw/" + a.parents(".grid_item").attr("photoId") + "?type=1");
                    return
                }
                var c = [];
                a.each(function () {
                    c.push(parseInt($(this).parents(".grid_item").attr("photoId")))
                });
                $("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/zip/" + Airdroid.UsedLang.Photo._export_zip_name + ".zip?type=4&params=" + JSON.stringify({ids:c}))
            }
            break;
        case"Delete":
            showConfirmBox(Airdroid.UsedLang.Photo._confirm_delete_photo, function () {
                var e = false;
                var l = [];
                var m = b.listData.dir_id;
                var n = {};
                var k = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/del_batch/";
                if ($("#photo .path_nav .checkbox_all").attr("checked") == true) {
                    e = true;
                    if (b.listData.dir_id == "dir_camera") {
                        n = {type:2, dir_id:m}
                    } else {
                        if (b.listData.dir_id == "dir_wallpaper") {
                            n = {type:3, dir_id:m}
                        } else {
                            n = {type:1, dir_id:m}
                        }
                    }
                    k = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/del_dir/"
                } else {
                    a.each(function () {
                        l.push(parseInt($(this).parents(".grid_item").attr("photoId")))
                    });
                    n = {params:JSON.stringify({ids:l})}
                }
                Airdroid.Media.severHandler(n, $.loadingHandler("#w_photo"), function (o) {
                    $.loadingEndHandler();
                    if (o.result == "1") {
                        if (e) {
                            b.container.empty();
                            b.checkSelectAll()
                        } else {
                            a.parents(".grid_item").each(function () {
                                b.removePhotoItemById($(this).attr("photoid"));
                                $(this).remove()
                            })
                        }
                        b.updateScrollPanel()
                    } else {
                        showMsgBox(Airdroid.UsedLang.Photo._fail_delete_photo)
                    }
                }, k)
            });
            break
    }
}, photoItemCommandClickHander:function (f) {
    var c = $(f.currentTarget);
    var a = c.parents(".grid_item").attr("photoid");
    if (a == null) {
        return
    }
    var b = c.attr("cmd");
    this.doCommand(b, a, c, false)
}, doCommand:function (e, a, f, c) {
    var b = this;
    switch (e) {
        case"downLoad":
            $("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/raw/" + a + "?type=1");
            break;
        case"settingBg":
            showConfirmBox(Airdroid.UsedLang.Photo._confirm_set_wallpaper, function () {
                Airdroid.Media.severHandler({id:a}, $.loadingHandler("#w_photo"), function (g) {
                    if (g.result == "1") {
                        $.loadingEndHandler();
                        showDelayMask(Airdroid.UsedLang.Photo._set_wallpaper_ok, $("#w_photo"))
                    }
                }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/setwallpaper/")
            });
            break;
        case"delete":
            showConfirmBox(Airdroid.UsedLang.Photo._confirm_delete, function () {
                Airdroid.Media.severHandler({}, null, function (g) {
                    if (g.result == "1") {
                        if (c) {
                            Airdroid.Cache.photoGallery.deleteCurrentImage()
                        } else {
                            if (f) {
                                b.removePhotoItemById(f.parents(".grid_item").attr("photoid"));
                                f.parents(".grid_item").remove();
                                b.updateScrollPanel()
                            }
                        }
                    } else {
                        showMsgBox(Airdroid.UsedLang.Photo._fail_delete)
                    }
                }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/image/del/" + a)
            });
            break;
        case"rotate_left":
            if (c) {
                Airdroid.Cache.photoGallery.rotate("left", false)
            }
            break;
        case"rotate_left_save":
            if (c) {
                Airdroid.Cache.photoGallery.rotate("left", true)
            }
            break;
        case"rotate_right":
            if (c) {
                Airdroid.Cache.photoGallery.rotate("right", false)
            }
            break;
        case"rotate_right_save":
            if (c) {
                Airdroid.Cache.photoGallery.rotate("right", true)
            }
            break
    }
}, removePhotoItemById:function (c) {
    var a = this.listData.dirImagesList.length;
    for (var b = 0; b < a; b++) {
        if (this.listData.dirImagesList[b].id == c) {
            this.listData.dirImagesList.splice(b, 1);
            break
        }
    }
}, selectPhoto:function (a) {
    this.doSelectPhoto($(a.currentTarget));
    this.updateAbtnStatusAndSelectAll()
}, doSelectPhoto:function (a) {
    if (a.children("input").attr("checked") == true) {
        a.children("input").attr("checked", false);
        a.css("backgroundPosition", "0px -144px")
    } else {
        a.children("input").attr("checked", true);
        a.css("backgroundPosition", "0px -196px")
    }
}, updateAbtnStatusAndSelectAll:function () {
    this.checkSelectAll();
    this.setAtnStatus()
}, selectAllPhotos:function (b) {
    if ($(b.currentTarget).children("input").attr("checked") == true) {
        var a = $("#photo_grid").find(".photo_item:visible");
        a.find(".checkbox").children("input").attr("checked", false).end().css("backgroundPosition", "0px -144px");
        $(b.currentTarget).children("input").attr("checked", false);
        $(b.currentTarget).css("backgroundPosition", "0px -144px")
    } else {
        var a = $("#photo_grid").find(".photo_item:visible");
        a.find(".checkbox").children("input").attr("checked", true).end().css("backgroundPosition", "0px -196px");
        $(b.currentTarget).children("input").attr("checked", true);
        $(b.currentTarget).css("backgroundPosition", "0px -196px")
    }
    this.setAtnStatus()
}, checkSelectAll:function () {
    var a = $("#photo .path_nav .checkbox_all");
    a.attr("checked", ($("#photo_grid .photo_item:visible").length > 0 && $("#photo_grid .photo_item:visible").length == $("#photo_grid .photo_item:visible").find("input:checked").length));
    a.attr("checked") ? a.parent().css("backgroundPosition", "0px -196px") : a.parent().css("backgroundPosition", "0px -144px")
}, setAtnStatus:function () {
    if ($("#photo_grid .photo_item_body input:checked").length == 0) {
        $("#photo .abtn_wrap a").addClass("btn-state-disabled")
    } else {
        $("#photo .abtn_wrap a").removeClass("btn-state-disabled");
        if ($("#photo .path_nav .checkbox_all").attr("checked") == true) {
            $("#photo .abtn_wrap a[menu='Delete']").addClass("btn-state-disabled")
        }
    }
}, resetFilter:function () {
    $("#photo_search_input").val("");
    $(".search26_r", this.el).removeClass("search_cross")
}, filterPhotoItem:function (e) {
    var self = this;
    var searchContent = $.trim($(e.currentTarget).val()).toLowerCase();
    if (searchContent.length == 0) {
        $(".grid_item", this.el).show();
        $(".search26_r", this.el).removeClass("search_cross")
    } else {
        var target = $(".grid_item", this.el).each(function () {
            var fileName = $(this).attr("filename");
            if (self.list_type == "list_dirs") {
                fileName = $(this).find(".title span").html()
            }
            if (eval("fileName.match(/" + searchContent + "/i)")) {
                $(this).show()
            } else {
                $(this).hide()
            }
        });
        $(".search26_r", self.el).addClass("search_cross")
    }
    self.updateScrollPanel()
}, clearPhotoSearchFilter:function () {
    $("#photo_search_input", this.el).val("");
    $(".grid_item", this.el).show();
    $(".search26_r", this.el).removeClass("search_cross");
    self.updateScrollPanel()
}});
Airdroid.Media.MusicModuleView = Backbone.View.extend({el:"#music", moduleTemplate:"", listType:"type_list", songsData:null, isInitView:false, isInitData:false, moreMenus:null, initialize:function () {
    this.moduleTemplate = _.template(Airdroid.Util.GetTemplate("music"))
}, initView:function () {
    if (!this.isInitView) {
        this.isInitView = true;
        this.render();
        this.bindEvent()
    }
}, initData:function () {
    if (!this.isInitData) {
        this.isInitData = true;
        this.listType = "type_list";
        Airdroid.Media.listSongs()
    }
}, clearData:function () {
    $("#music_grid").empty();
    this.isInitData = false
}, render:function () {
    return $(this.el).html(this.moduleTemplate({common:Airdroid.UsedLang.Common, usedLang:Airdroid.UsedLang.Music}))
}, events:{"click .music_list .music_list_item .checkbox":"selectMusic", "click .head_row .checkbox":"selectAllMusics", "keyup #music_search_input":"filterMusicItem", "click #music .search_cross":"clearMusicSearchFilter", "click #music .icon_btn_wrap a":"listTypeClickHandler", "click #music .path_box .path_nav a":"musicNavHander", "click #music_grid .music_list .music_list_item .col_opration .show .more_opration":"showMoreOpration", "click #music .head_row .sort_col":"sortHandler", "click #music .music_list_item .col_opration a":"handerItemOpration", "click #music .tool_bar .command .abtn_wrap a":"handerTopCommand", "click #importMusicBtn":"importMusic", "click #refreshMusicBtn":"refreshMusic"}, setDivHeight:function () {
    var a = $("#music").height();
    if ($("#music .path_box").css("display") == "block") {
        $("#music_grid").css("height", a - 73 - 6 + "px")
    } else {
        $("#music_grid").css("height", a - 43 - 6 + "px")
    }
    $("#music_grid .music_list").css("height", $("#music_grid").height() - 30 + "px")
}, bindEvent:function () {
    var a = this;
    $.subscribe("/event/media/music/listAlbums", function (c) {
        var e = $("#music_grid");
        var b = $("<div id='music_grid'></div>").css("height", e.height() + "px");
        e.remove();
        b.appendTo($("#music"));
        Airdroid.ScrollPane.albumScrollAPI = b.jScrollPane({animateScroll:true, mouseWheelSpeed:108}).data("jsp");
        a.albumListContainer = Airdroid.ScrollPane.albumScrollAPI.getContentPane();
        _.each(c.albums, function (f) {
            var h = $(' <div class="album_item">                                            <div class="album_icon">                                                <img  width="120px" height="120px">                                            </div>                                            <span class="album_name"></span>                                            <div class="album_player"></div>                                        </div>');
            h.find(".album_icon img").attr("src", "ui/theme/default/images/album.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/album.png*/);
            if (f.has_art) {
                h.find(".album_icon img").attr("imgsrc", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/album/art/" + f.id).attr("fileType", "image")
            }
            var g = Airdroid.UsedLang.Music._title_album_name + f.name + "\n" + Airdroid.UsedLang.Music._title_album_artist + f.artist + "\n" + Airdroid.UsedLang.Music._title_album_songs + f.songs;
            h.attr("albumId", f.id).attr("title", g).find(".album_name").html("<div>" + f.name + "</div> (" + f.songs + ")").end().find(".album_player").html(f.artist).end().bind("click",function (k) {
                var j = $(k.currentTarget);
                Airdroid.Media.listSongs(j.attr("albumId"), j.find(".album_name div").html())
            }).appendTo(a.albumListContainer)
        });
        $("#music .path_box").hide();
        a.setDivHeight();
        a.preloadMusicAlbumImg();
        a.updateScrollPanel("album");
        a.resetFilter()
    });
    $.subscribe("/event/media/music/listSongs", function (e) {
        a.listType = "type_list";
        var b = $("#music_grid");
        a.songsData = e.songs;
        a.ringtone = e.ringtone;
        a.notification = e.notification;
        a.alarm = e.alarm;
        b.html('<div class="music_list_item head_row" style="padding-right:24px;">                                    <p class="checkbox" style="z-index:2;"  title="' + Airdroid.UsedLang.Common._title_select_all + '"><input type="checkbox" name="mlcb" id="music_ch_all" class="checkbox_all"></p>                                    <div class="col_name sort_col"><span order="0" sortCol="name">' + Airdroid.UsedLang.Music._col_name + '</span><p class="order_icon"></p></div>                                    <div class="col_time sort_col"><span order="0" sortCol="duration">' + Airdroid.UsedLang.Music._col_time + '</span><p class="order_icon"></p></div>                                    <div class="col_player sort_col"><span order="0" sortCol="artist_name">' + Airdroid.UsedLang.Music._col_artist + '</span><p class="order_icon"></p></div>                                    <div class="col_album sort_col"><span order="0" sortCol="album_name">' + Airdroid.UsedLang.Music._col_album + '</span><p class="order_icon"></p></div>                                    <div class="col_size sort_col"><span order="0" sortCol="size">' + Airdroid.UsedLang.Music._col_size + '</span><p class="order_icon"></p></div>                                    <div class="col_opration"></div>                               </div>                               <div class="music_list">                               </div>');
        var c = $(".music_list", a.el).css("height", $("#music_grid").height() - 30 + "px");
        if (e.albumId) {
            $("#music .path_nav").html("<a menu='album_home'>" + Airdroid.UsedLang.Music._navi_album + "</a> »<span>" + e.albumName + "</span>").parent().show()
        } else {
            if ($("#music .path_box").css("display") == "block") {
                $("#music .path_box").hide()
            }
        }
        a.setDivHeight();
        Airdroid.ScrollPane.songScrollAPI = $(".music_list", a.el).bind("jsp-scroll-y", _.throttle(function (j, l, k, f) {
            if (f && !a.isLoading) {
                var g = parseInt(a.musicListContainer.attr("total_pages")), h = parseInt(a.musicListContainer.attr("cur_page"));
                if (g > h) {
                    Airdroid.Media.loadingNextPageSongs(a.musicListContainer.attr("album_id"), h + 1);
                    a.isLoading = true
                }
            }
        })).jScrollPane({animateScroll:true, mouseWheelSpeed:108}).data("jsp");
        a.musicListContainer = Airdroid.ScrollPane.songScrollAPI.getContentPane();
        $("#music .head_row .checkbox_all").attr("checked", false).parent().css("backgroundPosition", "0px -144px");
        a.showSongList(e.songs, true);
        if (e.albumId) {
            a.musicListContainer.attr("album_id", e.albumId)
        }
        a.musicListContainer.attr("total_pages", e.totalPages).attr("cur_page", 1);
        a.resetFilter()
    });
    $.subscribe("/event/media/music/loadingNextPageSongs", function (b) {
        a.songsData = a.songsData.concat(b.songs);
        a.musicListContainer.attr("cur_page", b.curPage);
        a.showSongList(b.songs, false);
        a.isLoading = false
    })
}, showSongList:function (e, b) {
    var a = this;
    if (b) {
        a.musicListContainer.empty()
    }
    var c = $("#music .head_row .checkbox_all").attr("checked");
    _.each(e, function (k) {
        var h = $('<div class="music_list_item list_item" >                                         <p class="checkbox" style="z-index:2;"><input type="checkbox" value=""></p>                                         <i class="icon_playing"></i>                                         <div class="col_name">                                         </div>                                         <div class="col_time"></div>                                         <div class="col_player"></div>                                         <div class="col_album" ></div>                                         <div class="col_size" ></div>                                         <div class="col_opration">                                            <div class="show">                                                <a class="player_btn player_play" menu="player" ></a>                                                <a menu="download">' + Airdroid.UsedLang.Common._menu_export + '</a>                                                <a  menu="delete" >' + Airdroid.UsedLang.Common._menu_delete + '</a>                                                 <a style="margin-right:5px;width:40px;" menu="set_as">' + Airdroid.UsedLang.Music._menu_set_as + '</a>                                                <a class="more_opration"></a>                                            </div>                                             <div class="actions_menu">                                                 <div class="actions_menu_top"><p class="actions_menu_arrow"></p></div>                                                 <div class="actions_menu_container">                                                    <a  menu="set_telephone">' + Airdroid.UsedLang.Music._menu_set_telephone + '</a>                                                    <a  menu="set_notification" >' + Airdroid.UsedLang.Music._menu_set_notification + '</a>                                                    <a  menu="set_alarm" >' + Airdroid.UsedLang.Music._menu_set_alarm + '</a>                                                 </div>                                                 <div class="actions_menu_bottom"></div>                                              </div>                                        </div>                                      </div>');
        var f = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/raw/" + k.id;
        var j = Airdroid.UsedLang.Music._title_song_name + k.name + "." + k.ext + "\n" + Airdroid.UsedLang.Music._title_song_time + Airdroid.Media.duration(k.duration) + "\n" + Airdroid.UsedLang.Music._title_song_artist + k.artist_name + "\n" + Airdroid.UsedLang.Music._title_song_album + k.album_name + "\n" + Airdroid.UsedLang.Music._title_song_size + bytesToSize(k.size);
        var g = k.artist_name;
        if (g == "<unknown>") {
            g = ""
        }
        h.attr("songId", k.id).find(".col_name").html(k.name).attr("title", j).clickAndDblClick({oneclick:function () {
            a.doSelectMusic($(this).parents(".music_list_item").find(".checkbox"))
        }, dblclick:function () {
            Airdroid.Media.playOrStopMedia($(this).parents(".music_list_item").find(".player_btn"), $(this).html())
        }}).end().find(".col_time").html(Airdroid.Media.duration(k.duration)).attr("title", j).clickAndDblClick({oneclick:function () {
            a.doSelectMusic($(this).parents(".music_list_item").find(".checkbox"))
        }, dblclick:function () {
            Airdroid.Media.playOrStopMedia($(this).parents(".music_list_item").find(".player_btn"), $(this).parents(".music_list_item").find(".col_name").html())
        }}).end().find(".col_player").html(g).attr("title", j).clickAndDblClick({oneclick:function () {
            a.doSelectMusic($(this).parents(".music_list_item").find(".checkbox"))
        }, dblclick:function () {
            Airdroid.Media.playOrStopMedia($(this).parents(".music_list_item").find(".player_btn"), $(this).parents(".music_list_item").find(".col_name").html())
        }}).end().find(".col_album").html(k.album_name).attr("title", j).clickAndDblClick({oneclick:function () {
            a.doSelectMusic($(this).parents(".music_list_item").find(".checkbox"))
        }, dblclick:function () {
            Airdroid.Media.playOrStopMedia($(this).parents(".music_list_item").find(".player_btn"), $(this).parents(".music_list_item").find(".col_name").html())
        }}).end().find(".col_size").html(bytesToSize(k.size)).attr("title", j).clickAndDblClick({oneclick:function () {
            a.doSelectMusic($(this).parents(".music_list_item").find(".checkbox"))
        }, dblclick:function () {
            Airdroid.Media.playOrStopMedia($(this).parents(".music_list_item").find(".player_btn"), $(this).parents(".music_list_item").find(".col_name").html())
        }}).end().find("a.player_btn").attr("url", f).attr("media_type", k.ext).end().hover(function () {
            $(this).find(".col_opration").show();
            $(this).addClass("mouse_over")
        },function () {
            $(this).find(".col_opration").hide();
            $(this).removeClass("mouse_over");
            if (a.moreMenus != null) {
                a.moreMenus.hide()
            }
        }).appendTo(a.musicListContainer);
        if (c) {
            h.find(".checkbox").children("input").attr("checked", true).end().css("backgroundPosition", "0px -196px")
        }
    });
    a.setItemRowStyle();
    a.updateScrollPanel("song");
    a.setAbtnStatus()
}, showMoreOpration:function (a) {
    this.moreMenus = $(a.currentTarget).parents(".music_list_item").find(".actions_menu");
    this.moreMenus.show()
}, updateScrollPanel:function (a) {
    if (a == "album" && !_.isUndefined(Airdroid.ScrollPane.albumScrollAPI)) {
        Airdroid.ScrollPane.albumScrollAPI.reinitialise()
    } else {
        if (a == "song" && !_.isUndefined(Airdroid.ScrollPane.songScrollAPI)) {
            Airdroid.ScrollPane.songScrollAPI.reinitialise()
        } else {
            if (!_.isUndefined(Airdroid.ScrollPane.albumScrollAPI)) {
                Airdroid.ScrollPane.albumScrollAPI.reinitialise()
            }
            if (!_.isUndefined(Airdroid.ScrollPane.songScrollAPI)) {
                Airdroid.ScrollPane.songScrollAPI.reinitialise()
            }
        }
    }
}, refreshMusic:function (a) {
    if (this.listType == "type_list") {
        Airdroid.Media.listSongs()
    } else {
        Airdroid.Media.listAlbums()
    }
}, handerItemOpration:function (c) {
    var a = this;
    var b = $(c.currentTarget);
    var f = b.attr("menu");
    if (f == null) {
        return
    }
    var g = b.parents(".music_list_item").attr("songId");
    if (f == "player") {
        Airdroid.Media.playOrStopMedia(b, b.parents(".music_list_item").find(".col_name").html())
    } else {
        if (f == "download") {
            $("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/raw/" + g + "?type=1")
        } else {
            if (f == "delete") {
                showConfirmBox(Airdroid.UsedLang.Music._confirm_delete, function () {
                    Airdroid.Media.severHandler({}, $.loadingHandler("#w_music"), function (e) {
                        $.loadingEndHandler();
                        if (e.result == "1") {
                            if (a.listType == "type_list") {
                                Airdroid.Media.listSongs()
                            } else {
                                Airdroid.Media.listAlbums()
                            }
                        } else {
                            showMsgBox(Airdroid.UsedLang.Music._fail_delete)
                        }
                    }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/del/" + g)
                })
            } else {
                if (f == "set_telephone") {
                    if (g == a.ringtone) {
                        showDelayMask(Airdroid.UsedLang.Music._already_is_telephone, $("#w_music"));
                        return
                    }
                    Airdroid.Media.setRingtone(g, 1, 0, "#w_music", function (e) {
                        $.loadingEndHandler();
                        if (e.result == "1") {
                            a.ringtone = g;
                            showDelayMask(Airdroid.UsedLang.Music._set_telephone_ok, $("#w_music"))
                        } else {
                            showMsgBox(Airdroid.UsedLang.Music._set_telephone_fail)
                        }
                    });
                    $.publish("/event/media/audio/setringtone", ["telephone"])
                } else {
                    if (f == "set_notification") {
                        if (g == a.notification) {
                            showDelayMask(Airdroid.UsedLang.Music._already_is_notification, $("#w_music"));
                            return
                        }
                        Airdroid.Media.setRingtone(g, 2, 0, "#w_music", function (e) {
                            $.loadingEndHandler();
                            if (e.result == "1") {
                                a.notification = g;
                                showDelayMask(Airdroid.UsedLang.Music._set_notification_ok, $("#w_music"))
                            } else {
                                showMsgBox(Airdroid.UsedLang.Music._set_notification_fail)
                            }
                        });
                        $.publish("/event/media/audio/setringtone", ["message"])
                    } else {
                        if (f == "set_alarm") {
                            if (g == a.alarm) {
                                showDelayMask(Airdroid.UsedLang.Music._already_is_alarm, $("#w_music"));
                                return
                            }
                            Airdroid.Media.setRingtone(g, 3, 0, "#w_music", function (e) {
                                $.loadingEndHandler();
                                if (e.result == "1") {
                                    a.alarm = g;
                                    showDelayMask(Airdroid.UsedLang.Music._set_alarm_ok, $("#w_music"))
                                } else {
                                    showMsgBox(Airdroid.UsedLang.Music._set_alarm_fail)
                                }
                            });
                            $.publish("/event/media/audio/setringtone", ["alarm"])
                        } else {
                            if (f = "set_as") {
                                $(c.currentTarget).siblings(".more_opration").trigger("click")
                            }
                        }
                    }
                }
            }
        }
    }
}, setItemRowStyle:function () {
    $(".music_list .music_list_item:odd", this.el).removeClass("even").addClass("odd");
    $(".music_list .music_list_item:even", this.el).removeClass("odd").addClass("even")
}, importMusic:function () {
    var a = this;
    var b = {allUploadComplete:function () {
        setTimeout(function () {
            if (a.listType == "type_list") {
                Airdroid.Media.listSongs()
            } else {
                Airdroid.Media.listAlbums()
            }
        }, Airdroid.Media.uploadRefeshDelay)
    }, allowedExtensions:["mp3", "ogg", "wav"], flash_file_types:"*.mp3;*.ogg;*.wav", suportTypeMsg:Airdroid.UsedLang.Upload._upload_suport.format("mp3, ogg, wav"), flash_file_types_description:Airdroid.UsedLang.Upload._file_types_desc_musics};
    openUploaderWin("/sd/music/", b, Airdroid.UsedLang.Upload._win_title_music)
}, handerTopCommand:function (g) {
    if ($(g.currentTarget).hasClass("btn-state-disabled")) {
        return
    }
    var b = this;
    var f = $(g.currentTarget);
    var h = f.attr("menu");
    var a = $("#music_grid .music_list .music_list_item input:checked");
    if (h == "Backup") {
        if (a.length == 1) {
            $("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/raw/" + a.parents(".music_list_item").attr("songId") + "?type=1");
            return
        }
        var c = [];
        a.each(function () {
            c.push(parseInt($(this).parents(".music_list_item").attr("songId")))
        });
        $("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/zip/" + Airdroid.UsedLang.Music._export_zip_name + ".zip?type=5&params=" + JSON.stringify({ids:c}))
    } else {
        if (h == "Delete") {
            showConfirmBox(Airdroid.UsedLang.Music._confirm_delete_songs, function () {
                var e = [];
                a.each(function () {
                    e.push(parseInt($(this).parents(".music_list_item").attr("songId")))
                });
                Airdroid.Media.severHandler({params:JSON.stringify({ids:e})}, $.loadingHandler("#w_music"), function (j) {
                    $.loadingEndHandler();
                    if (j.result == "1") {
                        if (b.listType == "type_list") {
                            Airdroid.Media.listSongs()
                        } else {
                            Airdroid.Media.listAlbums()
                        }
                    } else {
                        showMsgBox(Airdroid.UsedLang.Music._fail_delete_songs)
                    }
                }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/del_batch/")
            })
        }
    }
}, sortHandler:function (f) {
    var c = $(f.currentTarget).find("span");
    var a = c.attr("order");
    var b = c.attr("sortCol");
    this.songsData = this.songsData.sort(function (g, e) {
        if (a == 0) {
            if (b == "name" || b == "artist_name" || b == "album_name") {
                return g[b].localeCompare(e[b])
            } else {
                return g[b] - e[b]
            }
        } else {
            if (b == "name" || b == "artist_name" || b == "album_name") {
                return -g[b].localeCompare(e[b])
            } else {
                return -(g[b] - e[b])
            }
        }
    });
    this.showSongList(this.songsData, true);
    if (a == 0) {
        c.attr("order", 1);
        c.parents(".head_row").find("p.order_icon").hide();
        c.siblings("p.order_icon").removeClass("order_asc").addClass("order_desc").show()
    } else {
        c.attr("order", 0);
        c.parents(".head_row").find("p.order_icon").hide();
        c.siblings("p.order_icon").removeClass("order_desc").addClass("order_asc").show()
    }
}, listTypeClickHandler:function (b) {
    var a = $(b.currentTarget);
    if (a.attr("menu") == "type_list") {
        Airdroid.Media.listSongs();
        this.listType = a.attr("menu")
    } else {
        Airdroid.Media.listAlbums()
    }
    this.listType = a.attr("menu");
    a.siblings(".focus").removeClass("focus");
    a.addClass("focus")
}, musicNavHander:function (b) {
    var a = $(b.currentTarget);
    var c = a.attr("menu");
    if (c == "music_home") {
        Airdroid.Media.listSongs()
    } else {
        if (c == "album_home") {
            Airdroid.Media.listAlbums()
        }
    }
}, preloadMusicAlbumImg:function () {
    var a = this;
    var c = $(this.el).find('[fileType="image"]:first');
    if (c.length > 0) {
        var e = c.attr("imgsrc");
        var b = c.attr("src");
        c.error(function () {
            $(this).attr("src", b);
            if (!$.browser.msie) {
                $(this).show().parent().removeClass("album_icon_loading")
            }
            a.preloadMusicAlbumImg()
        }).removeAttr("fileType").imgpreload(function () {
            if (!$.browser.msie) {
                $(this).show().parent().removeClass("album_icon_loading")
            }
            a.preloadMusicAlbumImg()
        }).attr("src", e);
        if (!$.browser.msie) {
            c.hide().parent().addClass("album_icon_loading")
        }
    }
}, selectMusic:function (a) {
    var b = $(a.currentTarget);
    this.doSelectMusic(b)
}, doSelectMusic:function (a) {
    if (a.children("input").attr("checked") == true) {
        a.children("input").attr("checked", false);
        a.css("backgroundPosition", "0px -144px")
    } else {
        a.children("input").attr("checked", true);
        a.css("backgroundPosition", "0px -196px")
    }
    this.checkSelectAll();
    this.setAbtnStatus()
}, selectAllMusics:function (b) {
    if ($(b.currentTarget).children("input").attr("checked") == true) {
        var a = $(".music_list").find(".music_list_item:visible");
        a.find(".checkbox").children("input").attr("checked", false).end().css("backgroundPosition", "0px -144px");
        $(b.currentTarget).children("input").attr("checked", false);
        $(b.currentTarget).css("backgroundPosition", "0px -144px")
    } else {
        var a = $(".music_list").find(".music_list_item:visible");
        a.find(".checkbox").children("input").attr("checked", true).end().css("backgroundPosition", "0px -196px");
        $(b.currentTarget).children("input").attr("checked", true);
        $(b.currentTarget).css("backgroundPosition", "0px -196px")
    }
    this.setAbtnStatus()
}, checkSelectAll:function () {
    var a = $("#music .head_row .checkbox_all");
    a.attr("checked", ($(".music_list .music_list_item:visible").length > 0 && $(".music_list .music_list_item:visible").length == $(".music_list .music_list_item:visible").find("input:checked").length));
    a.attr("checked") ? a.parent().css("backgroundPosition", "0px -196px") : a.parent().css("backgroundPosition", "0px -144px")
}, setAbtnStatus:function () {
    if ($("#music .music_list_item input:checked").length > 0) {
        $("#music .command .abtn_wrap a").removeClass("btn-state-disabled")
    } else {
        $("#music .command .abtn_wrap a").addClass("btn-state-disabled")
    }
}, resetFilter:function () {
    $("#music_search_input").val("");
    $(".search26_r", this.el).removeClass("search_cross")
}, filterMusicItem:function (e) {
    var self = this;
    var searchContent = $.trim($(e.currentTarget).val()).toLowerCase();
    if (this.listType == "type_list") {
        if (searchContent.length == 0) {
            $(".music_list .music_list_item", this.el).show();
            $(".search26_r", this.el).removeClass("search_cross");
            this.checkSelectAll();
            self.updateScrollPanel("song");
            return
        }
        var target = $(".music_list .music_list_item", this.el).each(function () {
            var name = $(this).find(".col_name").html();
            var player = $(this).find(".col_player").html();
            var album = $(this).find(".col_album").html();
            if (eval("name.match(/" + searchContent + "/i)") || eval("player.match(/" + searchContent + "/i)") || eval("album.match(/" + searchContent + "/i)")) {
                $(this).show()
            } else {
                $(this).hide()
            }
        });
        this.checkSelectAll();
        self.updateScrollPanel("song")
    } else {
        if (searchContent.length == 0) {
            $("#music_grid .album_item", this.el).show();
            $(".search26_r", this.el).removeClass("search_cross");
            this.checkSelectAll();
            self.updateScrollPanel("album");
            return
        }
        var target = $("#music_grid .album_item", this.el).each(function () {
            var name = $(this).find(".album_name").html();
            var player = $(this).find(".album_player").html();
            if (eval("name.match(/" + searchContent + "/i)") || eval("player.match(/" + searchContent + "/i)")) {
                $(this).show()
            } else {
                $(this).hide()
            }
        });
        this.checkSelectAll();
        self.updateScrollPanel("album")
    }
    $(".search26_r", self.el).addClass("search_cross")
}, clearMusicSearchFilter:function () {
    $("#music_search_input", this.el).val("");
    $(".search26_r", this.el).removeClass("search_cross");
    if (this.listType == "type_list") {
        $(".music_list .music_list_item", this.el).show();
        this.updateScrollPanel("song")
    } else {
        $("#music_grid .album_item", this.el).show();
        this.updateScrollPanel("album")
    }
    this.checkSelectAll()
}});
Airdroid.Media.RingtoneModuleView = Backbone.View.extend({el:"#ringtone", moduleTemplate:"", listCate:"telephone", isInitView:false, isInitData:false, initialize:function () {
    this.moduleTemplate = _.template(Airdroid.Util.GetTemplate("ringtone"));
    this.bindEvent()
}, events:{"click #ringtone .tabs>div":"tabClickHander", "click #ringtone_grid .ringtone_list .ringtone_list_item .checkbox":"selectRingtone", "click #ringtone_grid .head_row .checkbox":"selectAllRingtones", "keyup #ringtone_search_input":"filterRingtoneItem", "click #ringtone .search_cross":"clearRingtoneSearchFilter", "click #ringtone .ringtone_list_item .col_opration a":"handerItemOpration", "click #ringtone .ringtone_top_box .command .abtn_wrap a":"handerTopCommand", "click #importRingtoneBtn":"importRingtone", "click #ringtone .head_row .sort_col":"sortHandler", "click #refreshRingtoneBtn":"refreshRingtone", "contextmenu  #w_ringtone":"onContextMenu"}, render:function () {
    return $(this.el).html(this.moduleTemplate({common:Airdroid.UsedLang.Common, usedLang:Airdroid.UsedLang.Ringtone}))
}, initView:function () {
    if (!this.isInitView) {
        this.isInitView = true;
        this.render();
        Airdroid.ScrollPane.telephoneScrollAPI = $("#telephone_list .ringtone_list").jScrollPane({animateScroll:true, mouseWheelSpeed:108}).data("jsp");
        this.telephone_list_container = Airdroid.ScrollPane.telephoneScrollAPI.getContentPane();
        Airdroid.ScrollPane.messageScrollAPI = $("#message_list .ringtone_list").jScrollPane({animateScroll:true, mouseWheelSpeed:108}).data("jsp");
        this.message_list_container = Airdroid.ScrollPane.messageScrollAPI.getContentPane();
        Airdroid.ScrollPane.alarmScrollAPI = $("#alarm_list .ringtone_list").jScrollPane({animateScroll:true, mouseWheelSpeed:108}).data("jsp");
        this.alarm_list_container = Airdroid.ScrollPane.alarmScrollAPI.getContentPane()
    }
}, initData:function () {
    if (!this.isInitData) {
        this.isInitData = true;
        this.listCate = "telephone";
        Airdroid.Media.listRingtones(1)
    }
}, clearData:function () {
    $(".tabs div[tabId='telephone']", this.el).attr("init", "0");
    $(".tabs div[tabId='message']", this.el).attr("init", "0");
    $(".tabs div[tabId='alarm']", this.el).attr("init", "0");
    this.telephone_list_container.empty();
    this.message_list_container.empty();
    this.alarm_list_container.empty();
    this.updateScrollPanel();
    $(".tabs div[tabId='telephone']", this.el).addClass("tab_current").removeClass("tab").siblings(".tab_current").addClass("tab").removeClass("tab_current");
    $("#telephone_list").show();
    $("#message_list").hide();
    $("#alarm_list").hide();
    this.isInitData = false
}, bindEvent:function () {
    var a = this;
    $.subscribe("/event/media/ringtone/list", function (c) {
        a.resetFilter();
        var b;
        $("#ringtone_grid").scrollTop(0);
        if (c.ringtone_type == 1) {
            a.ringtone = c.using;
            a.ringtone_using_sys = c.using_sys;
            a.ringtone_list = c.ringtone_list;
            b = a.telephone_list_container;
            $(".tabs div[tabId='telephone']", a.el).attr("init", "1")
        } else {
            if (c.ringtone_type == 2) {
                a.notification = c.using;
                a.notification_using_sys = c.using_sys;
                a.notification_list = c.ringtone_list;
                b = a.message_list_container;
                $(".tabs div[tabId='message']", a.el).attr("init", "1")
            } else {
                if (c.ringtone_type == 3) {
                    a.alarm = c.using;
                    a.alarm_using_sys = c.using_sys;
                    a.alarm_list = c.ringtone_list;
                    b = a.alarm_list_container;
                    $(".tabs div[tabId='alarm']", a.el).attr("init", "1")
                }
            }
        }
        a.showListView(c.ringtone_list, b, c.using, c.using_sys);
        a.checkSelectAll()
    });
    $.subscribe("/event/media/audio/setringtone", function (c) {
        if (c == a.listCate && a.isInit) {
            var b = 1;
            if (c == "telephone") {
                b = 1
            } else {
                if (c == "message") {
                    b = 2
                } else {
                    if (c == "alarm") {
                        b = 3
                    }
                }
            }
            Airdroid.Media.listRingtones(b)
        } else {
            $(".tabs div[tabId='" + c + "']", a.el).attr("init", "0")
        }
    })
}, showListView:function (e, c, b, f) {
    var a = this;
    c.children().remove();
    _.each(e, function (g) {
        var j = $('<div class="ringtone_list_item list_item">                        <p class="checkbox" style="z-index:2;"><input type="checkbox"></p>                        <i class="icon_playing"></i>                        <div class="col_name"><span class="name"></span><i class="icon_system"></i><i class="icon_used"></i></div>                        <div class="col_time">00:03</div>                        <div class="col_size">5.0 KB</div>                        <div class="col_opration">                            <a class="player_btn player_play" menu="player"></a>                            <a  menu="download">' + Airdroid.UsedLang.Common._menu_export + '</a>                            <a  menu="delete">' + Airdroid.UsedLang.Common._menu_delete + '</a>                            <a  menu="setringtone">' + Airdroid.UsedLang.Ringtone._menu_setting + "</a>                        </div>                    </div>");
        var h = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/raw/" + g.id;
        if (g.sys == 1) {
            h = "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/raw/" + g.id + "?sys=1"
        }
        var k = Airdroid.UsedLang.Ringtone._title_ringtone_name + g.name + "." + g.ext + "\n" + Airdroid.UsedLang.Ringtone._title_ringtone_time + Airdroid.Media.duration(g.duration) + "\n" + Airdroid.UsedLang.Ringtone._title_ringtone_size + bytesToSize(g.size);
        j.attr("ringtoneId", g.id).attr("sys", g.sys).find(".col_name .name.htm"/*tpa=http://192.168.119.101:8888/.col_name .name*/).html(g.name).end().find(".col_time").html(Airdroid.Media.duration(g.duration)).attr("title", k).clickAndDblClick({oneclick:function () {
            a.doSelectRingTone($(this).parents(".ringtone_list_item").find(".checkbox"))
        }, dblclick:function () {
            Airdroid.Media.playOrStopMedia($(this).parents(".ringtone_list_item").find(".player_btn"), $(this).parents(".ringtone_list_item").find(".col_name .name.htm"/*tpa=http://192.168.119.101:8888/.col_name .name*/).html())
        }}).end().find(".col_size").html(bytesToSize(g.size)).attr("title", k).clickAndDblClick({oneclick:function () {
            a.doSelectRingTone($(this).parents(".ringtone_list_item").find(".checkbox"))
        }, dblclick:function () {
            Airdroid.Media.playOrStopMedia($(this).parents(".ringtone_list_item").find(".player_btn"), $(this).parents(".ringtone_list_item").find(".col_name .name.htm"/*tpa=http://192.168.119.101:8888/.col_name .name*/).html())
        }}).end().find("a.player_btn").attr("url", h).attr("media_type", g.ext).end().hover(function () {
            $(this).find(".col_opration").show();
            $(this).addClass("mouse_over")
        },function () {
            $(this).find(".col_opration").hide();
            $(this).removeClass("mouse_over")
        }).appendTo(c);
        if (g.sys == 1) {
            j.find(".col_name .icon_system").show();
            j.find(".col_opration a[menu='delete']").addClass("btn-state-disabled").css("color", "#ccc")
        }
        if (b == g.id && f == g.sys) {
            j.find(".col_name .icon_used").show()
        }
        j.find(".col_name").attr("title", k).clickAndDblClick({oneclick:function () {
            a.doSelectRingTone($(this).parents(".ringtone_list_item").find(".checkbox"))
        }, dblclick:function () {
            Airdroid.Media.playOrStopMedia($(this).parents(".ringtone_list_item").find(".player_btn"), $(this).find(".name").html())
        }})
    });
    a.setItemRowStyle(c);
    a.updateScrollPanel(a.listCate);
    a.setAbtnStatus()
}, onContextMenu:function (a) {
    stopEvent(a)
}, setItemRowStyle:function (a) {
    $(".ringtone_list_item:odd", a).removeClass("even").addClass("odd");
    $(".ringtone_list_item:even", a).removeClass("odd").addClass("even")
}, tabClickHander:function (f) {
    this.clearRingtoneSearchFilter();
    var c = $(f.currentTarget);
    var a = c.attr("tabId");
    c.addClass("tab_current").removeClass("tab");
    c.siblings(".tab_current").addClass("tab").removeClass("tab_current");
    this.listCate = a;
    var b = 1;
    if (a == "telephone") {
        b = 1;
        $("#telephone_list").siblings(".ringtone_list_body:visible").hide().end().show()
    } else {
        if (a == "message") {
            b = 2;
            $("#message_list").siblings(".ringtone_list_body:visible").hide().end().show()
        } else {
            if (a == "alarm") {
                b = 3;
                $("#alarm_list").siblings(".ringtone_list_body:visible").hide().end().show()
            }
        }
    }
    if (c.attr("init") == "0") {
        Airdroid.Media.listRingtones(b)
    }
    this.setAbtnStatus()
}, importRingtone:function () {
    var c;
    var a = 1;
    if (this.listCate == "telephone") {
        c = "/sd/airdroid/ringtones/";
        a = 1
    } else {
        if (this.listCate == "message") {
            c = "/sd/airdroid/notifications/";
            a = 2
        } else {
            if (this.listCate == "alarm") {
                c = "/sd/airdroid/alarms/";
                a = 3
            }
        }
    }
    var b = {allUploadComplete:function () {
        setTimeout(function () {
            Airdroid.Media.listRingtones(a)
        }, Airdroid.Media.uploadRefeshDelay)
    }, allowedExtensions:["mp3", "ogg", "wav"], flash_file_types:"*.mp3;*.ogg;*.wav", suportTypeMsg:Airdroid.UsedLang.Upload._upload_suport.format("mp3, ogg, wav"), flash_file_types_description:Airdroid.UsedLang.Upload._file_types_desc_ringtones};
    openUploaderWin(c, b, Airdroid.UsedLang.Upload._win_title_ringtone)
}, refreshRingtone:function () {
    var a = 1;
    if (this.listCate == "telephone") {
        a = 1
    } else {
        if (this.listCate == "message") {
            a = 2
        } else {
            if (this.listCate == "alarm") {
                a = 3
            }
        }
    }
    Airdroid.Media.listRingtones(a)
}, handerItemOpration:function (j) {
    if ($(j.currentTarget).hasClass("btn-state-disabled")) {
        return
    }
    var h = $(j.currentTarget);
    var c = this;
    var k = h.attr("menu");
    var b = h.parents(".ringtone_list_item").attr("ringtoneId");
    var g = h.parents(".ringtone_list_item").attr("sys");
    if (k == "player") {
        Airdroid.Media.playOrStopMedia(h, h.parents(".ringtone_list_item").find(".col_name .name.htm"/*tpa=http://192.168.119.101:8888/.col_name .name*/).html())
    } else {
        if (k == "download") {
            $("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/raw/" + b + "?type=1&sys=" + g)
        } else {
            if (k == "delete") {
                if (h.parents(".ringtone_list_item").attr("sys") == "1") {
                    showDelayMask(Airdroid.UsedLang.Ringtone._can_not_delete, $("#w_ringtone"));
                    return
                }
                showConfirmBox(Airdroid.UsedLang.Ringtone._confirm_delete, function () {
                    Airdroid.Media.severHandler({}, $.loadingHandler("#w_ringtone"), function (l) {
                        $.loadingEndHandler();
                        if (l.result == "1") {
                            var e = 1;
                            if (c.listCate == "telephone") {
                                e = 1
                            } else {
                                if (c.listCate == "message") {
                                    e = 2
                                } else {
                                    if (c.listCate == "alarm") {
                                        e = 3
                                    }
                                }
                            }
                            Airdroid.Media.listRingtones(e)
                        } else {
                            showMsgBox(Airdroid.UsedLang.Ringtone._fail_delete)
                        }
                    }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/del/" + b)
                })
            } else {
                if (k == "setringtone") {
                    var f = 1;
                    if (this.listCate == "telephone") {
                        if (b == c.ringtone) {
                            showDelayMask(Airdroid.UsedLang.Ringtone._already_ringtone, $("#w_ringtone"));
                            return
                        }
                        f = 1
                    } else {
                        if (this.listCate == "message") {
                            if (b == c.notification) {
                                showDelayMask(Airdroid.UsedLang.Ringtone._already_ringtone, $("#w_ringtone"));
                                return
                            }
                            f = 2
                        } else {
                            if (this.listCate == "alarm") {
                                if (b == c.alarm) {
                                    showDelayMask(Airdroid.UsedLang.Ringtone._already_ringtone, $("#w_ringtone"));
                                    return
                                }
                                f = 3
                            }
                        }
                    }
                    var a = h.parents(".ringtone_list_item").attr("sys");
                    Airdroid.Media.setRingtone(b, f, a, "#w_ringtone", function (e) {
                        if (e.result == "1") {
                            Airdroid.Media.listRingtones(f);
                            c.clearRingtoneSearchFilter();
                            c.setAbtnStatus();
                            showDelayMask(Airdroid.UsedLang.Ringtone._setting_ok, $("#w_ringtone"))
                        } else {
                            showMsgBox(Airdroid.UsedLang.Ringtone._setting_fail)
                        }
                    })
                }
            }
        }
    }
}, handerTopCommand:function (g) {
    if ($(g.currentTarget).hasClass("btn-state-disabled")) {
        return
    }
    var n = this;
    var h = $(g.currentTarget);
    var b = h.attr("menu");
    var m;
    var f = 1;
    if (this.listCate == "telephone") {
        m = "#telephone_list";
        f = 1
    } else {
        if (this.listCate == "message") {
            m = "#message_list";
            f = 2
        } else {
            if (this.listCate == "alarm") {
                m = "#alarm_list";
                f = 3
            }
        }
    }
    var k = $(m + " .ringtone_list .ringtone_list_item input:checked");
    if (b == "Backup") {
        if (k.length == 1) {
            $("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/raw/" + k.parents(".ringtone_list_item").attr("ringtoneId") + "?type=1&sys=" + k.parents(".ringtone_list_item").attr("sys"));
            return
        }
        var l = [];
        var j = [];
        k.each(function () {
            if ($(this).parents(".ringtone_list_item").attr("sys") == 1) {
                l.push(parseInt($(this).parents(".ringtone_list_item").attr("ringtoneId")))
            } else {
                j.push(parseInt($(this).parents(".ringtone_list_item").attr("ringtoneId")))
            }
        });
        $("#downloadFrame").attr("src", "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/zip/" + Airdroid.UsedLang.Ringtone._export_zip_name + ".zip?type=6&params=" + JSON.stringify({sys:l, sd:j}))
    } else {
        if (b == "Delete") {
            var a = [];
            var c = [];
            k.each(function () {
                var e = $(this).parents(".ringtone_list_item");
                if (e.attr("sys") == "0") {
                    a.push(parseInt(e.attr("ringtoneId")));
                    c.push(e)
                }
            });
            if (a.length == 0) {
                showDelayMask(Airdroid.UsedLang.Ringtone._can_not_delete, $("#w_ringtone"));
                return
            }
            showConfirmBox(Airdroid.UsedLang.Ringtone._confirm_delete_ringtones, function () {
                Airdroid.Media.severHandler({params:JSON.stringify({ids:a})}, $.loadingHandler("#w_ringtone"), function (e) {
                    $.loadingEndHandler();
                    if (e.result == "1") {
                        Airdroid.Media.listRingtones(f)
                    } else {
                        showMsgBox(Airdroid.UsedLang.Ringtone._fail_delete)
                    }
                }, "http://" + Airdroid.Env.ConnectionAddress + "/sdctl/media/audio/del_batch/")
            })
        }
    }
}, selectRingtone:function (a) {
    var b = $(a.currentTarget);
    this.doSelectRingTone(b)
}, doSelectRingTone:function (a) {
    if (a.children("input").attr("checked") == true) {
        a.children("input").attr("checked", false);
        a.css("backgroundPosition", "0px -144px")
    } else {
        a.children("input").attr("checked", true);
        a.css("backgroundPosition", "0px -196px")
    }
    this.checkSelectAll();
    this.setAbtnStatus()
}, selectAllRingtones:function (b) {
    var a;
    if (this.listCate == "telephone") {
        a = $("#telephone_list .ringtone_list").find(".ringtone_list_item:visible")
    } else {
        if (this.listCate == "message") {
            a = $("#message_list .ringtone_list").find(".ringtone_list_item:visible")
        } else {
            if (this.listCate == "alarm") {
                a = $("#alarm_list .ringtone_list").find(".ringtone_list_item:visible")
            }
        }
    }
    if ($(b.currentTarget).children("input").attr("checked") == true) {
        a.find(".checkbox").children("input").attr("checked", false).end().css("backgroundPosition", "0px -144px");
        $(b.currentTarget).children("input").attr("checked", false);
        $(b.currentTarget).css("backgroundPosition", "0px -144px")
    } else {
        a.find(".checkbox").children("input").attr("checked", true).end().css("backgroundPosition", "0px -196px");
        $(b.currentTarget).children("input").attr("checked", true);
        $(b.currentTarget).css("backgroundPosition", "0px -196px")
    }
    this.setAbtnStatus()
}, checkSelectAll:function () {
    var a;
    if (this.listCate == "telephone") {
        a = $("#telephone_list .head_row .checkbox_all");
        a.attr("checked", ($("#telephone_list .ringtone_list .ringtone_list_item:visible").length > 0 && $("#telephone_list .ringtone_list .ringtone_list_item:visible").length == $("#telephone_list .ringtone_list .ringtone_list_item:visible").find("input:checked").length))
    } else {
        if (this.listCate == "message") {
            a = $("#message_list .head_row .checkbox_all");
            a.attr("checked", ($("#message_list .ringtone_list .ringtone_list_item:visible").length > 0 && $("#message_list .ringtone_list .ringtone_list_item:visible").length == $("#message_list .ringtone_list .ringtone_list_item:visible").find("input:checked").length))
        } else {
            if (this.listCate == "alarm") {
                a = $("#alarm_list .head_row .checkbox_all");
                a.attr("checked", ($("#alarm_list .ringtone_list .ringtone_list_item:visible").length > 0 && $("#alarm_list .ringtone_list .ringtone_list_item:visible").length == $("#alarm_list .ringtone_list .ringtone_list_item:visible").find("input:checked").length))
            }
        }
    }
    a.attr("checked") ? a.parent().css("backgroundPosition", "0px -196px") : a.parent().css("backgroundPosition", "0px -144px")
}, setAbtnStatus:function () {
    var a = false;
    if (this.listCate == "telephone") {
        if ($("#telephone_list .ringtone_list_item input:checked").length > 0) {
            a = true
        }
    } else {
        if (this.listCate == "message") {
            if ($("#message_list .ringtone_list_item input:checked").length > 0) {
                a = true
            }
        } else {
            if (this.listCate == "alarm") {
                if ($("#alarm_list .ringtone_list_item input:checked").length > 0) {
                    a = true
                }
            }
        }
    }
    if (a) {
        $("#ringtone .command .abtn_wrap a").removeClass("btn-state-disabled")
    } else {
        $("#ringtone .command .abtn_wrap a").addClass("btn-state-disabled")
    }
}, updateScrollPanel:function (a) {
    if (a == "telephone" && !_.isUndefined(Airdroid.ScrollPane.telephoneScrollAPI)) {
        Airdroid.ScrollPane.telephoneScrollAPI.reinitialise()
    } else {
        if (a == "message" && !_.isUndefined(Airdroid.ScrollPane.messageScrollAPI)) {
            Airdroid.ScrollPane.messageScrollAPI.reinitialise()
        } else {
            if (a == "alarm" && !_.isUndefined(Airdroid.ScrollPane.alarmScrollAPI)) {
                Airdroid.ScrollPane.alarmScrollAPI.reinitialise()
            } else {
                if (!_.isUndefined(Airdroid.ScrollPane.telephoneScrollAPI)) {
                    Airdroid.ScrollPane.telephoneScrollAPI.reinitialise()
                }
                if (!_.isUndefined(Airdroid.ScrollPane.messageScrollAPI)) {
                    Airdroid.ScrollPane.messageScrollAPI.reinitialise()
                }
                if (!_.isUndefined(Airdroid.ScrollPane.alarmScrollAPI)) {
                    Airdroid.ScrollPane.alarmScrollAPI.reinitialise()
                }
            }
        }
    }
}, sortHandler:function (f) {
    var l = this;
    var g = $(f.currentTarget).find("span");
    var b = g.attr("order");
    var h = g.attr("sortCol");
    var c;
    var a;
    var k;
    var j;
    $("#ringtone_grid").scrollTop(0);
    if (this.listCate == "telephone") {
        k = l.ringtone;
        j = l.ringtone_using_sys;
        a = l.telephone_list_container;
        c = this.ringtone_list.sort(function (m, e) {
            if (b == 0) {
                if (h == "name") {
                    return m[h].localeCompare(e[h])
                } else {
                    return m[h] - e[h]
                }
            } else {
                if (h == "name") {
                    return -m[h].localeCompare(e[h])
                } else {
                    return -(m[h] - e[h])
                }
            }
        })
    } else {
        if (this.listCate == "message") {
            k = l.notification;
            j = l.notification_using_sys;
            a = l.message_list_container;
            c = this.notification_list.sort(function (m, e) {
                if (b == 0) {
                    if (h == "name") {
                        return m[h].localeCompare(e[h])
                    } else {
                        return m[h] - e[h]
                    }
                } else {
                    if (h == "name") {
                        return -m[h].localeCompare(e[h])
                    } else {
                        return -(m[h] - e[h])
                    }
                }
            })
        } else {
            if (this.listCate == "alarm") {
                k = this.alarm;
                j = l.alarm_using_sys;
                a = l.alarm_list_container;
                c = this.alarm_list.sort(function (m, e) {
                    if (b == 0) {
                        if (h == "name") {
                            return m[h].localeCompare(e[h])
                        } else {
                            return m[h] - e[h]
                        }
                    } else {
                        if (h == "name") {
                            return -m[h].localeCompare(e[h])
                        } else {
                            return -(m[h] - e[h])
                        }
                    }
                })
            }
        }
    }
    this.showListView(c, a, k, j);
    if (b == 0) {
        g.attr("order", 1);
        g.parents(".head_row").find("p.order_icon").hide();
        g.siblings("p.order_icon").removeClass("order_asc").addClass("order_desc").show()
    } else {
        g.attr("order", 0);
        g.parents(".head_row").find("p.order_icon").hide();
        g.siblings("p.order_icon").removeClass("order_desc").addClass("order_asc").show()
    }
}, resetFilter:function () {
    $("#ringtone_search_input").val("");
    $(".search26_r", this.el).removeClass("search_cross")
}, filterRingtoneItem:function (e) {
    var self = this;
    var searchContent = $.trim($(e.currentTarget).val()).toLowerCase();
    var selectorStr;
    if (this.listCate == "telephone") {
        selectorStr = "#telephone_list .ringtone_list .ringtone_list_item"
    } else {
        if (this.listCate == "message") {
            selectorStr = "#message_list .ringtone_list .ringtone_list_item"
        } else {
            if (this.listCate == "alarm") {
                selectorStr = "#alarm_list .ringtone_list .ringtone_list_item"
            }
        }
    }
    if (searchContent.length == 0) {
        $(selectorStr, this.el).show();
        $(".search26_r", this.el).removeClass("search_cross");
        this.checkSelectAll();
        self.updateScrollPanel(self.listCate);
        return
    }
    var target = $(selectorStr, this.el).each(function () {
        var name = $(this).find(".col_name .name.htm"/*tpa=http://192.168.119.101:8888/.col_name .name*/).html();
        if (eval("name.match(/" + searchContent + "/i)")) {
            $(this).show()
        } else {
            $(this).hide()
        }
    });
    this.checkSelectAll();
    self.updateScrollPanel(self.listCate);
    $(".search26_r", self.el).addClass("search_cross")
}, clearRingtoneSearchFilter:function () {
    $("#ringtone_search_input", this.el).val("");
    $(".search26_r", this.el).removeClass("search_cross");
    var a;
    if (this.listCate == "telephone") {
        a = "#telephone_list .ringtone_list .ringtone_list_item"
    } else {
        if (this.listCate == "message") {
            a = "#message_list .ringtone_list .ringtone_list_item"
        } else {
            if (this.listCate == "alarm") {
                a = "#alarm_list .ringtone_list .ringtone_list_item"
            }
        }
    }
    $(a, this.el).show();
    this.checkSelectAll();
    this.updateScrollPanel(this.listCate)
}});
Airdroid.Clipboard = {};
Airdroid.Clipboard.DB = Core.extend({_hostAddress:"", $construct:function (a) {
    this._hostAddress = a
}, ReadFromPhone:function (c, b) {
    c();
    var a = this._hostAddress + "/sdctl/comm/clipboard/get?callback=?";
    ajaxHelper(a, function (e) {
        e = unescape(e);
        if (!_.isUndefined(e.err)) {
            $.publish("[to:ui]/event/clipboard/readfromphone/err", [])
        } else {
            $.publish("[to:ui]/event/clipboard/readfromphone/suc", [e.result])
        }
        b()
    }, function () {
        NetworkError();
        b()
    })
}, Push2Phone:function (b, e, c) {
    e();
    var a = this;
    $.ajax({type:"POST", dataType:"json", url:a._hostAddress + "/sdctl/comm/clipboard/set", data:{data:'content={"content":"' + encode64(encodeURIComponent(b)) + '"}'}, success:function (f) {
        if (f.err == undefined && f.result == 0) {
            $.publish("[to:ui]/event/clipboard/push2phone/suc", [])
        } else {
            $.publish("[to:ui]/event/clipboard/push2phone/fail", [])
        }
        c()
    }, error:function (f) {
        NetworkError();
        c()
    }})
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:db]/event/clipboard/readfromphone", function (c, b) {
        a.ReadFromPhone(c, b)
    });
    $.subscribe("[to:db]/event/clipboard/push2phone", function (b, e, c) {
        a.Push2Phone(b, e, c)
    })
}});
Airdroid.Clipboard.UI = Core.extend({_windowId:"clipboard", _tpl:null, $construct:function () {
    this._tpl = _.template(Airdroid.Util.GetTemplate("clipboard"))
}, ShowMe:function () {
    var c = this;
    var b = this._windowId;
    var a = Airdroid.UsedLang.Workspace._module_name_clipboard;
    var f = "ui/theme/default/images/icon_clipboard_80.png"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/icon_clipboard_80.png*/;
    if ($("#w_" + b).length == 1) {
        $.publish("/e/t/bid", ["add", b, {name:a, iconUrl:f}, true]);
        $("#w_" + b).show().css("z-index", getTopperZIndex() + 2)
    } else {
        var e = $(c._tpl({UsedLang:Airdroid.UsedLang.Clipboard}));
        e.attr("id", b);
        e.appendTo($("#main_container"));
        Windownize(e, {title:a, icon:f, minWidth:400, minHeight:200, resize:function (o, n) {
            var m = n.helper;
            var l = m.width() - 23;
            var k = m.height() - 46;
            m.find("#clipboard").css("width", l + "px");
            m.find("#clipboard").css("height", k + "px");
            m.find(".clipboard-content").css("height", k - 40 + "px")
        }});
        var g = e.closest(".window");
        g.find(".window-x").click(function () {
            g.remove()
        });
        $.publish("/e/t/bid", ["add", b, {name:a, iconUrl:f}, true]);
        $("#m" + b).trigger("click");
        $("#w_" + b).css("z-index", getTopperZIndex() + 2);
        var j = function () {
            DisableButton($("#clipboard-read-from-phone", e));
            DisableButton($("#clipboard-push-2-phone", e));
            e.block({message:'<img src="ui/theme/default/images/loading.gif"/*tpa=http://192.168.119.101:8888/ui/theme/default/images/loading.gif*//>', css:{border:"none", width:"130px", height:"50px", backgroundColor:"none", padding:"0px"}, overlayCSS:{backgroundColor:"none", cursor:"default"}})
        };
        var h = function () {
            EnableButton($("#clipboard-read-from-phone", e));
            EnableButton($("#clipboard-push-2-phone", e));
            e.unblock()
        };
        $("#clipboard-read-from-phone", e).click(function () {
            $.publish("[to:db]/event/clipboard/readfromphone", [j, h])
        });
        $("#clipboard-push-2-phone", e).click(function () {
            var k = $(".clipboard-textarea", e).val();
            if (k.length > 2048) {
                showDelayMask(Airdroid.UsedLang.Clipboard._plain_tip_too_long.format(k.length - 2048), $("#w_" + c._windowId));
                return false
            }
            $.publish("[to:db]/event/clipboard/push2phone", [k, j, h])
        });
        $.publish("[to:db]/event/clipboard/readfromphone", [j, h])
    }
}, ReadFromPhoneSuc:function (a) {
    $("#w_" + this._windowId).find(".clipboard-content > textarea").val(a);
    if (a == "") {
        showDelayMask(Airdroid.UsedLang.Clipboard._plain_tip_empty, $("#w_" + this._windowId))
    }
}, ReadFromPhoneFail:function () {
    showMsgBox(Airdroid.UsedLang.Clipboard._msgbox_readfail)
}, Push2PhoneSuc:function () {
    showDelayMask(Airdroid.UsedLang.Clipboard._plain_tip_pushsuc, $("#w_" + this._windowId))
}, Push2PhoneFail:function () {
    showMsgBox(Airdroid.UsedLang.Clipboard._msgbox_pushfail)
}, StartListen:function () {
    var a = this;
    $.subscribe("[to:ui]/event/clipboard/show", function () {
        a.ShowMe()
    });
    $.subscribe("[to:ui]/event/clipboard/readfromphone/suc", function (b) {
        a.ReadFromPhoneSuc(b)
    });
    $.subscribe("[to:ui]/event/clipboard/readfromphone/fail", function (b) {
        a.ReadFromPhoneFail()
    });
    $.subscribe("[to:ui]/event/clipboard/push2phone/suc", function () {
        a.Push2PhoneSuc()
    });
    $.subscribe("[to:ui]/event/clipboard/push2phone/fail", function () {
        a.Push2PhoneFail()
    })
}});
var loginEnable = function () {
    Airdroid.Util.Writable($("#tbox_pwd"));
    Airdroid.Util.Enable($("#btn_login"));
    $("#btn_login").attr("class", "btn_login")
};
var loginDisable = function () {
    Airdroid.Util.Readonly($("#tbox_pwd"));
    Airdroid.Util.Disable($("#btn_login"));
    $("#btn_login").attr("class", "btn_login2")
};
$(document).ready(function () {
    ajaxHelper("http://" + (Airdroid.Config.Cloudy ? Airdroid.Config.CloudyAddress : window.location.host) + "/sdctl/query/deviceinfo/?callback=?", function (c) {
        $("#btn_login").html(Airdroid.UsedLang.Login._button_login);
        $("#version_text").html(Airdroid.UsedLang.Login._plain_text_version);
        $("#version").html(c.ver);
        EnableButton($("#btn_login"))
    }, function () {
        $("#btn_login").html("Login");
        $("#version_text").html("Version:");
        $("#version").html("Unknown");
        EnableButton($("#btn_login"))
    });
    $(document).bind("contextmenu",function (c) {
        $.clearContextMenu()
    }).click(function () {
        if ($("#play_type").css("display") != "none") {
            $("#play_type").hide()
        }
        if ($("#more_menu_opration").css("display") != "none") {
            $("#more_menu_opration").hide()
        }
        $.clearContextMenu()
    });
    (function (c) {
        c.fn.vAlign = function () {
            return this.each(function (g) {
                var e = c(this).height();
                var h = c(this).parent().height();
                var f = Math.ceil((h - e) / 2);
                c(this).css("margin-top", f)
            })
        }
    })(jQuery);
    $("a").live("focus", function () {
        if (this.blur) {
            this.blur()
        }
    });
    Airdroid.debug = false;
    if ($.browser.safari || $.browser.mozilla) {
        $("#login").show()
    } else {
        showSupportBrowserTip()
    }
    var b = function (f) {
        var c = Math.floor(f / 60);
        var e = f % 60;
        return(c == 0 ? "" : c + "m ") + e + "s"
    };
    $(window).resize(function () {
        $("#login").vAlign();
        if ($("#support_browser").length > 0) {
            var c = $("#support_browser");
            c.css({top:($("body").height() - c.height()) / 2 + "px", left:($("body").width() - c.width()) / 2 + "px"})
        }
        if ($(".issueTip").is(":visible")) {
            $(".issueTip").css("left", $(window).width() / 2 - $(".issueTip").width() / 2 - 16 + "px");
            if (!($(window).height() <= 668 || $(window).width() <= 924)) {
                $(".issueTip").hide()
            }
        } else {
            if ($(window).height() <= 668 || $(window).width() <= 924) {
                $(".betterView").show();
                $(".issueTip").show();
                $(".issueTip").css("left", $(window).width() / 2 - $(".issueTip").width() / 2 - 16 + "px")
            }
        }
    });
    var a = setInterval(function () {
        $(window).trigger("resize");
        if ($("#login").offset().top > 50) {
            try {
                clearInterval(a);
                $(".logo").show();
                $(".version").show();
                $(".login_pwd").show();
                $(".copyright").show();
                if ($(window).height() <= 668 || $(window).width() <= 924) {
                    $(".betterView").show();
                    $(".issueTip").show();
                    $(".issueTip").css("left", $(window).width() / 2 - $(".issueTip").width() / 2 - 16 + "px")
                }
                $("#lmask").remove();
                $("#tbox_pwd").trigger("focus");
                if ($(window).width() < 530) {
                    $("body").css("width", "530px")
                }
                if ($(window).height() < 330) {
                    $("body").css("height", "330px")
                }
                if ($(window).width() < 530 || $(window).height() < 330) {
                    $("html").css("overflow", "scroll");
                    $("body").css("overflow", "hidden")
                }
                var f = ["frame.png"/*tpa=http://192.168.119.101:8888/frame.png*/, "left_bg.png"/*tpa=http://192.168.119.101:8888/left_bg.png*/, "summary_bg.png"/*tpa=http://192.168.119.101:8888/summary_bg.png*/, "until.png"/*tpa=http://192.168.119.101:8888/until.png*/, "form_container_bg.png"/*tpa=http://192.168.119.101:8888/form_container_bg.png*/, "5_container_bg.png"/*tpa=http://192.168.119.101:8888/5_container_bg.png*/, "app_info_bg.png"/*tpa=http://192.168.119.101:8888/app_info_bg.png*/, "app_info.png"/*tpa=http://192.168.119.101:8888/app_info.png*/, "app_list_bg.png"/*tpa=http://192.168.119.101:8888/app_list_bg.png*/, "app_list_container_bg.png"/*tpa=http://192.168.119.101:8888/app_list_container_bg.png*/, "alert.png"/*tpa=http://192.168.119.101:8888/alert.png*/, "confirm.png"/*tpa=http://192.168.119.101:8888/confirm.png*/, "contacts_form_bg.png"/*tpa=http://192.168.119.101:8888/contacts_form_bg.png*/, "contacts_form_container_bg.png"/*tpa=http://192.168.119.101:8888/contacts_form_container_bg.png*/, "file/dir.png"/*tpa=http://192.168.119.101:8888/file/dir.png*/, "file/dir_empty.png"/*tpa=http://192.168.119.101:8888/file/dir_empty.png*/, "file/grid_dir.png"/*tpa=http://192.168.119.101:8888/file/grid_dir.png*/, "file/grid_dirempty.png"/*tpa=http://192.168.119.101:8888/file/grid_dirempty.png*/, "file/ui-icons_0078ae_256x240.png"/*tpa=http://192.168.119.101:8888/file/ui-icons_0078ae_256x240.png*/, "file/ui-icons_f7a50d_256x240.png"/*tpa=http://192.168.119.101:8888/file/ui-icons_f7a50d_256x240.png*/];
                for (var e = 0; e < f.length; e++) {
                    f[e] = "./ui/theme/default/images/" + f[e]
                }
                $.loadImages(f, function () {
                })
            } catch (c) {
            }
        }
    }, 1000);
    $.subscribe("[to:ui]/event/login/load/complete", function () {
        $("#lmask").remove();
        if (!$.browser.msie) {
            $("#login").fadeOut(500, function () {
                clearInterval(a);
                $(window).unbind("resize");
                $(this).hide();
                $("#tbox_pwd").val("");
                $(".clew").html(Airdroid.UsedLang.Login._plain_text_locked);
                loginEnable();
                $("#btn_login").attr("l", "true");
                $("#login").css("margin", "0");
                $("#taskbar").fadeIn(1600, function () {
                });
                $("#main_container").fadeIn(1600, function () {
                    storeCurrentDesktopMap()
                });
                resizeControll();
                $(window).trigger("resize")
            })
        } else {
            clearInterval(a);
            $(window).unbind("resize");
            $("#login").hide();
            $("#tbox_pwd").val("");
            $(".clew").html(Airdroid.UsedLang.Login._plain_text_locked);
            loginEnable();
            $("#btn_login").attr("l", "true");
            $("#login").css("margin", "0");
            $("#taskbar").show();
            $("#main_container").show();
            storeCurrentDesktopMap();
            resizeControll();
            $(window).trigger("resize")
        }
    });
    $.subscribe("[to:ui]/event/login/major/complete", function () {
        updateLoginProcess(80, true);
        setTimeout(function () {
            Airdroid.Cache.SummaryModel = new Airdroid.Summary.Model;
            Airdroid.Cache.SummaryView = new Airdroid.Summary.View({model:Airdroid.Cache.SummaryModel});
            Airdroid.Cache.SummaryView.bindChange();
            updateLoginProcess(90, true);
            setTimeout(function () {
                store.clear();
                Airdroid.Media.initJPlayer();
                App = Airdroid.Cache.WorkSpaceView;
                updateLoginProcess(100, true)
            }, 300)
        }, 300)
    });
    Airdroid.Lock = false;
    Airdroid.QueryLock = false;
    $("#btn_login").bind("click", function () {
        if ($(this).hasClass("btn-state-disabled")) {
            return false
        }
        var c = this;
        if (Airdroid.Lock) {
            return false
        } else {
            var e = $("#tbox_pwd").val();
            if (e == "") {
                $("#tbox_pwd").bind("keyup", function () {
                    $("#tbox_pwd").unbind("keyup");
                    $(".clew").hide()
                });
                $(".clew").html(Airdroid.UsedLang.Login._plain_text_need_password);
                $(".clew").show();
                return false
            } else {
                if (Airdroid.QueryLock) {
                    return false
                } else {
                    loginDisable();
                    Airdroid.QueryLock = true;
                    $(".clew").html("<span style='color:green'>" + Airdroid.UsedLang.Login._plain_text_connecting + "</span>");
                    $(".clew").show();
                    $.jsonp({url:(Airdroid.Config.Cloudy ? "http://" + Airdroid.Config.CloudyAddress : "http://" + window.location.host) + "/sdctl/comm/checklogin/?key=" + hex_md5(e) + "&callback=?", success:function (h) {
                        var f = h.pass;
                        var j = h.left_count;
                        var g = h.left_time;
                        if (f == 0) {
                            $(".clew").html(Airdroid.UsedLang.Login._nf1_plain_text_ntimetry.format(j));
                            $(".clew").show();
                            loginEnable()
                        } else {
                            if (f == 1) {
                                $(".issueTip").remove();
                                if ($(c).attr("l") != undefined) {
                                    $("body").unblock();
                                    $(".show_desktop").trigger("click");
                                    return
                                }
                                $(".clew").html("<div class='process-blue meter' style='margin-top:2px;width:200px'><span id='login-processbar' style='width: 0%'><span></span></span></div>");
                                Airdroid.LoadingProcess = $("#login-processbar");
                                Airdroid.Env.ConnectionAddress = Airdroid.Config.Cloudy ? Airdroid.Config.CloudyAddress : window.location.host;
                                Airdroid.Cache.WorkSpaceModel = new Airdroid.WorkSpace.Model;
                                updateLoginProcess(20, true);
                                setTimeout(function () {
                                    Airdroid.Cache.WorkSpaceView = new Airdroid.WorkSpace.View({model:Airdroid.Cache.WorkSpaceModel})
                                }, 300);
                                window.onunload = function () {
                                    $.jsonp({type:"GET", url:"http://" + Airdroid.Env.ConnectionAddress + "/sdctl/comm/logout/?callback=?", async:true, cache:false, dataType:"jsonp"})
                                }
                            } else {
                                if (f == 2) {
                                    Airdroid.Lock = true;
                                    loginDisable();
                                    $(".clew").html(Airdroid.UsedLang.Login._nf1_plain_text_locked_waiting.format(b(g)));
                                    Airdroid.Cache.Lefttime = g;
                                    Airdroid.Timer = setInterval(function () {
                                        if (Airdroid.Cache.Lefttime <= 0) {
                                            loginEnable();
                                            $(".clew").hide();
                                            clearInterval(Airdroid.Timer);
                                            Airdroid.Lock = false
                                        } else {
                                            Airdroid.Cache.Lefttime--;
                                            $("#wait_time").html(b(Airdroid.Cache.Lefttime))
                                        }
                                    }, 1000);
                                    $(".clew").show()
                                } else {
                                    if (f == 3) {
                                        $(".clew").html(Airdroid.UsedLang.Login._plain_text_system_another_already_login);
                                        $(".clew").show();
                                        loginEnable()
                                    }
                                }
                            }
                        }
                    }, error:function () {
                        $(".clew").html(Airdroid.UsedLang.Login._plain_text_network_error);
                        $(".clew").show();
                        loginEnable()
                    }, complete:function () {
                        Airdroid.QueryLock = false
                    }})
                }
            }
        }
    })
});